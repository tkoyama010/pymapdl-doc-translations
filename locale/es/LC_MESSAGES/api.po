# SOME DESCRIPTIVE TITLE.
# Copyright (C) (c) 2025 ANSYS, Inc. All rights reserved
# This file is distributed under the same license as the ansys-mapdl-core package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: ansys-mapdl-core 0.69.dev0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-02-18 00:17+0000\n"
"PO-Revision-Date: 2024-05-21 13:45+0000\n"
"Language-Team: Spanish (https://app.transifex.com/tkoyama010/teams/192978/es/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: es\n"
"Plural-Forms: nplurals=3; plural=n == 1 ? 0 : n != 0 && n % 1000000 == 0 ? 1 : 2;\n"

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.Mapdl.add_file_handler.rst:2
msgid "ansys.mapdl.core.Mapdl.add\\_file\\_handler"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_core.pydocstring of
#: ansys.mapdl.core.mapdl_core._MapdlCore.add_file_handler:2
msgid ""
"Add a file handler to the mapdl log.  This allows you to redirect the APDL "
"logging to a file."
msgstr ""

#: ../../pymapdl/doc/source/api/parameters.rst:4
#: ../../pymapdl/src/ansys/mapdl/core/_commands/apdl/parameter_definition.pydocstring
#: of
#: ansys.mapdl.core._commands.apdl.parameter_definition.ParameterDefinition.get:0
#: ../../pymapdl/src/ansys/mapdl/core/component.pydocstring of
#: ansys.mapdl.core.component.Component:0
#: ../../pymapdl/src/ansys/mapdl/core/component.pydocstring of
#: ansys.mapdl.core.component.ComponentManager.__init__:0
#: ../../pymapdl/src/ansys/mapdl/core/convert.pydocstring of
#: ansys.mapdl.core.convert.convert_apdl_block:0
#: ../../pymapdl/src/ansys/mapdl/core/convert.pydocstring of
#: ansys.mapdl.core.convert.convert_script:0
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._ComponentQueries.centrx:0
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._ComponentQueries.centry:0
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._ComponentQueries.centrz:0
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._ComponentQueries.kx:0
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._ComponentQueries.ky:0
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._ComponentQueries.kz:0
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._ComponentQueries.nx:0
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._ComponentQueries.ny:0
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._ComponentQueries.nz:0
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._DisplacementComponentQueries.rotx:0
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._DisplacementComponentQueries.roty:0
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._DisplacementComponentQueries.rotz:0
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._DisplacementComponentQueries.ux:0
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._DisplacementComponentQueries.uy:0
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._DisplacementComponentQueries.uz:0
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._InverseGetComponentQueries.kp:0
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._InverseGetComponentQueries.node:0
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/line_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.line_queries._LineFractionCoordinateQueries.lx:0
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/line_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.line_queries._LineFractionCoordinateQueries.ly:0
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/line_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.line_queries._LineFractionCoordinateQueries.lz:0
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/line_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.line_queries._LineFractionSlopeQueries.lsx:0
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/line_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.line_queries._LineFractionSlopeQueries.lsy:0
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/line_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.line_queries._LineFractionSlopeQueries.lsz:0
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/selection_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.selection_queries._SelectionStatusQueries.asel:0
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/selection_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.selection_queries._SelectionStatusQueries.esel:0
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/selection_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.selection_queries._SelectionStatusQueries.ksel:0
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/selection_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.selection_queries._SelectionStatusQueries.lsel:0
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/selection_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.selection_queries._SelectionStatusQueries.nsel:0
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/selection_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.selection_queries._SelectionStatusQueries.vsel:0
#: ../../pymapdl/src/ansys/mapdl/core/krylov.pydocstring of
#: ansys.mapdl.core.krylov.KrylovSolver.__init__:0
#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.close_all_local_instances:0
#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:0
#: ../../pymapdl/src/ansys/mapdl/core/logging.pydocstring of
#: ansys.mapdl.core.logging.Logger:0
#: ../../pymapdl/src/ansys/mapdl/core/logging.pydocstring of
#: ansys.mapdl.core.logging.Logger.__init__:0
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_core.pydocstring of
#: ansys.mapdl.core.mapdl_core._MapdlCore.add_file_handler:0
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_core.pydocstring of
#: ansys.mapdl.core.mapdl_core._MapdlCore.input_strings:0
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_core.pydocstring of
#: ansys.mapdl.core.mapdl_core._MapdlCore.open_apdl_log:0
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_core.pydocstring of
#: ansys.mapdl.core.mapdl_core._MapdlCore.open_gui:0
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_core.pydocstring of
#: ansys.mapdl.core.mapdl_core._MapdlCore.run:0
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_core.pydocstring of
#: ansys.mapdl.core.mapdl_core._MapdlCore.run_as_routine:0
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_core.pydocstring of
#: ansys.mapdl.core.mapdl_core._MapdlCore.run_multiline:0
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_core.pydocstring of
#: ansys.mapdl.core.mapdl_core._MapdlCore.set_log_level:0
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.aplot:0
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.eplot:0
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.file:0
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.kplot:0
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.lplot:0
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.nplot:0
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.vplot:0
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.get_array:0
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.get_nodal_constrains:0
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.get_nodal_loads:0
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.get_value:0
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.load_array:0
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.load_table:0
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_geometry.pydocstring of
#: ansys.mapdl.core.mapdl_geometry.Geometry.__init__:0
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_geometry.pydocstring of
#: ansys.mapdl.core.mapdl_geometry.LegacyGeometry.__init__:0
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc:0
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.download:0
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.download_project:0
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.download_result:0
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.get_esol:0
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.get_nsol:0
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.get_variable:0
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.kill_job:0
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.list_files:0
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.screenshot:0
#: ../../pymapdl/src/ansys/mapdl/core/parameters.pydocstring of
#: ansys.mapdl.core.parameters.Parameters.__init__:0
#: ../../pymapdl/src/ansys/mapdl/core/plotting/visualizer.pydocstring of
#: ansys.mapdl.core.plotting.visualizer.MapdlPlotter:0
#: ../../pymapdl/src/ansys/mapdl/core/pool.pydocstring of
#: ansys.mapdl.core.pool.MapdlPool:0
#: ../../pymapdl/src/ansys/mapdl/core/solution.pydocstring of
#: ansys.mapdl.core.solution.Solution.__init__:0
#: ../../../../../../../opt/hostedtoolcache/Python/3.10.16/x64/lib/python3.10/site-packages/ansys/tools/path/path.pydocstring
#: of ansys.tools.path.path.find_mapdl:0
msgid "Parameters"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_core.pydocstring of
#: ansys.mapdl.core.mapdl_core._MapdlCore.add_file_handler:8
msgid "**filepath** : :class:`python:str`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/component.pydocstring of
#: ansys.mapdl.core.component.Component:7
#: ../../pymapdl/src/ansys/mapdl/core/convert.pydocstring of
#: ansys.mapdl.core.convert.convert_apdl_block:6
#: ../../pymapdl/src/ansys/mapdl/core/convert.pydocstring of
#: ansys.mapdl.core.convert.convert_script:6
#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.get_default_ansys:10
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_core.pydocstring of
#: ansys.mapdl.core.mapdl_core._MapdlCore.add_file_handler:7
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_core.pydocstring of
#: ansys.mapdl.core.mapdl_core._MapdlCore.add_file_handler:14
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_core.pydocstring of
#: ansys.mapdl.core.mapdl_core._MapdlCore.open_apdl_log:6
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_core.pydocstring of
#: ansys.mapdl.core.mapdl_core._MapdlCore.run:8
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_core.pydocstring of
#: ansys.mapdl.core.mapdl_core._MapdlCore.run_as_routine:7
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_core.pydocstring of
#: ansys.mapdl.core.mapdl_core._MapdlCore.run_multiline:13
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.file:7
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.get_value:17
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.load_array:8
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.load_table:7
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.download_result:13
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.get_esol:15
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.get_esol:18
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.get_nsol:9
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.get_nsol:13
#: ../../../../../../../opt/hostedtoolcache/Python/3.10.16/x64/lib/python3.10/site-packages/ansys/tools/path/path.pydocstring
#: of ansys.tools.path.path.find_mapdl:21
msgid "python:str"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_core.pydocstring of
#: ansys.mapdl.core.mapdl_core._MapdlCore.add_file_handler:9
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_core.pydocstring of
#: ansys.mapdl.core.mapdl_core._MapdlCore.open_apdl_log:8
msgid "Filename of the log."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_core.pydocstring of
#: ansys.mapdl.core.mapdl_core._MapdlCore.add_file_handler:11
msgid "**append** : :ref:`bool <python:bltin-boolean-values>`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:197
#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:202
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_core.pydocstring of
#: ansys.mapdl.core.mapdl_core._MapdlCore.add_file_handler:10
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_core.pydocstring of
#: ansys.mapdl.core.mapdl_core._MapdlCore.run:20
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_core.pydocstring of
#: ansys.mapdl.core.mapdl_core._MapdlCore.run:25
msgid "bool"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_core.pydocstring of
#: ansys.mapdl.core.mapdl_core._MapdlCore.add_file_handler:12
msgid ""
"When ``True``, appends to an existing log file.  When ``False``, overwrites "
"the log file if it already exists."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_core.pydocstring of
#: ansys.mapdl.core.mapdl_core._MapdlCore.add_file_handler:15
msgid "**level** : :class:`python:str`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_core.pydocstring of
#: ansys.mapdl.core.mapdl_core._MapdlCore.add_file_handler:16
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_core.pydocstring of
#: ansys.mapdl.core.mapdl_core._MapdlCore.set_log_level:8
msgid "Log level.  Must be one of: ``'DEBUG', 'INFO', 'WARNING', 'ERROR'``."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/_commands/apdl/parameter_definition.pydocstring
#: of
#: ansys.mapdl.core._commands.apdl.parameter_definition.ParameterDefinition.get:112
#: ../../pymapdl/src/ansys/mapdl/core/component.pydocstring of
#: ansys.mapdl.core.component.Component:27
#: ../../pymapdl/src/ansys/mapdl/core/component.pydocstring of
#: ansys.mapdl.core.component.ComponentManager:24
#: ../../pymapdl/src/ansys/mapdl/core/convert.pydocstring of
#: ansys.mapdl.core.convert.convert_apdl_block:100
#: ../../pymapdl/src/ansys/mapdl/core/convert.pydocstring of
#: ansys.mapdl.core.convert.convert_script:100
#: ../../pymapdl/src/ansys/mapdl/core/database/database.pydocstring of
#: ansys.mapdl.core.database.database.MapdlDb:19
#: ../../pymapdl/src/ansys/mapdl/core/database/elems.pydocstring of
#: ansys.mapdl.core.database.elems.DbElems:19
#: ../../pymapdl/src/ansys/mapdl/core/database/nodes.pydocstring of
#: ansys.mapdl.core.database.nodes.DbNodes:19
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._ComponentQueries.centrx:32
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._ComponentQueries.centry:32
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._ComponentQueries.centrz:32
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._ComponentQueries.kx:30
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._ComponentQueries.ky:30
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._ComponentQueries.kz:30
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._ComponentQueries.nx:31
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._ComponentQueries.ny:31
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._ComponentQueries.nz:31
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._DisplacementComponentQueries.rotx:30
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._DisplacementComponentQueries.roty:30
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._DisplacementComponentQueries.rotz:30
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._DisplacementComponentQueries.ux:30
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._DisplacementComponentQueries.uy:30
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._DisplacementComponentQueries.uz:30
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._InverseGetComponentQueries.kp:39
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._InverseGetComponentQueries.node:39
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/inline_functions.pydocstring
#: of ansys.mapdl.core.inline_functions.inline_functions.Query:62
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/line_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.line_queries._LineFractionCoordinateQueries.lx:35
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/line_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.line_queries._LineFractionCoordinateQueries.ly:35
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/line_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.line_queries._LineFractionCoordinateQueries.lz:35
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/line_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.line_queries._LineFractionSlopeQueries.lsx:37
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/line_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.line_queries._LineFractionSlopeQueries.lsy:37
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/line_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.line_queries._LineFractionSlopeQueries.lsz:37
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/selection_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.selection_queries._SelectionStatusQueries.asel:34
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/selection_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.selection_queries._SelectionStatusQueries.esel:34
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/selection_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.selection_queries._SelectionStatusQueries.ksel:34
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/selection_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.selection_queries._SelectionStatusQueries.lsel:34
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/selection_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.selection_queries._SelectionStatusQueries.nsel:34
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/selection_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.selection_queries._SelectionStatusQueries.vsel:35
#: ../../pymapdl/src/ansys/mapdl/core/krylov.pydocstring of
#: ansys.mapdl.core.krylov.KrylovSolver:32
#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.close_all_local_instances:28
#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.get_default_ansys:27
#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.get_default_ansys_path:24
#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.get_default_ansys_version:24
#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:342
#: ../../pymapdl/src/ansys/mapdl/core/logging.pydocstring of
#: ansys.mapdl.core.logging.Logger:37
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_core.pydocstring of
#: ansys.mapdl.core.mapdl_core._MapdlCore.add_file_handler:31
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_core.pydocstring of
#: ansys.mapdl.core.mapdl_core._MapdlCore.input_strings:32
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_core.pydocstring of
#: ansys.mapdl.core.mapdl_core._MapdlCore.open_apdl_log:29
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_core.pydocstring of
#: ansys.mapdl.core.mapdl_core._MapdlCore.open_gui:30
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_core.pydocstring of
#: ansys.mapdl.core.mapdl_core._MapdlCore.run:63
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_core.pydocstring of
#: ansys.mapdl.core.mapdl_core._MapdlCore.run_as_routine:24
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_core.pydocstring of
#: ansys.mapdl.core.mapdl_core._MapdlCore.run_multiline:35
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_core.pydocstring of
#: ansys.mapdl.core.mapdl_core._MapdlCore.set_log_level:25
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.aplot:79
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.eplot:90
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.file:37
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.lplot:54
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.nplot:93
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.vplot:60
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.get_array:62
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.get_value:81
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.load_array:31
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.load_table:76
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.Mapdl.allow_ignore:22
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.Mapdl.chain_commands:34
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.Mapdl.directory:19
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.Mapdl.ignore_errors:26
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.Mapdl.last_response:19
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.Mapdl.mute:24
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.Mapdl.non_interactive:34
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.Mapdl.result:23
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.Mapdl.version:19
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc:74
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.download:60
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.download_result:34
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.list_files:30
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.mute:24
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.upload:32
#: ../../pymapdl/src/ansys/mapdl/core/parameters.pydocstring of
#: ansys.mapdl.core.parameters.Parameters:22
#: ../../pymapdl/src/ansys/mapdl/core/plotting/theme.pydocstring of
#: ansys.mapdl.core.plotting.theme.MapdlTheme:24
#: ../../pymapdl/src/ansys/mapdl/core/pool.pydocstring of
#: ansys.mapdl.core.pool.MapdlPool:101
#: ../../pymapdl/src/ansys/mapdl/core/post.pydocstring of
#: ansys.mapdl.core.post.PostProcessing:19
#: ../../pymapdl/src/ansys/mapdl/core/solution.pydocstring of
#: ansys.mapdl.core.solution.Solution:24
#: ../../pymapdl/src/ansys/mapdl/core/xpl.pydocstring of
#: ansys.mapdl.core.xpl.ansXpl:19
#: ../../../../../../../opt/hostedtoolcache/Python/3.10.16/x64/lib/python3.10/site-packages/ansys/tools/path/path.pydocstring
#: of ansys.tools.path.path.find_mapdl:40
#: ../../../../../../../opt/hostedtoolcache/Python/3.10.16/x64/lib/python3.10/site-packages/ansys/tools/path/path.pydocstring
#: of ansys.tools.path.path.get_available_ansys_installations:31
msgid "Examples"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_core.pydocstring of
#: ansys.mapdl.core.mapdl_core._MapdlCore.add_file_handler:32
msgid "Start writing the log to a new file named \"mapdl.log\""
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.Mapdl.allow_ignore.rst:2
msgid "ansys.mapdl.core.Mapdl.allow\\_ignore"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:80:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.Mapdl.allow_ignore:2
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.Mapdl.ignore_errors:2
msgid "Invalid commands will be ignored rather than exceptions"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.Mapdl.allow_ignore:4
msgid ""
"A command executed in the wrong processor will raise an exception when "
"``allow_ignore=False``.  This is the default behavior."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.Mapdl.allow_ignore:27
msgid "Ignore these messages by setting allow_ignore=True"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.Mapdl.allow_ignore:34
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.Mapdl.ignore_errors:38
msgid ""
"*** WARNING *** CP = 0.372 TIME= 21:39:58 K is not a recognized POST1 "
"command, abbreviation, or macro. This command will be ignored."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.Mapdl.aplot.rst:2
msgid "ansys.mapdl.core.Mapdl.aplot"
msgstr ""

#: ../../pymapdl/doc/source/api/plotting.rst:20:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.aplot:2
msgid "Display the selected areas."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.aplot:4
msgid ""
"Displays the selected areas from ``na1`` to ``na2`` in steps of ``ninc``."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.aplot:7
msgid "APDL Command: ``APLOT``"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.aplot:10
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.eplot:7
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.kplot:7
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.lplot:7
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.nplot:7
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.vplot:7
msgid ""
"PyMAPDL plotting commands with ``vtk=True`` ignore any values set with the "
"``PNUM`` command."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.aplot:15
msgid "**na1** : :class:`python:int`, :obj:`optional`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:25
#: ../../pymapdl/src/ansys/mapdl/core/logging.pydocstring of
#: ansys.mapdl.core.logging.Logger:8
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.aplot:14
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.aplot:17
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.aplot:20
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.aplot:37
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.vplot:34
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc:10
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.download:26
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.get_nsol:22
#: ../../pymapdl/src/ansys/mapdl/core/pool.pydocstring of
#: ansys.mapdl.core.pool.MapdlPool:8
msgid "python:int, optional"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.aplot:16
msgid "Minimum area to display."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.aplot:18
msgid "**na2** : :class:`python:int`, :obj:`optional`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.aplot:19
msgid "Maximum area to display."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.aplot:21
msgid "**ninc** : :class:`python:int`, :obj:`optional`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.aplot:22
msgid "Increment between minimum and maximum area."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.aplot:24
msgid "**degen, str, optional**"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.aplot:25
msgid "Degeneracy marker.  This option is ignored when ``vtk=True``."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.aplot:27
msgid "**scale** : :class:`python:float`, :obj:`optional`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:30
#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:69
#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:158
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.aplot:26
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.eplot:63
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.eplot:68
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.nplot:70
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.nplot:75
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc:13
msgid "python:float, optional"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.aplot:28
msgid ""
"Scale factor for the size of the degeneracy-marker star. The scale is the "
"size in window space (-1 to 1 in both directions) (defaults to 0.075).  This"
" option is ignored when ``vtk=True``."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.aplot:33
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.eplot:12
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.kplot:25
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.lplot:17
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.nplot:21
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.vplot:30
msgid "**vtk** : :ref:`bool <python:bltin-boolean-values>`, :obj:`optional`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/convert.pydocstring of
#: ansys.mapdl.core.convert.convert_apdl_block:12
#: ../../pymapdl/src/ansys/mapdl/core/convert.pydocstring of
#: ansys.mapdl.core.convert.convert_apdl_block:19
#: ../../pymapdl/src/ansys/mapdl/core/convert.pydocstring of
#: ansys.mapdl.core.convert.convert_apdl_block:22
#: ../../pymapdl/src/ansys/mapdl/core/convert.pydocstring of
#: ansys.mapdl.core.convert.convert_apdl_block:28
#: ../../pymapdl/src/ansys/mapdl/core/convert.pydocstring of
#: ansys.mapdl.core.convert.convert_apdl_block:32
#: ../../pymapdl/src/ansys/mapdl/core/convert.pydocstring of
#: ansys.mapdl.core.convert.convert_apdl_block:46
#: ../../pymapdl/src/ansys/mapdl/core/convert.pydocstring of
#: ansys.mapdl.core.convert.convert_apdl_block:50
#: ../../pymapdl/src/ansys/mapdl/core/convert.pydocstring of
#: ansys.mapdl.core.convert.convert_apdl_block:54
#: ../../pymapdl/src/ansys/mapdl/core/convert.pydocstring of
#: ansys.mapdl.core.convert.convert_apdl_block:59
#: ../../pymapdl/src/ansys/mapdl/core/convert.pydocstring of
#: ansys.mapdl.core.convert.convert_apdl_block:63
#: ../../pymapdl/src/ansys/mapdl/core/convert.pydocstring of
#: ansys.mapdl.core.convert.convert_apdl_block:69
#: ../../pymapdl/src/ansys/mapdl/core/convert.pydocstring of
#: ansys.mapdl.core.convert.convert_apdl_block:73
#: ../../pymapdl/src/ansys/mapdl/core/convert.pydocstring of
#: ansys.mapdl.core.convert.convert_apdl_block:77
#: ../../pymapdl/src/ansys/mapdl/core/convert.pydocstring of
#: ansys.mapdl.core.convert.convert_script-1
#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:48
#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:81
#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:85
#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:107
#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:119
#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:128
#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:141
#: ../../pymapdl/src/ansys/mapdl/core/logging.pydocstring of
#: ansys.mapdl.core.logging.Logger:12
#: ../../pymapdl/src/ansys/mapdl/core/logging.pydocstring of
#: ansys.mapdl.core.logging.Logger:15
#: ../../pymapdl/src/ansys/mapdl/core/logging.pydocstring of
#: ansys.mapdl.core.logging.Logger.__init__:9
#: ../../pymapdl/src/ansys/mapdl/core/logging.pydocstring of
#: ansys.mapdl.core.logging.Logger.__init__:12
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_core.pydocstring of
#: ansys.mapdl.core.mapdl_core._MapdlCore.open_gui:6
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_core.pydocstring of
#: ansys.mapdl.core.mapdl_core._MapdlCore.open_gui:10
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_core.pydocstring of
#: ansys.mapdl.core.mapdl_core._MapdlCore.run:11
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.aplot:32
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.aplot:41
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.aplot:44
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.aplot:56
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.eplot:11
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.eplot:15
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.eplot:18
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.eplot:24
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.eplot:28
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.kplot:24
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.kplot:27
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.lplot:16
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.lplot:19
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.lplot:22
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.lplot:25
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.nplot:20
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.nplot:25
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.nplot:31
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.nplot:35
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.vplot:29
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.vplot:38
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.load_table:57
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc:22
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc:26
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc:30
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc:35
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc:39
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.download:29
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.download:33
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.download_project:13
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.download_result:10
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.list_files:6
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.upload-1
#: ../../pymapdl/src/ansys/mapdl/core/plotting/visualizer.pydocstring of
#: ansys.mapdl.core.plotting.visualizer.MapdlPlotter:8
#: ../../pymapdl/src/ansys/mapdl/core/pool.pydocstring of
#: ansys.mapdl.core.pool.MapdlPool:13
#: ../../pymapdl/src/ansys/mapdl/core/pool.pydocstring of
#: ansys.mapdl.core.pool.MapdlPool:44
#: ../../pymapdl/src/ansys/mapdl/core/pool.pydocstring of
#: ansys.mapdl.core.pool.MapdlPool:48
#: ../../pymapdl/src/ansys/mapdl/core/pool.pydocstring of
#: ansys.mapdl.core.pool.MapdlPool:51
#: ../../pymapdl/src/ansys/mapdl/core/pool.pydocstring of
#: ansys.mapdl.core.pool.MapdlPool:73
msgid "bool, optional"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.aplot:34
msgid ""
"Plot the currently selected areas using ``ansys-tools-"
"visualization_interface``. As this creates a temporary surface mesh, this "
"may have a long execution time for large meshes."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.aplot:38
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.vplot:35
msgid "**quality** : :class:`python:int`, :obj:`optional`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.aplot:39
msgid ""
"Quality of the mesh to display.  Varies between 1 (worst) to 10 (best) when "
"``vtk=True``."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.aplot:42
msgid ""
"**show_area_numbering** : :ref:`bool <python:bltin-boolean-values>`, "
":obj:`optional`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.aplot:43
msgid "Display area numbers when ``vtk=True``."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.aplot:45
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.lplot:20
msgid ""
"**show_line_numbering** : :ref:`bool <python:bltin-boolean-values>`, "
":obj:`optional`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.aplot:46
msgid "Display line numbers when ``vtk=True``."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.aplot:48
msgid ""
"**color_areas** : :obj:`Union`\\[:ref:`bool <python:bltin-boolean-values>`, "
":class:`python:str`, :obj:`np.array`], :obj:`optional`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.aplot:47
msgid "Union[bool, python:str, np.array], optional"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.aplot:49
msgid ""
"Only used when ``vtk=True``. If ``color_areas`` is a bool, randomly color "
"areas when ``True``. If ``color_areas`` is a string, it must be a valid "
"color string which will be applied to all areas. If ``color_areas`` is an "
"array or list made of color names (str) or the RGBa numbers ([R, G, B, "
"transparency]), it colors each area with the colors, specified in that array"
" or list."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.aplot:57
msgid ""
"**show_lines** : :ref:`bool <python:bltin-boolean-values>`, :obj:`optional`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.aplot:58
msgid ""
"Plot lines and areas.  Change the thickness of the lines with "
"``line_width=``"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.aplot:61
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.eplot:73
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.lplot:29
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.vplot:42
msgid "**\\*\\*kwargs**"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.aplot:62
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.lplot:30
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.vplot:43
msgid ""
"See :class:`ansys.mapdl.core.plotting.visualizer.MapdlPlotter` for more "
"keyword arguments applicable when visualizing with ``vtk=True``."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.aplot:80
msgid "Plot areas between 1 and 4 in increments of 2."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.aplot:85
msgid ""
"Plot all areas and randomly color the areas.  Label center of areas by their"
" number."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.aplot:90
msgid "Return the plotting instance and modify it."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.Mapdl.busy.rst:2
msgid "ansys.mapdl.core.Mapdl.busy"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:80:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.Mapdl.busy:2
msgid "True when MAPDL gRPC server is executing a command."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.Mapdl.chain_commands.rst:2
msgid "ansys.mapdl.core.Mapdl.chain\\_commands"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:80:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.Mapdl.chain_commands:2
msgid "Chain several mapdl commands."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.Mapdl.chain_commands:4
msgid ""
"Commands can be separated with ``\"$\"`` in MAPDL rather than with a line "
"break, so you could send multiple commands to MAPDL with:"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.Mapdl.chain_commands:8
msgid "``mapdl.run(\"/PREP7$K,1,1,2,3\")``"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.Mapdl.chain_commands:10
msgid ""
"This method is merely a convenience context manager to allow for easy "
"chaining of PyMAPDL commands to speed up sending commands to MAPDL."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.Mapdl.chain_commands:14
msgid "View the response from MAPDL with :attr:`Mapdl.last_response`."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/component.pydocstring of
#: ansys.mapdl.core.component.ComponentManager:17
#: ../../pymapdl/src/ansys/mapdl/core/krylov.pydocstring of
#: ansys.mapdl.core.krylov.KrylovSolver:17
#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:228
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_core.pydocstring of
#: ansys.mapdl.core.mapdl_core._MapdlCore.run:47
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.file:31
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.kplot:42
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.lplot:45
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.get_array:56
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.Mapdl.chain_commands:28
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.Mapdl.non_interactive:24
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.download:48
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.get_esol:57
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.get_nsol:44
#: ../../pymapdl/src/ansys/mapdl/core/parameters.pydocstring of
#: ansys.mapdl.core.parameters.Parameters:17
#: ../../../../../../../opt/hostedtoolcache/Python/3.10.16/x64/lib/python3.10/site-packages/ansys/tools/path/path.pydocstring
#: of ansys.tools.path.path.get_available_ansys_installations:23
msgid "Notes"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.Mapdl.chain_commands:29
msgid ""
"Distributed Ansys cannot properly handle condensed data input and chained "
"commands are not permitted in distributed ansys."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.Mapdl.check_parameter_names.rst:2
msgid "ansys.mapdl.core.Mapdl.check\\_parameter\\_names"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:80:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.Mapdl.check_parameter_names:2
msgid ""
"Whether check if the name which is given to the parameter is allowed or not"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.Mapdl.default_file_type_for_plots.rst:2
msgid "ansys.mapdl.core.Mapdl.default\\_file\\_type\\_for\\_plots"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:80:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.Mapdl.default_file_type_for_plots:2
msgid "Default file type for plots."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.Mapdl.default_file_type_for_plots:4
msgid ""
"Use when device is not properly set, for instance when the device is closed."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.Mapdl.directory.rst:2
msgid "ansys.mapdl.core.Mapdl.directory"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:80:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.Mapdl.directory:2
msgid "Current MAPDL directory."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.Mapdl.directory:20
msgid "Directory on Linux"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.Mapdl.directory:25
msgid "Directory on Windows"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.Mapdl.directory:30
msgid "Setting the directory"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.Mapdl.directory:35
msgid ""
"In case the directory does not exist or it is not accessible, ``cwd`` "
"(:func:`MapdlBase.cwd`) will raise a warning."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.Mapdl.eplot.rst:2
msgid "ansys.mapdl.core.Mapdl.eplot"
msgstr ""

#: ../../pymapdl/doc/source/api/plotting.rst:20:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.eplot:2
msgid "Plots the currently selected elements."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.eplot:4
msgid "APDL Command: EPLOT"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.eplot:13
msgid ""
"Plot the currently selected elements using ``ansys-tools-"
"visualization_interface``. Defaults to current ``use_vtk`` setting."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.eplot:16
msgid ""
"**show_node_numbering** : :ref:`bool <python:bltin-boolean-values>`, "
":obj:`optional`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.eplot:17
msgid "Plot the node numbers of surface nodes."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.eplot:19
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.nplot:26
msgid ""
"**plot_bc** : :ref:`bool <python:bltin-boolean-values>`, :obj:`optional`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.eplot:20
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.nplot:27
msgid ""
"Activate the plotting of the boundary conditions. Defaults to ``False``."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.eplot:23
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.nplot:30
msgid "This is in alpha state."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.eplot:25
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.nplot:32
msgid ""
"**plot_bc_legend** : :ref:`bool <python:bltin-boolean-values>`, "
":obj:`optional`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.eplot:26
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.nplot:33
msgid "Shows the boundary conditions legend. Defaults to ``False``"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.eplot:29
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.nplot:36
msgid ""
"**plot_bc_labels** : :ref:`bool <python:bltin-boolean-values>`, "
":obj:`optional`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.eplot:30
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.nplot:37
msgid "Shows the boundary conditions label per node. Defaults to ``False``."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.eplot:33
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.nplot:40
msgid ""
"**bc_labels** : :obj:`List`\\[:class:`python:str`], "
":obj:`Tuple`\\(:class:`python:str`), :obj:`optional`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.eplot:32
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.eplot:56
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.nplot:39
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.nplot:63
msgid "List[python:str], Tuple(python:str), optional"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.eplot:34
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.nplot:41
msgid ""
"List or tuple of strings with the boundary conditions to plot, i.e. "
"``[\"UX\", \"UZ\"]``. You can obtain the allowed boundary conditions by "
"evaluating ``ansys.mapdl.core.plotting.BCS``. You can use also the following"
" shortcuts:"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.eplot:40
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.nplot:47
msgid ""
"**'mechanical'** To plot the following mechanical boundary conditions: "
"``'UX'``, ``'UY'``, ``'UZ'``, ``'FX'``, ``'FY'``, and ``'FZ'``.  Rotational "
"or momentum boundary conditions are not allowed."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.eplot:45
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.nplot:52
msgid ""
"``'thermal'`` To plot the following boundary conditions: 'TEMP' and 'HEAT'."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.eplot:49
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.nplot:56
msgid ""
"``'electrical'`` To plot the following electrical boundary conditions: "
"``'VOLT'``, ``'CHRGS'``, and ``'AMPS'``."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.eplot:53
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.nplot:60
msgid ""
"Defaults to all the allowed boundary conditions present in the responses of "
":func:`ansys.mapdl.core.Mapdl.dlist` and "
":func:`ansys.mapdl.core.Mapdl.flist()`."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.eplot:57
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.nplot:64
msgid ""
"**bc_target** : :obj:`List`\\[:class:`python:str`], "
":obj:`Tuple`\\(:class:`python:str`), :obj:`optional`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.eplot:58
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.nplot:65
msgid ""
"Specify the boundary conditions target to plot, i.e. \"Nodes\", "
"\"Elements\". You can obtain the allowed boundary conditions target by "
"evaluating ``ansys.mapdl.core.plotting.ALLOWED_TARGETS``. Defaults to only "
"``\"Nodes\"``."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.eplot:64
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.nplot:71
msgid "**bc_glyph_size** : :class:`python:float`, :obj:`optional`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.eplot:65
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.nplot:72
msgid ""
"Specify the size of the glyph used for the boundary conditions plotting. By "
"default is ratio of the bounding box dimensions."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.eplot:69
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.nplot:76
msgid "**bc_labels_font_size** : :class:`python:float`, :obj:`optional`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.eplot:70
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.nplot:77
msgid ""
"Size of the text on the boundary conditions labels. By default it is 16."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.eplot:74
msgid ""
"See ``help(ansys.mapdl.core.plotting.visualizer.MapdlPlotter)`` for more "
"keyword arguments related to visualizing using ``vtk``."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.eplot:101
msgid "Save a screenshot to disk without showing the plot"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.Mapdl.exited.rst:2
msgid "ansys.mapdl.core.Mapdl.exited"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:80:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.Mapdl.exited:2
msgid "Return true if the MAPDL session exited"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.Mapdl.exiting.rst:2
msgid "ansys.mapdl.core.Mapdl.exiting"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:80:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.Mapdl.exiting:2
msgid "Returns true if the MAPDL instance is exiting."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.Mapdl.file_type_for_plots.rst:2
msgid "ansys.mapdl.core.Mapdl.file\\_type\\_for\\_plots"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:80:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.Mapdl.file_type_for_plots:2
msgid "Returns the current file type for plotting."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.Mapdl.finish_job_on_exit.rst:2
msgid "ansys.mapdl.core.Mapdl.finish\\_job\\_on\\_exit"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.Mapdl.force_output.rst:2
msgid "ansys.mapdl.core.Mapdl.force\\_output"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:80:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.Mapdl.force_output:2
msgid ""
"Force text output globally by turning the ``Mapdl.mute`` attribute to False "
"and activating text output (``/GOPR``)"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.Mapdl.force_output:5
msgid "You can still do changes to those inside this context."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.Mapdl.get.rst:2
msgid "ansys.mapdl.core.Mapdl.get"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:80:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/_commands/apdl/parameter_definition.pydocstring
#: of
#: ansys.mapdl.core._commands.apdl.parameter_definition.ParameterDefinition.get:2
msgid ""
"Retrieves a value and stores it as a scalar parameter or part of an array "
"parameter."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/_commands/apdl/parameter_definition.pydocstring
#: of
#: ansys.mapdl.core._commands.apdl.parameter_definition.ParameterDefinition.get:4
msgid "APDL Command: ``*GET``"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/_commands/apdl/parameter_definition.pydocstring
#: of
#: ansys.mapdl.core._commands.apdl.parameter_definition.ParameterDefinition.get:6
msgid ""
"See the full MADPL command at `*GET "
"<https://www.mm.bme.hu/~gyebro/files/ans_help_v182/ans_cmd/Hlp_C_GET.html>`_"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/_commands/apdl/parameter_definition.pydocstring
#: of
#: ansys.mapdl.core._commands.apdl.parameter_definition.ParameterDefinition.get:9
msgid ""
"GET retrieves a value for a specified item and stores the value as a scalar "
"parameter, or as a value in a user-named array parameter. An item is "
"identified by various keyword, label, and number combinations.  Usage is "
"similar to the SET command except that the parameter values are retrieved "
"from previously input or calculated results. For example, "
"``GET,A,ELEM,5,CENT,X`` returns the centroid x-location of element 5 and "
"stores the result as parameter A. GET command operations, along with the "
"associated Get functions return values in the active coordinate system "
"unless stated otherwise. A Get function is an alternative in- line function "
"that can be used to retrieve a value instead of the GET command (see Using "
"In-line Get Functions for more information). Both GET and VGET retrieve "
"information from the active data stored in memory. The database is often the"
" source, and sometimes the information is retrieved from common memory "
"blocks that the program uses to manipulate information. Although POST1 and "
"POST26 operations use a .rst file, GET data is accessed from the database or"
" from the common blocks. Get operations do not access the .rst file "
"directly. For repeated gets of sequential items, such as from a series of "
"elements, see the VGET command. Most items are stored in the database after "
"they are calculated and are available anytime thereafter. Items are grouped "
"according to where they are usually first defined or calculated. "
"Preprocessing data will often not reflect the calculated values generated "
"from section data. Do not use GET to obtain data from elements that use "
"calculated section data, such as beams or shells. Most of the general items "
"listed below are available from all modules."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/_commands/apdl/parameter_definition.pydocstring
#: of
#: ansys.mapdl.core._commands.apdl.parameter_definition.ParameterDefinition.get:43
msgid "**par** : :class:`python:str`, :obj:`optional`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/_commands/apdl/parameter_definition.pydocstring
#: of
#: ansys.mapdl.core._commands.apdl.parameter_definition.ParameterDefinition.get:42
#: ../../pymapdl/src/ansys/mapdl/core/_commands/apdl/parameter_definition.pydocstring
#: of
#: ansys.mapdl.core._commands.apdl.parameter_definition.ParameterDefinition.get:75
#: ../../pymapdl/src/ansys/mapdl/core/_commands/apdl/parameter_definition.pydocstring
#: of
#: ansys.mapdl.core._commands.apdl.parameter_definition.ParameterDefinition.get:85
#: ../../pymapdl/src/ansys/mapdl/core/convert.pydocstring of
#: ansys.mapdl.core.convert.convert_apdl_block:9
#: ../../pymapdl/src/ansys/mapdl/core/convert.pydocstring of
#: ansys.mapdl.core.convert.convert_apdl_block:16
#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:6
#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:18
#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:22
#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:36
#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:53
#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:59
#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:94
#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:112
#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:132
#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:185
#: ../../pymapdl/src/ansys/mapdl/core/logging.pydocstring of
#: ansys.mapdl.core.logging.Logger:19
#: ../../pymapdl/src/ansys/mapdl/core/logging.pydocstring of
#: ansys.mapdl.core.logging.Logger.__init__:16
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_core.pydocstring of
#: ansys.mapdl.core.mapdl_core._MapdlCore.open_apdl_log:9
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.get_value:27
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.get_value:34
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.get_value:44
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.get_value:54
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.load_table:16
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.load_table:45
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.load_table:49
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.load_table:53
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc:7
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc:16
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.download:19
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.download:23
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.download_project:10
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.get_esol:22
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.get_esol:28
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.get_esol:32
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.get_nsol:17
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.get_variable:6
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.get_variable:9
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.get_variable:13
#: ../../pymapdl/src/ansys/mapdl/core/pool.pydocstring of
#: ansys.mapdl.core.pool.MapdlPool:17
msgid "python:str, optional"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/_commands/apdl/parameter_definition.pydocstring
#: of
#: ansys.mapdl.core._commands.apdl.parameter_definition.ParameterDefinition.get:44
msgid "The name of the resulting parameter. See \\*SET for name restrictions."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/_commands/apdl/parameter_definition.pydocstring
#: of
#: ansys.mapdl.core._commands.apdl.parameter_definition.ParameterDefinition.get:47
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.get_array:11
msgid "**entity**"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/_commands/apdl/parameter_definition.pydocstring
#: of
#: ansys.mapdl.core._commands.apdl.parameter_definition.ParameterDefinition.get:48
msgid ""
"Entity keyword. Valid keywords are NODE, ELEM, KP, LINE, AREA, VOLU, PDS, "
"etc., as shown for Entity = in the tables below."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/_commands/apdl/parameter_definition.pydocstring
#: of
#: ansys.mapdl.core._commands.apdl.parameter_definition.ParameterDefinition.get:52
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.get_array:15
msgid "**entnum**"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/_commands/apdl/parameter_definition.pydocstring
#: of
#: ansys.mapdl.core._commands.apdl.parameter_definition.ParameterDefinition.get:53
msgid ""
"The number or label for the entity (as shown for ENTNUM = in the tables "
"below). In some cases, a zero (or blank) ENTNUM represents all entities of "
"the set."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/_commands/apdl/parameter_definition.pydocstring
#: of
#: ansys.mapdl.core._commands.apdl.parameter_definition.ParameterDefinition.get:57
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.get_array:18
msgid "**item1**"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/_commands/apdl/parameter_definition.pydocstring
#: of
#: ansys.mapdl.core._commands.apdl.parameter_definition.ParameterDefinition.get:58
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.get_value:29
msgid "The name of a particular item for the given entity."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/_commands/apdl/parameter_definition.pydocstring
#: of
#: ansys.mapdl.core._commands.apdl.parameter_definition.ParameterDefinition.get:60
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.get_array:23
msgid "**it1num**"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/_commands/apdl/parameter_definition.pydocstring
#: of
#: ansys.mapdl.core._commands.apdl.parameter_definition.ParameterDefinition.get:61
msgid ""
"The number (or label) for the specified Item1 (if any). Valid IT1NUM values "
"are as shown in the IT1NUM columns of the tables below. Some Item1 labels do"
" not require an IT1NUM value."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/_commands/apdl/parameter_definition.pydocstring
#: of
#: ansys.mapdl.core._commands.apdl.parameter_definition.ParameterDefinition.get:66
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.get_array:29
msgid "**item2, it2num**"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/_commands/apdl/parameter_definition.pydocstring
#: of
#: ansys.mapdl.core._commands.apdl.parameter_definition.ParameterDefinition.get:67
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.get_value:36
msgid ""
"A second set of item labels and numbers to further qualify the item for "
"which data are to be retrieved. Most items do not require this level of "
"information."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/_commands/apdl/parameter_definition.pydocstring
#: of
#: ansys.mapdl.core._commands.apdl.parameter_definition.ParameterDefinition.get:71
msgid "**item3**"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/_commands/apdl/parameter_definition.pydocstring
#: of
#: ansys.mapdl.core._commands.apdl.parameter_definition.ParameterDefinition.get:72
msgid ""
"A third set of item labels to further qualify the item for which data are to"
" be retrieved. Almost all items do not require this level of information."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/_commands/apdl/parameter_definition.pydocstring
#: of
#: ansys.mapdl.core._commands.apdl.parameter_definition.ParameterDefinition.get:76
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.get_value:45
msgid "**item3** : :class:`python:str`, :obj:`optional`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/_commands/apdl/parameter_definition.pydocstring
#: of
#: ansys.mapdl.core._commands.apdl.parameter_definition.ParameterDefinition.get:77
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.get_value:46
msgid ""
"A third set of item labels and numbers to further qualify the item for which"
" data are to be retrieved. Most items do not require this level of "
"information."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/_commands/apdl/parameter_definition.pydocstring
#: of
#: ansys.mapdl.core._commands.apdl.parameter_definition.ParameterDefinition.get:81
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.get_value:50
msgid "**it3num** : :class:`python:str`, :class:`python:int`, :obj:`optional`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/_commands/apdl/parameter_definition.pydocstring
#: of
#: ansys.mapdl.core._commands.apdl.parameter_definition.ParameterDefinition.get:80
#: ../../pymapdl/src/ansys/mapdl/core/_commands/apdl/parameter_definition.pydocstring
#: of
#: ansys.mapdl.core._commands.apdl.parameter_definition.ParameterDefinition.get:89
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.get_value:22
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.get_value:30
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.get_value:39
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.get_value:49
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.get_value:58
msgid "python:str, python:int, optional"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/_commands/apdl/parameter_definition.pydocstring
#: of
#: ansys.mapdl.core._commands.apdl.parameter_definition.ParameterDefinition.get:82
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.get_value:51
msgid ""
"The number (or label) for the specified ``item3`` (if any). Some ``item3`` "
"labels do not require an ``it3num`` value."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/_commands/apdl/parameter_definition.pydocstring
#: of
#: ansys.mapdl.core._commands.apdl.parameter_definition.ParameterDefinition.get:86
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.get_value:55
msgid "**item4** : :class:`python:str`, :obj:`optional`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/_commands/apdl/parameter_definition.pydocstring
#: of
#: ansys.mapdl.core._commands.apdl.parameter_definition.ParameterDefinition.get:87
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.get_value:56
msgid ""
"A fourth set of item labels and numbers to further qualify the item for "
"which data are to be retrieved. Most items do not require this level of "
"information."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/_commands/apdl/parameter_definition.pydocstring
#: of
#: ansys.mapdl.core._commands.apdl.parameter_definition.ParameterDefinition.get:90
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.get_value:59
msgid "**it4num** : :class:`python:str`, :class:`python:int`, :obj:`optional`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/_commands/apdl/parameter_definition.pydocstring
#: of
#: ansys.mapdl.core._commands.apdl.parameter_definition.ParameterDefinition.get:91
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.get_value:60
msgid ""
"The number (or label) for the specified ``item4`` (if any). Some ``item4`` "
"labels do not require an ``it4num`` value."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/_commands/apdl/parameter_definition.pydocstring
#: of
#: ansys.mapdl.core._commands.apdl.parameter_definition.ParameterDefinition.get:0
#: ../../pymapdl/src/ansys/mapdl/core/convert.pydocstring of
#: ansys.mapdl.core.convert.convert_apdl_block:0
#: ../../pymapdl/src/ansys/mapdl/core/convert.pydocstring of
#: ansys.mapdl.core.convert.convert_script:0
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._ComponentQueries.centrx:0
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._ComponentQueries.centry:0
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._ComponentQueries.centrz:0
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._ComponentQueries.kx:0
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._ComponentQueries.ky:0
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._ComponentQueries.kz:0
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._ComponentQueries.nx:0
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._ComponentQueries.ny:0
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._ComponentQueries.nz:0
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._DisplacementComponentQueries.rotx:0
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._DisplacementComponentQueries.roty:0
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._DisplacementComponentQueries.rotz:0
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._DisplacementComponentQueries.ux:0
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._DisplacementComponentQueries.uy:0
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._DisplacementComponentQueries.uz:0
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._InverseGetComponentQueries.kp:0
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._InverseGetComponentQueries.node:0
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/line_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.line_queries._LineFractionCoordinateQueries.lx:0
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/line_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.line_queries._LineFractionCoordinateQueries.ly:0
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/line_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.line_queries._LineFractionCoordinateQueries.lz:0
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/line_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.line_queries._LineFractionSlopeQueries.lsx:0
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/line_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.line_queries._LineFractionSlopeQueries.lsy:0
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/line_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.line_queries._LineFractionSlopeQueries.lsz:0
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/selection_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.selection_queries._SelectionStatusQueries.asel:0
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/selection_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.selection_queries._SelectionStatusQueries.esel:0
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/selection_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.selection_queries._SelectionStatusQueries.ksel:0
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/selection_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.selection_queries._SelectionStatusQueries.lsel:0
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/selection_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.selection_queries._SelectionStatusQueries.nsel:0
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/selection_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.selection_queries._SelectionStatusQueries.vsel:0
#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.get_default_ansys:0
#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.get_default_ansys_path:0
#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.get_default_ansys_version:0
#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:0
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_core.pydocstring of
#: ansys.mapdl.core.mapdl_core._MapdlCore.input_strings:0
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_core.pydocstring of
#: ansys.mapdl.core.mapdl_core._MapdlCore.run:0
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_core.pydocstring of
#: ansys.mapdl.core.mapdl_core._MapdlCore.run_multiline:0
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.get_nodal_constrains:0
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.get_nodal_loads:0
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.get_value:0
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.Mapdl.mute:0
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.Mapdl.result:0
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.download_project:0
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.get_esol:0
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.get_nsol:0
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.get_variable:0
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.list_files:0
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.mute:0
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.screenshot:0
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.upload:0
#: ../../../../../../../opt/hostedtoolcache/Python/3.10.16/x64/lib/python3.10/site-packages/ansys/tools/path/path.pydocstring
#: of ansys.tools.path.path.find_mapdl:0
#: ../../../../../../../opt/hostedtoolcache/Python/3.10.16/x64/lib/python3.10/site-packages/ansys/tools/path/path.pydocstring
#: of ansys.tools.path.path.get_available_ansys_installations:0
msgid "Returns"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/_commands/apdl/parameter_definition.pydocstring
#: of
#: ansys.mapdl.core._commands.apdl.parameter_definition.ParameterDefinition.get:99
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._ComponentQueries.centrx:17
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._ComponentQueries.centry:17
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._ComponentQueries.centrz:17
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._ComponentQueries.kx:15
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._ComponentQueries.ky:15
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._ComponentQueries.kz:15
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._ComponentQueries.nx:16
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._ComponentQueries.ny:16
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._ComponentQueries.nz:16
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._DisplacementComponentQueries.rotx:15
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._DisplacementComponentQueries.roty:15
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._DisplacementComponentQueries.rotz:15
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._DisplacementComponentQueries.ux:15
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._DisplacementComponentQueries.uy:15
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._DisplacementComponentQueries.uz:15
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/line_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.line_queries._LineFractionCoordinateQueries.lx:20
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/line_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.line_queries._LineFractionCoordinateQueries.ly:20
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/line_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.line_queries._LineFractionCoordinateQueries.lz:20
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/line_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.line_queries._LineFractionSlopeQueries.lsx:22
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/line_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.line_queries._LineFractionSlopeQueries.lsy:22
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/line_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.line_queries._LineFractionSlopeQueries.lsz:22
#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.get_default_ansys_version:11
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.get_value:68
msgid ":class:`python:float`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/_commands/apdl/parameter_definition.pydocstring
#: of
#: ansys.mapdl.core._commands.apdl.parameter_definition.ParameterDefinition.get:100
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.get_value:69
msgid "Floating point value of the parameter."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/_commands/apdl/parameter_definition.pydocstring
#: of
#: ansys.mapdl.core._commands.apdl.parameter_definition.ParameterDefinition.get:113
msgid "Retrieve the number of nodes"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/_commands/apdl/parameter_definition.pydocstring
#: of
#: ansys.mapdl.core._commands.apdl.parameter_definition.ParameterDefinition.get:119
msgid ""
"Retrieve the number of nodes using keywords.  Note that the parameter name "
"is optional."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.Mapdl.get_array.rst:2
msgid "ansys.mapdl.core.Mapdl.get\\_array"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:80:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.get_array:2
msgid ""
"Uses the ``*VGET`` command to Return an array from ANSYS as a Python array."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.get_array:5
msgid ""
"See `VGET "
"<https://www.mm.bme.hu/~gyebro/files/ans_help_v182/ans_cmd/Hlp_C_VGET_st.html>`"
" for more details."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.get_array:12
msgid ""
"Entity keyword.  Valid keywords are NODE, ELEM, KP, LINE, AREA, VOLU, etc"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.get_array:16
msgid "The number of the entity."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.get_array:19
msgid ""
"The name of a particular item for the given entity.  Valid items are as "
"shown in the Item1 columns of the tables below."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.get_array:24
msgid ""
"The number (or label) for the specified Item1 (if any). Valid IT1NUM values "
"are as shown in the IT1NUM columns of the tables below.  Some Item1 labels "
"do not require an IT1NUM value."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.get_array:30
msgid ""
"A second set of item labels and numbers to further qualify the item for "
"which data is to be retrieved.  Most items do not require this level of "
"information."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.get_array:34
msgid "**kloop**"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.get_array:35
msgid "Field to be looped on:"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.get_array:37
msgid "0 or 2 : Loop on the ENTNUM field (default)."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.get_array:38
msgid "3 : Loop on the Item1 field."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.get_array:39
msgid ""
"4 : Loop on the IT1NUM field. Successive items are as shown with IT1NUM."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.get_array:40
msgid "5 : Loop on the Item2 field."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.get_array:41
msgid ""
"6 : Loop on the IT2NUM field. Successive items are as shown with IT2NUM."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.Mapdl.get_array.rst:0
#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.Mapdl.get_esol.rst:0
#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.Mapdl.get_nsol.rst:0
#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.Mapdl.get_variable.rst:0
#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.Mapdl.input_strings.rst:0
#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.Mapdl.kill_job.rst:0
#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.Mapdl.list_files.rst:0
#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.Mapdl.open_apdl_log.rst:0
#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.Mapdl.run.rst:0
#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.Mapdl.scalar_param.rst:0
#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.Mapdl.set_log_level.rst:0
#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.convert.convert_apdl_block.rst:0
#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.convert.convert_script.rst:0
#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.inline_functions.Query.asel.rst:0
#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.inline_functions.Query.centrx.rst:0
#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.inline_functions.Query.centry.rst:0
#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.inline_functions.Query.centrz.rst:0
#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.inline_functions.Query.esel.rst:0
#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.inline_functions.Query.kp.rst:0
#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.inline_functions.Query.ksel.rst:0
#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.inline_functions.Query.kx.rst:0
#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.inline_functions.Query.ky.rst:0
#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.inline_functions.Query.kz.rst:0
#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.inline_functions.Query.lsel.rst:0
#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.inline_functions.Query.lsx.rst:0
#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.inline_functions.Query.lsy.rst:0
#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.inline_functions.Query.lsz.rst:0
#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.inline_functions.Query.lx.rst:0
#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.inline_functions.Query.ly.rst:0
#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.inline_functions.Query.lz.rst:0
#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.inline_functions.Query.node.rst:0
#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.inline_functions.Query.nsel.rst:0
#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.inline_functions.Query.nx.rst:0
#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.inline_functions.Query.ny.rst:0
#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.inline_functions.Query.nz.rst:0
#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.inline_functions.Query.rotx.rst:0
#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.inline_functions.Query.roty.rst:0
#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.inline_functions.Query.rotz.rst:0
#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.inline_functions.Query.ux.rst:0
#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.inline_functions.Query.uy.rst:0
#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.inline_functions.Query.uz.rst:0
#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.launcher.close_all_local_instances.rst:0
#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.launcher.launch_mapdl.rst:0
#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mapdl_grpc.MapdlGrpc.download_project.rst:0
#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mapdl_grpc.MapdlGrpc.download_result.rst:0
#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mapdl_grpc.MapdlGrpc.file.rst:0
#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mapdl_grpc.MapdlGrpc.list_files.rst:0
#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mapdl_grpc.MapdlGrpc.upload.rst:0
#: ../../pymapdl/doc/source/api/_autosummary/ansys.tools.path.change_default_ansys_path.rst:0
#: ../../pymapdl/doc/source/api/_autosummary/ansys.tools.path.find_mapdl.rst:0
#: ../../pymapdl/doc/source/api/_autosummary/ansys.tools.path.get_available_ansys_installations.rst:0
#: ../../pymapdl/doc/source/api/_autosummary/ansys.tools.path.save_ansys_path.rst:0
msgid "Return type"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.get_array:53
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.get_esol:54
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.get_nsol:41
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.get_variable:38
msgid ""
":sphinx_autodoc_typehints_type:`\\:py\\:class\\:\\`\\~numpy.ndarray\\`\\\\ "
"\\\\\\[\\:py\\:class\\:\\`tuple\\`\\\\ \\\\\\[\\:py\\:class\\:\\`int\\`\\, "
"\\:py\\:data\\:\\`...\\<Ellipsis\\>\\`\\]\\, "
"\\:py\\:class\\:\\`\\~numpy.dtype\\`\\\\ "
"\\\\\\[\\:py\\:class\\:\\`\\~numpy.float64\\`\\]\\]`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.get_array:57
msgid ""
"Please reference your Ansys help manual ``*VGET`` command tables for all the"
" available ``*VGET`` values."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.get_array:63
msgid "List the current selected node numbers"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.get_array:70
msgid "List the displacement in the X direction for the first result"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.Mapdl.get_esol.rst:2
msgid "ansys.mapdl.core.Mapdl.get\\_esol"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:80:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.get_esol:2
msgid "Get ESOL data."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.get_esol:4
msgid "/POST26 APDL Command: ESOL"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.get_esol:8
msgid "**elem** : :class:`python:int`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._ComponentQueries.centrx:9
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._ComponentQueries.centry:9
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._ComponentQueries.centrz:9
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._ComponentQueries.kx:7
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._ComponentQueries.ky:7
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._ComponentQueries.kz:7
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._ComponentQueries.nx:8
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._ComponentQueries.ny:8
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._ComponentQueries.nz:8
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._DisplacementComponentQueries.rotx:7
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._DisplacementComponentQueries.roty:7
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._DisplacementComponentQueries.rotz:7
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._DisplacementComponentQueries.ux:7
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._DisplacementComponentQueries.uy:7
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._DisplacementComponentQueries.uz:7
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/line_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.line_queries._LineFractionCoordinateQueries.lx:8
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/line_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.line_queries._LineFractionCoordinateQueries.ly:8
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/line_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.line_queries._LineFractionCoordinateQueries.lz:8
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/line_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.line_queries._LineFractionSlopeQueries.lsx:10
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/line_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.line_queries._LineFractionSlopeQueries.lsy:10
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/line_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.line_queries._LineFractionSlopeQueries.lsz:10
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/selection_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.selection_queries._SelectionStatusQueries.asel:11
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/selection_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.selection_queries._SelectionStatusQueries.esel:11
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/selection_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.selection_queries._SelectionStatusQueries.ksel:11
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/selection_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.selection_queries._SelectionStatusQueries.lsel:11
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/selection_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.selection_queries._SelectionStatusQueries.nsel:11
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/selection_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.selection_queries._SelectionStatusQueries.vsel:14
#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:73
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.get_esol:7
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.get_esol:10
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.get_nsol:6
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.kill_job:7
msgid "python:int"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.get_esol:9
msgid "Element for which data are to be stored."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.get_esol:11
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.get_nsol:7
msgid "**node** : :class:`python:int`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.get_esol:12
msgid ""
"Node number on this element for which data are to be stored. If blank, store"
" the average element value (except for ``FMAG`` values, which are summed "
"instead of averaged)."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.get_esol:16
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.get_nsol:10
msgid "**item** : :class:`python:str`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.get_esol:17
msgid "Label identifying the item. Some items also require a component label."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.get_esol:19
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.get_nsol:14
msgid "**comp** : :class:`python:str`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.get_esol:20
msgid ""
"Component of the item (if required). If Comp is a sequence number (n), the "
"``NODE`` field will be ignored."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.get_esol:23
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.get_nsol:18
msgid "**name** : :class:`python:str`, :obj:`optional`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.get_esol:24
msgid ""
"Thirty-two character name for identifying the item on the printout and "
"displays.  The default is a label formed by concatenating the first four "
"characters of the ``item`` and ``comp`` labels."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.get_esol:29
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.get_variable:10
msgid "**tstrt** : :class:`python:str`, :obj:`optional`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.get_esol:30
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.get_variable:11
msgid ""
"Time (or frequency) corresponding to start of IR data.  If between values, "
"the nearer value is used. By default it is the first value."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.get_esol:33
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.get_variable:14
msgid "**kcplx** : :class:`python:str`, :obj:`optional`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.get_esol:34
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.get_variable:15
msgid "Complex number key:"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.get_esol:36
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.get_variable:17
msgid "``0`` - Use the real part of the IR data. Default."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.get_esol:38
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.get_variable:19
msgid "``1`` - Use the imaginary part of the IR data."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.get_esol:44
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.get_nsol:31
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.get_variable:25
msgid ":obj:`np.array`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.get_esol:45
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.get_nsol:32
msgid "Variable values"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.get_esol:58
msgid ""
"By default, this command store temporally the variable on the variable "
"number set by ``VAR_IR`` in the class :class:`Mapdl "
"<ansys.mapdl.core.mapdl.MapdlBase>` Therefore, any variable in that slot "
"will be deleted when using this command."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.get_esol:64
msgid ""
"The ``ESOL`` command defines element results data to be stored from a "
"results file (``FILE``). Not all items are valid for all elements. To see "
"the available items for a given element, refer to the input and output "
"summary tables in the documentation for that element."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.get_esol:70
msgid ""
"Two methods of data access are available via the ``ESOL`` command. You can "
"access some simply by using a generic label (component name method), while "
"others require a label and number (sequence number method)."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.get_esol:75
msgid ""
"Use the component name method to access general element data (that is, "
"element data generally available to most element types or groups of element "
"types)."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.get_esol:79
msgid ""
"The sequence number method is required for data that is not averaged (such "
"as pressures at nodes and temperatures at integration points), or data that "
"is not easily described in a generic fashion (such as all derived data for "
"structural line elements and contact elements, all derived data for thermal "
"line elements, and layer data for layered elements)."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.get_esol:86
msgid ""
"Element results are in the element coordinate system, except for layered "
"elements where results are in the layer coordinate system.  Element forces "
"and moments are in the nodal coordinate system. Results are obtainable for "
"an element at a specified node. Further location specifications can be made "
"for some elements via the ``SHELL``, ``LAYERP26``, and ``FORCE`` commands."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.get_esol:93
msgid ""
"For more information on the meaning of contact status and its possible "
"values, see Reviewing Results in ``POST1`` in the Contact Technology Guide."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.Mapdl.get_nodal_constrains.rst:2
msgid "ansys.mapdl.core.Mapdl.get\\_nodal\\_constrains"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:80:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.get_nodal_constrains:2
msgid "Get the applied nodal constrains:"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.get_nodal_constrains:4
msgid "Uses ``DLIST``."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.get_nodal_constrains:8
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.get_nodal_loads:8
msgid "**label** : [:class:`python:str`], :obj:`optional`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.get_nodal_constrains-1
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.get_nodal_loads-1
msgid "["
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.get_nodal_constrains:9
msgid ""
"If given, the output nodal constrains are filtered to correspondent given "
"label. Example of labels are ``UX``, ``UZ``, ``VOLT`` or ``TEMP``. By "
"default None"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.get_nodal_constrains:16
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.get_nodal_loads:16
msgid ":obj:`List`\\[:obj:`List`\\[:obj:`Str`]] :obj:`or` :obj:`numpy.array`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.get_nodal_constrains:17
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.get_nodal_loads:17
msgid ""
"If parameter ``label`` is give, the output is converted to a numpy array "
"instead of a list of list of strings."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.Mapdl.get_nodal_loads.rst:2
msgid "ansys.mapdl.core.Mapdl.get\\_nodal\\_loads"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:80:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.get_nodal_loads:2
msgid "Get the applied nodal loads."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.get_nodal_loads:4
msgid "Uses ``FLIST``."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.get_nodal_loads:9
msgid ""
"If given, the output nodal loads are filtered to correspondent given label. "
"Example of labels are ``FX``, ``FZ``, ``CHRGS`` or ``CSGZ``. By default None"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.Mapdl.get_nsol.rst:2
msgid "ansys.mapdl.core.Mapdl.get\\_nsol"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:80:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.get_nsol:2
msgid "Get NSOL solutions"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.get_nsol:8
msgid "Node for which data is to be stored."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.get_nsol:11
msgid ""
"Label identifying the item.  Valid item labels are shown in the table below."
" Some items also require a component label."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.get_nsol:15
msgid ""
"Component of the item (if required).  Valid component labels are shown in "
"the table below."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.get_nsol:19
msgid ""
"Thirty-two character name identifying the item on printouts and displays.  "
"The default is a label formed by concatenating the first four characters of "
"the ``item`` and ``comp`` labels."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.get_nsol:23
msgid "**sector** : :class:`python:int`, :obj:`optional`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.get_nsol:24
msgid ""
"For a full harmonic cyclic symmetry solution, the sector number for which "
"the results from NODE are to be stored."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.get_nsol:45
msgid ""
"By default, this command store temporally the variable on the variable "
"number set by ``VAR_IR`` in the class MapdlGrpc. Therefore, any variable in "
"that slot will be deleted when using this command."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.get_nsol:50
msgid ""
"Stores nodal degree of freedom and solution results in a variable. For more "
"information, see Data Interpreted in the Nodal Coordinate System in the "
"Modeling and Meshing Guide."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.get_nsol:54
msgid ""
"For SECTOR>1, the result is in the nodal coordinate system of the base "
"sector, and it is rotated to the expanded sector’s location. Refer to Using "
"the /CYCEXPAND Command in the Cyclic Symmetry Analysis Guide for more "
"information."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.get_nsol:59
msgid ""
"For SHELL131 and SHELL132 elements with KEYOPT(3) = 0 or 1, use the labels "
"TBOT, TE2, TE3, . . ., TTOP instead of TEMP."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.Mapdl.get_value.rst:2
msgid "ansys.mapdl.core.Mapdl.get\\_value"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:80:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.get_value:2
msgid "Runs the MAPDL GET command and returns a Python value."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.get_value:4
msgid "This method uses :func:`Mapdl.get`."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.get_value:6
msgid ""
"See the full MADPL command documentation at `*GET "
"<https://www.mm.bme.hu/~gyebro/files/ans_help_v182/ans_cmd/Hlp_C_GET.html>`_"
" :rtype: "
":sphinx_autodoc_typehints_type:`\\:py\\:data\\:\\`\\~typing.Union\\`\\\\ "
"\\\\\\[\\:py\\:class\\:\\`float\\`\\, \\:py\\:class\\:\\`str\\`\\]`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.get_value:12
msgid ""
"This method is not available when within the :func:`Mapdl.non_interactive` "
"context manager."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.get_value:18
msgid "**entity** : :class:`python:str`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.get_value:19
msgid ""
"Entity keyword. Valid keywords are ``\"NODE\"``, ``\"ELEM\"``, ``\"KP\"``, "
"``\"LINE\"``, ``\"AREA\"``, ``\"VOLU\"``, ``\"PDS\"``, etc."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.get_value:23
msgid "**entnum** : :class:`python:str`, :class:`python:int`, :obj:`optional`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.get_value:24
msgid ""
"The number or label for the entity. In some cases, a zero (or blank "
"``\"\"``) ``entnum`` represents all entities of the set."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.get_value:28
msgid "**item1** : :class:`python:str`, :obj:`optional`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.get_value:31
msgid "**it1num** : :class:`python:str`, :class:`python:int`, :obj:`optional`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.get_value:32
msgid ""
"The number (or label) for the specified Item1 (if any). Some Item1 labels do"
" not require an IT1NUM value."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.get_value:35
msgid "**item2** : :class:`python:str`, :obj:`optional`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.get_value:40
msgid "**it2num** : :class:`python:str`, :class:`python:int`, :obj:`optional`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.get_value:41
msgid ""
"The number (or label) for the specified ``item2`` (if any). Some ``item2`` "
"labels do not require an ``it2num`` value."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.get_value:82
msgid "Retrieve the number of nodes."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.get_value:88
msgid "Retrieve the number of nodes using keywords."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.Mapdl.get_variable.rst:2
msgid "ansys.mapdl.core.Mapdl.get\\_variable"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:80:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.get_variable:2
msgid "Obtain the variable values."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.get_variable:7
msgid "**ir** : :class:`python:str`, :obj:`optional`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.get_variable:8
msgid "Reference number of the variable (1 to NV [NUMVAR])."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.get_variable:26
msgid "Variable values as array."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.Mapdl.hostname.rst:2
msgid "ansys.mapdl.core.Mapdl.hostname"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:80:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.Mapdl.hostname:2
msgid "Return the hostname of the machine MAPDL is running in."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.Mapdl.ignore_errors.rst:2
msgid "ansys.mapdl.core.Mapdl.ignore\\_errors"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.Mapdl.ignore_errors:4
msgid ""
"Normally, any string containing \"*** ERROR ***\" from MAPDL will trigger a "
"``MapdlRuntimeError``.  Set this to ``True`` to ignore these errors."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.Mapdl.ignore_errors:8
msgid ""
"For example, a command executed in the wrong processor will raise an "
"exception when ``ignore_errors=False``. This is the default behavior."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.Mapdl.ignore_errors:31
msgid "Ignore these messages by setting ignore_errors=True"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.Mapdl.info.rst:2
msgid "ansys.mapdl.core.Mapdl.info"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:80:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.Mapdl.info:2
msgid "General information"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.Mapdl.input_strings.rst:2
msgid "ansys.mapdl.core.Mapdl.input\\_strings"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:80:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_core.pydocstring of
#: ansys.mapdl.core.mapdl_core._MapdlCore.input_strings:2
msgid "Run several commands as a single block."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_core.pydocstring of
#: ansys.mapdl.core.mapdl_core._MapdlCore.input_strings:4
msgid "These commands are all in a single string or in list of strings."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_core.pydocstring of
#: ansys.mapdl.core.mapdl_core._MapdlCore.input_strings:8
msgid ""
"**commands** : :class:`python:str` or :class:`python:list` :obj:`of` "
":class:`python:str`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_core.pydocstring of
#: ansys.mapdl.core.mapdl_core._MapdlCore.input_strings:7
msgid "python:str or python:list of python:str"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_core.pydocstring of
#: ansys.mapdl.core.mapdl_core._MapdlCore.input_strings:9
msgid ""
"Commands separated by new lines, or a list of commands strings. See example."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.get_default_ansys_path:11
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_core.pydocstring of
#: ansys.mapdl.core.mapdl_core._MapdlCore.input_strings:16
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_core.pydocstring of
#: ansys.mapdl.core.mapdl_core._MapdlCore.run:34
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_core.pydocstring of
#: ansys.mapdl.core.mapdl_core._MapdlCore.run_multiline:21
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.screenshot:15
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.upload:18
msgid ":class:`python:str`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_core.pydocstring of
#: ansys.mapdl.core.mapdl_core._MapdlCore.input_strings:17
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_core.pydocstring of
#: ansys.mapdl.core.mapdl_core._MapdlCore.run_multiline:22
msgid ""
"Command output from MAPDL.  Includes the output from running every command, "
"as if it was an input file."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_core.pydocstring of
#: ansys.mapdl.core.mapdl_core._MapdlCore.input_strings:29
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_core.pydocstring of
#: ansys.mapdl.core.mapdl_core._MapdlCore.run:44
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.file:28
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.download_result:31
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.upload:4
#: ../../../../../../../opt/hostedtoolcache/Python/3.10.16/x64/lib/python3.10/site-packages/ansys/tools/path/path.pydocstring
#: of ansys.tools.path.path.save_ansys_path:19
msgid ":sphinx_autodoc_typehints_type:`\\:py\\:class\\:\\`str\\``"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_core.pydocstring of
#: ansys.mapdl.core.mapdl_core._MapdlCore.input_strings:33
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_core.pydocstring of
#: ansys.mapdl.core.mapdl_core._MapdlCore.run_multiline:36
msgid "Run several commands from Python multi-line string."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.Mapdl.is_alive.rst:2
msgid "ansys.mapdl.core.Mapdl.is\\_alive"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:80:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.Mapdl.is_alive:2
msgid "True when there is an active connect to the gRPC server"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.Mapdl.is_console.rst:2
msgid "ansys.mapdl.core.Mapdl.is\\_console"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:80:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.Mapdl.is_console:2
msgid "Return true if using console to connect to the MAPDL instance."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.Mapdl.is_corba.rst:2
msgid "ansys.mapdl.core.Mapdl.is\\_corba"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:80:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.Mapdl.is_corba:2
msgid "Return true if using corba to connect to the MAPDL instance."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.Mapdl.is_grpc.rst:2
msgid "ansys.mapdl.core.Mapdl.is\\_grpc"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:80:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.Mapdl.is_grpc:2
msgid "Return true if using grpc to connect to the MAPDL instance."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.Mapdl.jobid.rst:2
msgid "ansys.mapdl.core.Mapdl.jobid"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.Mapdl.jobid:2
msgid ""
"Returns the job id where the MAPDL is running in. This is only applicable if"
" MAPDL is running on an HPC cluster."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.Mapdl.jobname.rst:2
msgid "ansys.mapdl.core.Mapdl.jobname"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:80:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.Mapdl.jobname:2
msgid "MAPDL job name."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.Mapdl.jobname:4
msgid "This is requested from the active mapdl instance."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.Mapdl.kill_job.rst:2
msgid "ansys.mapdl.core.Mapdl.kill\\_job"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:80:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.kill_job:2
msgid "Kill an HPC job"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.kill_job:4
msgid "Kill a job given its identifier."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.kill_job:8
msgid "**jobid** : :class:`python:int`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.kill_job:9
msgid "Job ID."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.close_all_local_instances:25
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_core.pydocstring of
#: ansys.mapdl.core.mapdl_core._MapdlCore.open_apdl_log:26
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_core.pydocstring of
#: ansys.mapdl.core.mapdl_core._MapdlCore.set_log_level:22
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.kill_job:24
#: ../../../../../../../opt/hostedtoolcache/Python/3.10.16/x64/lib/python3.10/site-packages/ansys/tools/path/path.pydocstring
#: of ansys.tools.path.path.change_default_ansys_path:19
msgid ":sphinx_autodoc_typehints_type:`\\:py\\:obj\\:\\`None\\``"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.Mapdl.kplot.rst:2
msgid "ansys.mapdl.core.Mapdl.kplot"
msgstr ""

#: ../../pymapdl/doc/source/api/plotting.rst:20:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.kplot:2
msgid "Display the selected keypoints."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.kplot:4
msgid "APDL Command: KPLOT"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.kplot:12
msgid "**np1, np2, ninc**"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.kplot:13
msgid ""
"Display keypoints from NP1 to NP2 (defaults to NP1) in steps of NINC "
"(defaults to 1).  If NP1 = ALL (default), NP2 and NINC are ignored and all "
"selected keypoints [KSEL] are displayed."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.kplot:18
msgid "**lab**"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.kplot:19
msgid "Determines what keypoints are plotted (one of the following):"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.kplot:21
msgid "(blank) - Plots all keypoints."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.kplot:23
msgid "HPT - Plots only those keypoints that are hard points."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.kplot:26
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.lplot:18
msgid ""
"Plot the currently selected lines using ``ansys-tools-"
"visualization_interface``."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.kplot:28
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.lplot:23
msgid ""
"**show_keypoint_numbering** : :ref:`bool <python:bltin-boolean-values>`, "
":obj:`optional`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.kplot:29
msgid "Display keypoint numbers when ``vtk=True``."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.kplot:43
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.lplot:50
msgid "This command is valid in any processor."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.Mapdl.last_response.rst:2
msgid "ansys.mapdl.core.Mapdl.last\\_response"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:80:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.Mapdl.last_response:2
msgid "Returns the last response from MAPDL."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.Mapdl.launched.rst:2
msgid "ansys.mapdl.core.Mapdl.launched"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:80:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.Mapdl.launched:2
msgid "Check if the MAPDL instance has been launched by PyMAPDL."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.Mapdl.list_error_file.rst:2
msgid "ansys.mapdl.core.Mapdl.list\\_error\\_file"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:113:<autosummary>:1
#: ../../pymapdl/doc/source/api/mapdl.rst:80:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.list_error_file:2
msgid "Listing of errors written in JOBNAME.err"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.Mapdl.list_files.rst:2
msgid "ansys.mapdl.core.Mapdl.list\\_files"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:113:<autosummary>:1
#: ../../pymapdl/doc/source/api/mapdl.rst:80:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.list_files:2
msgid "List the files in the working directory of MAPDL."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.list_files:7
msgid ""
"**refresh_cache** : :ref:`bool <python:bltin-boolean-values>`, "
":obj:`optional`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.list_files:8
msgid "If local, refresh local cache by querying MAPDL for its current path."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/convert.pydocstring of
#: ansys.mapdl.core.convert.convert_apdl_block:85
#: ../../pymapdl/src/ansys/mapdl/core/convert.pydocstring of
#: ansys.mapdl.core.convert.convert_script:85
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.list_files:15
msgid ":class:`python:list`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.list_files:16
msgid "List of files in the working directory of MAPDL."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/convert.pydocstring of
#: ansys.mapdl.core.convert.convert_apdl_block:97
#: ../../pymapdl/src/ansys/mapdl/core/convert.pydocstring of
#: ansys.mapdl.core.convert.convert_script:97
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.download_project:36
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.list_files:27
msgid ""
":sphinx_autodoc_typehints_type:`\\:py\\:class\\:\\`\\~typing.List\\`\\\\ "
"\\\\\\[\\:py\\:class\\:\\`str\\`\\]`"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.Mapdl.load_array.rst:2
msgid "ansys.mapdl.core.Mapdl.load\\_array"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:80:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.load_array:2
msgid "Load an array from Python to MAPDL."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.load_array:4
msgid ""
"Uses ``VREAD`` to transfer the array. The format of the numbers used in the "
"intermediate file is F24.18."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.load_array:9
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.load_table:8
msgid "**name** : :class:`python:str`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.load_array:10
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.load_table:9
msgid ""
"An alphanumeric name used to identify this table.  Name may be up to 32 "
"characters, beginning with a letter and containing only letters, numbers, "
"and underscores. Examples: ``\"ABC\" \"A3X\" \"TOP_END\"``."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.load_array:15
msgid "**array** : :obj:`np.ndarray <numpy.ndarray>` or :class:`python:list`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.load_array:14
msgid "np.ndarray or python:list"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.load_array:16
msgid "List as a table or ``numpy`` array."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.Mapdl.load_table.rst:2
msgid "ansys.mapdl.core.Mapdl.load\\_table"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:80:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.load_table:2
msgid "Load a table from Python to into MAPDL."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.load_table:4
msgid "Uses :func:`tread <Mapdl.tread>` to transfer the table."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.load_table:14
msgid "**array** : :obj:`numpy.ndarray` or :class:`python:list`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.load_table:13
msgid "numpy.ndarray or python:list"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.load_table:15
msgid "List as a table or :class:`numpy.ndarray` array."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.load_table:17
msgid "**var1** : :class:`python:str`, :obj:`optional`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.load_table:18
msgid ""
"Variable name corresponding to the first dimension (row). Default "
"``\"Row\"``."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.load_table:21
msgid ""
"A primary variable (listed below) or can be an independent parameter. If "
"specifying an independent parameter, then you must define an additional "
"table for the independent parameter. The additional table must have the same"
" name as the independent parameter and may be a function of one or more "
"primary variables or another independent parameter. All independent "
"parameters must relate to a primary variable."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.load_table:29
msgid "``\"TIME\"``: Time"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.load_table:30
msgid "``\"FREQ\"``: Frequency"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.load_table:31
msgid "``\"X\"``: X-coordinate location"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.load_table:32
msgid "``\"Y\"``: Y-coordinate location"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.load_table:33
msgid "``\"Z\"``: Z-coordinate location"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.load_table:34
msgid "``\"TEMP\"``: Temperature"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.load_table:35
msgid "``\"VELOCITY\"``: Velocity"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.load_table:36
msgid "``\"PRESSURE\"``: Pressure"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.load_table:37
msgid "``\"GAP\"``: Geometric gap/penetration"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.load_table:38
msgid "``\"SECTOR\"``: Cyclic sector number"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.load_table:39
msgid "``\"OMEGS\"``: Amplitude of the rotational velocity vector"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.load_table:40
msgid "``\"ECCENT\"``: Eccentricity"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.load_table:41
msgid "``\"THETA\"``: Phase shift"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.load_table:42
msgid "``\"ELEM\"``: Element number"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.load_table:43
msgid "``\"NODE\"``: Node number"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.load_table:44
msgid "``\"CONC\"``: Concentration"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.load_table:46
msgid "**var2** : :class:`python:str`, :obj:`optional`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.load_table:47
msgid ""
"Variable name corresponding to the first dimension (column). See ``var1``.  "
"Default column."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.load_table:50
msgid "**var3** : :class:`python:str`, :obj:`optional`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.load_table:51
msgid ""
"Variable name corresponding to the first dimension (plane). See ``var1``. "
"Default Plane."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.load_table:54
msgid "**csysid** : :class:`python:str`, :obj:`optional`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.load_table:55
msgid ""
"An integer corresponding to the coordinate system ID number. APDL Default = "
"0 (global Cartesian)"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.load_table:58
msgid ""
"**col_header** : :ref:`bool <python:bltin-boolean-values>`, :obj:`optional`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.load_table:59
msgid ""
"Indicates if the first row of the input array is a header. Set to True if "
"the array includes a header row. Default is False."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlExtended.load_table:77
msgid ""
"Transfer a table to MAPDL. The first column is time values and must be "
"ascending in order."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.Mapdl.locked.rst:2
msgid "ansys.mapdl.core.Mapdl.locked"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:80:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.Mapdl.locked:2
msgid "Instance is in use within a pool."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.Mapdl.logger.rst:2
msgid "ansys.mapdl.core.Mapdl.logger"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:80:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.Mapdl.logger:2
msgid "MAPDL Python-based logger"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.Mapdl.lplot.rst:2
msgid "ansys.mapdl.core.Mapdl.lplot"
msgstr ""

#: ../../pymapdl/doc/source/api/plotting.rst:20:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.lplot:2
msgid "Display the selected lines."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.lplot:4
msgid "APDL Command: LPLOT"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.lplot:12
msgid "**nl1, nl2, ninc**"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.lplot:13
msgid ""
"Display lines from NL1 to NL2 (defaults to NL1) in steps of NINC (defaults "
"to 1).  If NL1 = ALL (default), NL2 and NINC are ignored and display all "
"selected lines [LSEL]."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.lplot:21
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.vplot:40
msgid "Display line and keypoint numbers when ``vtk=True``."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.lplot:24
msgid "Number keypoints.  Only valid when ``show_keypoints=True``"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.lplot:26
msgid ""
"**color_lines** : :ref:`bool <python:bltin-boolean-values>`, :obj:`optional`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.lplot:27
msgid "Color each line with a different color."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.lplot:46
msgid ""
"Mesh divisions on plotted lines are controlled by the ``ldiv`` option of the"
" ``psymb`` command when ``vtk=False``. Otherwise, line divisions are "
"controlled automatically."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.Mapdl.mapdl_on_hpc.rst:2
msgid "ansys.mapdl.core.Mapdl.mapdl\\_on\\_hpc"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:80:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.Mapdl.mapdl_on_hpc:2
msgid ""
"Returns :class:`True` if the MAPDL instance has been launched using an "
"scheduler."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.Mapdl.mute.rst:2
msgid "ansys.mapdl.core.Mapdl.mute"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:113:<autosummary>:1
#: ../../pymapdl/doc/source/api/mapdl.rst:80:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.Mapdl.mute:2
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.mute:2
msgid ""
"Silence the response from all MAPDL functions unless explicitly set to "
"``True``."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.Mapdl.mute:11
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.mute:11
msgid ":ref:`bool <python:bltin-boolean-values>`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.Mapdl.mute:12
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.mute:12
msgid "Current state of the mute."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.Mapdl.mute:29
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.mute:29
msgid ""
"Temporarily override the instance setting this with ``mute=False``.  This is"
" useful for methods that parse the MAPDL output like ``k``."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.Mapdl.name.rst:2
msgid "ansys.mapdl.core.Mapdl.name"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:80:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.Mapdl.name:2
msgid "Instance unique identifier."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.Mapdl.non_interactive.rst:2
msgid "ansys.mapdl.core.Mapdl.non\\_interactive"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:80:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.Mapdl.non_interactive:2
msgid "Non-interactive context manager."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.Mapdl.non_interactive:4
msgid ""
"Allow to execute code without user interaction or waiting between PyMAPDL "
"responses. It can also be used to execute some commands which are not "
"supported in interactive mode. For a complete list of commands visit "
":ref:`ref_unsupported_interactive_commands`."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.Mapdl.non_interactive:10
msgid "View the last response with :attr:`Mapdl.last_response` method."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.Mapdl.non_interactive:25
msgid ""
"All the commands executed inside this context manager are not executed until"
" the context manager exits which then execute them all at once in the MAPDL "
"instance."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.Mapdl.non_interactive:29
msgid ""
"This command uses :func:`Mapdl.input() <ansys.mapdl.core.Mapdl.input>` "
"method."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.Mapdl.non_interactive:35
msgid ""
"Use the non-interactive context manager for the VWRITE ( "
":func:`Mapdl.vwrite() <ansys.mapdl.core.Mapdl.vwrite>`) command."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.Mapdl.nplot.rst:2
msgid "ansys.mapdl.core.Mapdl.nplot"
msgstr ""

#: ../../pymapdl/doc/source/api/plotting.rst:20:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.nplot:2
msgid "APDL Command: NPLOT"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.nplot:4
msgid "Displays nodes."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.nplot:12
msgid ""
"**nnum** : :ref:`bool <python:bltin-boolean-values>`, :class:`python:int`, "
":obj:`optional`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.nplot:11
msgid "bool, python:int, optional"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.nplot:13
msgid "Node number key:"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.nplot:15
msgid "``False`` : No node numbers on display (default)."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.nplot:16
msgid "``True`` : Include node numbers on display."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.nplot:19
msgid "This parameter is only valid when ``vtk==True``"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.nplot:22
msgid ""
"Plot the currently selected nodes using ``pyvista``. Defaults to current "
"``use_vtk`` setting as set on the initialization of MAPDL."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.nplot:94
msgid "Plot using VTK while showing labels and changing the background."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.nplot:108
msgid "Plot without using VTK."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.nplot:116
msgid "Plot nodal boundary conditions."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.Mapdl.on_docker.rst:2
msgid "ansys.mapdl.core.Mapdl.on\\_docker"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:80:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.Mapdl.on_docker:2
msgid "Check if MAPDL is running on docker."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.Mapdl.open_apdl_log.rst:2
msgid "ansys.mapdl.core.Mapdl.open\\_apdl\\_log"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:80:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_core.pydocstring of
#: ansys.mapdl.core.mapdl_core._MapdlCore.open_apdl_log:2
msgid "Start writing all APDL commands to an MAPDL input file."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_core.pydocstring of
#: ansys.mapdl.core.mapdl_core._MapdlCore.open_apdl_log:7
msgid "**filename** : :class:`python:str`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:37
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_core.pydocstring of
#: ansys.mapdl.core.mapdl_core._MapdlCore.open_apdl_log:10
msgid "**mode** : :class:`python:str`, :obj:`optional`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_core.pydocstring of
#: ansys.mapdl.core.mapdl_core._MapdlCore.open_apdl_log:11
msgid ""
"Python file modes (for example, ``'a'``, ``'w'``).  Should be either write "
"or append."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_core.pydocstring of
#: ansys.mapdl.core.mapdl_core._MapdlCore.open_apdl_log:30
msgid "Begin writing APDL commands to ``\"log.inp\"``."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.Mapdl.open_gui.rst:2
msgid "ansys.mapdl.core.Mapdl.open\\_gui"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:80:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_core.pydocstring of
#: ansys.mapdl.core.mapdl_core._MapdlCore.open_gui:2
msgid "Save the existing database and open it up in the MAPDL GUI."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_core.pydocstring of
#: ansys.mapdl.core.mapdl_core._MapdlCore.open_gui:7
msgid ""
"**include_result** : :ref:`bool <python:bltin-boolean-values>`, "
":obj:`optional`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_core.pydocstring of
#: ansys.mapdl.core.mapdl_core._MapdlCore.open_gui:8
msgid ""
"Allow the result file to be post processed in the GUI.  It is ignored if "
"``inplace`` is ``True``.  By default, ``True``."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_core.pydocstring of
#: ansys.mapdl.core.mapdl_core._MapdlCore.open_gui:11
msgid ""
"**inplace** : :ref:`bool <python:bltin-boolean-values>`, :obj:`optional`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_core.pydocstring of
#: ansys.mapdl.core.mapdl_core._MapdlCore.open_gui:12
msgid ""
"Open the GUI on the current MAPDL working directory, instead of creating a "
"new temporary directory and coping the results files over there.  If "
"``True``, ignores ``include_result`` parameter.  By default, this ``False``."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_core.pydocstring of
#: ansys.mapdl.core.mapdl_core._MapdlCore.open_gui:34
msgid "Create a square area using keypoints."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_core.pydocstring of
#: ansys.mapdl.core.mapdl_core._MapdlCore.open_gui:47
msgid "Open up the gui."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_core.pydocstring of
#: ansys.mapdl.core.mapdl_core._MapdlCore.open_gui:51
msgid "Resume where you left off."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.Mapdl.platform.rst:2
msgid "ansys.mapdl.core.Mapdl.platform"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:80:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.Mapdl.platform:2
msgid "Return the platform where MAPDL is running."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.Mapdl.print_com.rst:2
msgid "ansys.mapdl.core.Mapdl.print\\_com"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:80:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.Mapdl.print_com:2
msgid ""
"Whether to print or not to the console the :meth:`mapdl.com (\"/COM\") "
"<ansys.mapdl.core.Mapdl.com>` calls."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.Mapdl.process_is_alive.rst:2
msgid "ansys.mapdl.core.Mapdl.process\\_is\\_alive"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:80:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.Mapdl.process_is_alive:2
msgid "Check if the MAPDL process is alive"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.Mapdl.remove_file_handler.rst:2
msgid "ansys.mapdl.core.Mapdl.remove\\_file\\_handler"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:80:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_core.pydocstring of
#: ansys.mapdl.core.mapdl_core._MapdlCore.remove_file_handler:2
msgid "Removes the filehander from the log"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.Mapdl.remove_temp_dir_on_exit.rst:2
msgid "ansys.mapdl.core.Mapdl.remove\\_temp\\_dir\\_on\\_exit"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.Mapdl.result.rst:2
msgid "ansys.mapdl.core.Mapdl.result"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:80:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.Mapdl.result:2
msgid ""
"Binary interface to the result file using "
":class:`ansys.mapdl.reader.rst.Result`."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.Mapdl.result:10
msgid ":class:`ansys.mapdl.reader.rst.Result`."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.Mapdl.result:11
msgid ""
"Result reader class.  See `Legacy PyMAPDL Reader "
"<https://readerdocs.pyansys.com/>`."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.Mapdl.result_file.rst:2
msgid "ansys.mapdl.core.Mapdl.result\\_file"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:80:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.Mapdl.result_file:2
msgid "Return the RST file path."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.Mapdl.run.rst:2
msgid "ansys.mapdl.core.Mapdl.run"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:80:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_core.pydocstring of
#: ansys.mapdl.core.mapdl_core._MapdlCore.run:2
msgid "Run single APDL command."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_core.pydocstring of
#: ansys.mapdl.core.mapdl_core._MapdlCore.run:4
msgid ""
"For multiple commands, use :func:`Mapdl.input_strings() "
"<ansys.mapdl.core.Mapdl.input_strings>`."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_core.pydocstring of
#: ansys.mapdl.core.mapdl_core._MapdlCore.run:9
msgid "**command** : :class:`python:str`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_core.pydocstring of
#: ansys.mapdl.core.mapdl_core._MapdlCore.run:10
msgid "ANSYS APDL command."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_core.pydocstring of
#: ansys.mapdl.core.mapdl_core._MapdlCore.run:12
msgid ""
"**write_to_log** : :ref:`bool <python:bltin-boolean-values>`, "
":obj:`optional`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_core.pydocstring of
#: ansys.mapdl.core.mapdl_core._MapdlCore.run:13
msgid ""
"Overrides APDL log writing.  Default ``True``.  When set to ``False``, will "
"not write command to log, even if APDL command logging is enabled."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_core.pydocstring of
#: ansys.mapdl.core.mapdl_core._MapdlCore.run:17
msgid "**kwargs** : :class:`python:dict`, :obj:`optional`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:145
#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:151
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_core.pydocstring of
#: ansys.mapdl.core.mapdl_core._MapdlCore.run:16
#: ../../pymapdl/src/ansys/mapdl/core/pool.pydocstring of
#: ansys.mapdl.core.pool.MapdlPool:82
msgid "python:dict, optional"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_core.pydocstring of
#: ansys.mapdl.core.mapdl_core._MapdlCore.run:18
msgid ""
"These keyword arguments are interface specific or for development purposes."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_core.pydocstring of
#: ansys.mapdl.core.mapdl_core._MapdlCore.run:21
msgid "avoid_non_interactive : :class:`bool`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_core.pydocstring of
#: ansys.mapdl.core.mapdl_core._MapdlCore.run:22
msgid ""
"*(Development use only)* Avoids the non-interactive mode for this specific "
"command. Defaults to ``False``."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_core.pydocstring of
#: ansys.mapdl.core.mapdl_core._MapdlCore.run:26
msgid "verbose : :class:`bool`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_core.pydocstring of
#: ansys.mapdl.core.mapdl_core._MapdlCore.run:27
msgid ""
"Prints the command to the screen before running it. Defaults to ``False``."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_core.pydocstring of
#: ansys.mapdl.core.mapdl_core._MapdlCore.run:35
msgid "Command output from MAPDL."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_core.pydocstring of
#: ansys.mapdl.core.mapdl_core._MapdlCore.run:48
msgid "**Running non-interactive commands**"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_core.pydocstring of
#: ansys.mapdl.core.mapdl_core._MapdlCore.run:50
msgid ""
"When two or more commands need to be run non-interactively (i.e. "
"``*VWRITE``) use"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_core.pydocstring of
#: ansys.mapdl.core.mapdl_core._MapdlCore.run:57
msgid "Alternatively, you can simply run a block of commands with:"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_core.pydocstring of
#: ansys.mapdl.core.mapdl_core._MapdlCore.run:66
msgid "Equivalent Pythonic method:"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.Mapdl.run_as_routine.rst:2
msgid "ansys.mapdl.core.Mapdl.run\\_as\\_routine"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:80:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_core.pydocstring of
#: ansys.mapdl.core.mapdl_core._MapdlCore.run_as_routine:2
msgid ""
"Runs a command or commands at a routine and then revert to the prior "
"routine."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_core.pydocstring of
#: ansys.mapdl.core.mapdl_core._MapdlCore.run_as_routine:4
msgid "This can be useful to avoid constantly changing between routines."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_core.pydocstring of
#: ansys.mapdl.core.mapdl_core._MapdlCore.run_as_routine:8
msgid "**routine** : :class:`python:str`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_core.pydocstring of
#: ansys.mapdl.core.mapdl_core._MapdlCore.run_as_routine:9
msgid "A MAPDL routine. For example, ``\"PREP7\"`` or ``\"POST1\"``."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_core.pydocstring of
#: ansys.mapdl.core.mapdl_core._MapdlCore.run_as_routine:25
msgid ""
"Enter ``PREP7`` and run ``numvar``, which requires ``POST26``, and revert to"
" the prior routine."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.Mapdl.run_multiline.rst:2
msgid "ansys.mapdl.core.Mapdl.run\\_multiline"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:80:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_core.pydocstring of
#: ansys.mapdl.core.mapdl_core._MapdlCore.run_multiline:2
msgid ""
"Run several commands as a single block :rtype: "
":sphinx_autodoc_typehints_type:`\\:py\\:class\\:\\`str\\``"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_core.pydocstring of
#: ansys.mapdl.core.mapdl_core._MapdlCore.run_multiline:6
msgid "This function is being deprecated. Please use `input_strings` instead."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_core.pydocstring of
#: ansys.mapdl.core.mapdl_core._MapdlCore.run_multiline:10
msgid "Allows to run multiple mapdl commands in different lines in one go."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_core.pydocstring of
#: ansys.mapdl.core.mapdl_core._MapdlCore.run_multiline:14
msgid "**commands** : :class:`python:str`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_core.pydocstring of
#: ansys.mapdl.core.mapdl_core._MapdlCore.run_multiline:15
msgid "Commands separated by new lines.  See example."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.Mapdl.save_selection.rst:2
msgid "ansys.mapdl.core.Mapdl.save\\_selection"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:80:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.Mapdl.save_selection:2
msgid "Save selection"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.Mapdl.save_selection:4
msgid ""
"Save the current selection (nodes, elements, keypoints, lines, areas, "
"volumes and components) before entering in the context manager, and when "
"exit returns to that selection."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.Mapdl.scalar_param.rst:2
msgid "ansys.mapdl.core.Mapdl.scalar\\_param"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:80:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.scalar_param:2
msgid "Return a scalar parameter as a float."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.scalar_param:4
msgid "If parameter does not exist, returns ``None``."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._ComponentQueries.centrx:29
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._ComponentQueries.centry:29
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._ComponentQueries.centrz:29
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._ComponentQueries.kx:27
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._ComponentQueries.ky:27
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._ComponentQueries.kz:27
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._ComponentQueries.nx:28
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._ComponentQueries.ny:28
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._ComponentQueries.nz:28
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._DisplacementComponentQueries.rotx:27
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._DisplacementComponentQueries.roty:27
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._DisplacementComponentQueries.rotz:27
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._DisplacementComponentQueries.ux:27
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._DisplacementComponentQueries.uy:27
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._DisplacementComponentQueries.uz:27
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/line_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.line_queries._LineFractionCoordinateQueries.lx:32
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/line_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.line_queries._LineFractionCoordinateQueries.ly:32
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/line_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.line_queries._LineFractionCoordinateQueries.lz:32
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/line_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.line_queries._LineFractionSlopeQueries.lsx:34
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/line_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.line_queries._LineFractionSlopeQueries.lsy:34
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/line_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.line_queries._LineFractionSlopeQueries.lsz:34
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.scalar_param:20
msgid ":sphinx_autodoc_typehints_type:`\\:py\\:class\\:\\`float\\``"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.Mapdl.screenshot.rst:2
msgid "ansys.mapdl.core.Mapdl.screenshot"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:80:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.screenshot:2
msgid "Take an MAPDL screenshot and show it in a popup window."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.screenshot:7
msgid "**savefig** : :obj:`Optional`\\[:class:`python:str`], :obj:`optional`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.screenshot:6
msgid "Optional[python:str], optional"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.screenshot:8
msgid "Name of or path to the screenshot file. The default is ``None``."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.screenshot:16
msgid "File name."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.screenshot:0
msgid "Raises"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.screenshot:23
msgid ":obj:`FileNotFoundError`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.screenshot:24
msgid ""
"If the path given in the ``savefig`` parameter is not found or is not "
"consistent."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.screenshot:26
msgid ":obj:`ValueError`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.screenshot:27
msgid "If given a wrong type for the ``savefig`` parameter."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.Mapdl.set_log_level.rst:2
msgid "ansys.mapdl.core.Mapdl.set\\_log\\_level"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:80:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_core.pydocstring of
#: ansys.mapdl.core.mapdl_core._MapdlCore.set_log_level:2
msgid "Sets log level"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_core.pydocstring of
#: ansys.mapdl.core.mapdl_core._MapdlCore.set_log_level:7
msgid "**loglevel** : :class:`python:str`, :class:`python:int`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_core.pydocstring of
#: ansys.mapdl.core.mapdl_core._MapdlCore.set_log_level:6
msgid "python:str, python:int"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_core.pydocstring of
#: ansys.mapdl.core.mapdl_core._MapdlCore.set_log_level:26
msgid "Set the log level to debug"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_core.pydocstring of
#: ansys.mapdl.core.mapdl_core._MapdlCore.set_log_level:30
msgid "Set the log level to info"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_core.pydocstring of
#: ansys.mapdl.core.mapdl_core._MapdlCore.set_log_level:34
msgid "Set the log level to warning"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_core.pydocstring of
#: ansys.mapdl.core.mapdl_core._MapdlCore.set_log_level:38
msgid "Set the log level to error"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.Mapdl.thermal_result.rst:2
msgid "ansys.mapdl.core.Mapdl.thermal\\_result"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:80:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.Mapdl.thermal_result:2
msgid "The thermal result object."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.Mapdl.use_vtk.rst:2
msgid "ansys.mapdl.core.Mapdl.use\\_vtk"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:80:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.Mapdl.use_vtk:2
msgid "Returns if using VTK by default or not."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.Mapdl.version.rst:2
msgid "ansys.mapdl.core.Mapdl.version"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:80:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.Mapdl.version:2
msgid "MAPDL build version."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.Mapdl.vplot.rst:2
msgid "ansys.mapdl.core.Mapdl.vplot"
msgstr ""

#: ../../pymapdl/doc/source/api/plotting.rst:20:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.vplot:2
msgid "Plot the selected volumes."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.vplot:4
msgid "APDL Command: VPLOT"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.vplot:12
msgid "**nv1, nv2, ninc**"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.vplot:13
msgid ""
"Display volumes from NV1 to NV2 (defaults to NV1) in steps of NINC (defaults"
" to 1).  If NV1 = ALL (default), NV2 and NINC are ignored and all selected "
"volumes [VSEL] are displayed.  Ignored when ``vtk=True``."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.vplot:18
msgid "**degen**"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.vplot:19
msgid ""
"Degeneracy marker.  ``\"blank\"`` No degeneracy marker is used (default), or"
" ``\"DEGE\"``.  A red star is placed on keypoints at degeneracies (see the "
"Modeling and Meshing Guide).  Not available if /FACET,WIRE is set.  Ignored "
"when ``vtk=True``."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.vplot:25
msgid "**scale**"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.vplot:26
msgid ""
"Scale factor for the size of the degeneracy-marker star.  The scale is the "
"size in window space (-1 to 1 in both directions) (defaults to .075).  "
"Ignored when ``vtk=True``."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.vplot:31
msgid ""
"Plot the currently selected volumes using ``ansys-tools-"
"visualization_interface``. As this creates a temporary surface mesh, this "
"may have a long execution time for large meshes."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.vplot:36
msgid ""
"quality of the mesh to display.  Varies between 1 (worst) to 10 (best).  "
"Applicable when ``vtk=True``."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.vplot:39
msgid ""
"**show_numbering** : :ref:`bool <python:bltin-boolean-values>`, "
":obj:`optional`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.vplot:61
msgid "Plot while displaying area numbers."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.component.Component.rst:2
msgid "ansys.mapdl.core.component.Component"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.component.Component.rst:23:<autosummary>:1
#: ../../pymapdl/doc/source/api/components.rst:13:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/component.pydocstring of
#: ansys.mapdl.core.component.Component:2
#: ../../pymapdl/src/ansys/mapdl/core/component.pydocstring of
#: ansys.mapdl.core.component.Component.__init__:2
msgid "Component object"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/component.pydocstring of
#: ansys.mapdl.core.component.Component:4
msgid "Object which contain the definition of a component."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/component.pydocstring of
#: ansys.mapdl.core.component.Component:8
msgid "**type_** : :class:`python:str`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/component.pydocstring of
#: ansys.mapdl.core.component.Component:9
msgid "The entity type. For instance \"NODES\", \"KP\", \"VOLU\", etc"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/component.pydocstring of
#: ansys.mapdl.core.component.Component:11
msgid ""
"**items_** : :data:`python:None`, :class:`python:str`, :class:`python:int`, "
":obj:`List`\\[:class:`python:int`], :obj:`np.array`\\[:class:`python:int`]]"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/component.pydocstring of
#: ansys.mapdl.core.component.Component:10
msgid ""
"python:None, python:str, python:int, List[python:int], np.array[python:int]]"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/component.pydocstring of
#: ansys.mapdl.core.component.Component:12
msgid "Item ids contained in the component."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/component.pydocstring of
#: ansys.mapdl.core.component.Component:28
msgid "To create a component object"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/component.pydocstring of
#: ansys.mapdl.core.component.Component:34
msgid "To index the content of the component object:"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/component.pydocstring of
#: ansys.mapdl.core.component.Component:41
msgid "To access the type of the entities:"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/component.pydocstring of
#: ansys.mapdl.core.component.Component:46
msgid "Convert to list:"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.component.Component.rst:13
#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.component.ComponentManager.rst:13
#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.database.MapdlDb.rst:13
#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.database.elems.DbElems.rst:13
#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.database.nodes.DbNodes.rst:13
#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.krylov.KrylovSolver.rst:13
#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.logging.Logger.rst:13
#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mapdl_geometry.Geometry.rst:13
#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mapdl_geometry.LegacyGeometry.rst:13
#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mesh_grpc.MeshGrpc.rst:13
#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.parameters.Parameters.rst:13
#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlPlotter.rst:13
#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlTheme.rst:13
#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.pool.MapdlPool.rst:13
#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:13
#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.solution.Solution.rst:13
#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.xpl.ansXpl.rst:13
msgid "Methods"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.component.Component.rst:23:<autosummary>:1
msgid ""
":py:obj:`__init__ <ansys.mapdl.core.component.Component.__init__>`\\ "
"\\(\\*args\\, \\*\\*kwargs\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.component.Component.rst:23:<autosummary>:1
msgid ""
":py:obj:`count <ansys.mapdl.core.component.Component.count>`\\ \\(value\\, "
"\\/\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.component.Component.rst:23:<autosummary>:1
msgid "Return number of occurrences of value."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.component.Component.rst:23:<autosummary>:1
msgid ""
":py:obj:`index <ansys.mapdl.core.component.Component.index>`\\ "
"\\(value\\[\\, start\\, stop\\]\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.component.Component.rst:23:<autosummary>:1
msgid "Return first index of value."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.component.Component.rst:25
#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.component.ComponentManager.rst:25
#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.database.MapdlDb.rst:28
#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.database.elems.DbElems.rst:29
#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.database.nodes.DbNodes.rst:30
#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.krylov.KrylovSolver.rst:27
#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.logging.Logger.rst:29
#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mapdl_geometry.Geometry.rst:33
#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mapdl_geometry.LegacyGeometry.rst:36
#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mesh_grpc.MeshGrpc.rst:25
#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.parameters.Parameters.rst:27
#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlPlotter.rst:33
#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlTheme.rst:28
#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.pool.MapdlPool.rst:30
#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:85
#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.solution.Solution.rst:23
#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.xpl.ansXpl.rst:39
msgid "Attributes"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.component.Component.rst:29:<autosummary>:1
msgid ":py:obj:`items <ansys.mapdl.core.component.Component.items>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.component.Component.rst:29:<autosummary>:1
msgid "Return the ids of the entities in the component."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.component.Component.rst:29:<autosummary>:1
msgid ":py:obj:`type <ansys.mapdl.core.component.Component.type>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.component.Component.rst:29:<autosummary>:1
msgid "Return the type of the component."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.component.ComponentManager.rst:2
msgid "ansys.mapdl.core.component.ComponentManager"
msgstr ""

#: ../../pymapdl/doc/source/api/components.rst:13:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/component.pydocstring of
#: ansys.mapdl.core.component.ComponentManager:2
msgid "Collection of MAPDL components."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/component.pydocstring of
#: ansys.mapdl.core.component.ComponentManager:18
msgid ""
"**Components need to be selected** using :attr:`Mapdl.cmsel() "
"<ansys.mapdl.core.Mapdl.cmsel>` before being listed in "
":class:`Mapdl.components <ansys.mapdl.core.component.ComponentManager>`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/component.pydocstring of
#: ansys.mapdl.core.component.ComponentManager:25
msgid "Simply list all the *selected* components:"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/component.pydocstring of
#: ansys.mapdl.core.component.ComponentManager:33
msgid "Get a component:"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/component.pydocstring of
#: ansys.mapdl.core.component.ComponentManager:38
msgid "Set a component specifying the type and items:"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/component.pydocstring of
#: ansys.mapdl.core.component.ComponentManager:42
msgid ""
"Set a component without specifying the type, by default it is ``NODE``:"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/component.pydocstring of
#: ansys.mapdl.core.component.ComponentManager:52
msgid ""
"You can change the default type by changing "
":attr:`Mapdl.components.default_entity "
"<ansys.mapdl.core.Mapdl.components.default_entity>`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/component.pydocstring of
#: ansys.mapdl.core.component.ComponentManager:60
msgid "You can also create a component from the already selected entities:"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/component.pydocstring of
#: ansys.mapdl.core.component.ComponentManager:67
msgid "Selecting a component and retrieving it:"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.component.ComponentManager.rst:23:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/component.pydocstring of
#: ansys.mapdl.core.component.ComponentManager.__init__:2
msgid "Component Manager."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/component.pydocstring of
#: ansys.mapdl.core.component.ComponentManager.__init__:4
msgid ""
"Component manager of an :class:`Mapdl instance <ansys.mapdl.core.Mapdl>` "
"instance."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/component.pydocstring of
#: ansys.mapdl.core.component.ComponentManager.__init__:9
#: ../../pymapdl/src/ansys/mapdl/core/krylov.pydocstring of
#: ansys.mapdl.core.krylov.KrylovSolver.__init__:9
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_geometry.pydocstring of
#: ansys.mapdl.core.mapdl_geometry.Geometry.__init__:9
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_geometry.pydocstring of
#: ansys.mapdl.core.mapdl_geometry.LegacyGeometry.__init__:9
#: ../../pymapdl/src/ansys/mapdl/core/parameters.pydocstring of
#: ansys.mapdl.core.parameters.Parameters.__init__:9
#: ../../pymapdl/src/ansys/mapdl/core/solution.pydocstring of
#: ansys.mapdl.core.solution.Solution.__init__:9
msgid "**mapdl** : :obj:`ansys.mapdl.core.Mapdl`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/component.pydocstring of
#: ansys.mapdl.core.component.ComponentManager.__init__:8
#: ../../pymapdl/src/ansys/mapdl/core/krylov.pydocstring of
#: ansys.mapdl.core.krylov.KrylovSolver.__init__:8
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_geometry.pydocstring of
#: ansys.mapdl.core.mapdl_geometry.Geometry.__init__:8
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_geometry.pydocstring of
#: ansys.mapdl.core.mapdl_geometry.LegacyGeometry.__init__:8
#: ../../pymapdl/src/ansys/mapdl/core/parameters.pydocstring of
#: ansys.mapdl.core.parameters.Parameters.__init__:8
#: ../../pymapdl/src/ansys/mapdl/core/solution.pydocstring of
#: ansys.mapdl.core.solution.Solution.__init__:8
msgid "ansys.mapdl.core.Mapdl"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/component.pydocstring of
#: ansys.mapdl.core.component.ComponentManager.__init__:10
#: ../../pymapdl/src/ansys/mapdl/core/krylov.pydocstring of
#: ansys.mapdl.core.krylov.KrylovSolver.__init__:10
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_geometry.pydocstring of
#: ansys.mapdl.core.mapdl_geometry.Geometry.__init__:10
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_geometry.pydocstring of
#: ansys.mapdl.core.mapdl_geometry.LegacyGeometry.__init__:10
#: ../../pymapdl/src/ansys/mapdl/core/parameters.pydocstring of
#: ansys.mapdl.core.parameters.Parameters.__init__:10
#: ../../pymapdl/src/ansys/mapdl/core/solution.pydocstring of
#: ansys.mapdl.core.solution.Solution.__init__:10
msgid "Mapdl instance which this class references to."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.component.ComponentManager.rst:23:<autosummary>:1
msgid ""
":py:obj:`__init__ <ansys.mapdl.core.component.ComponentManager.__init__>`\\ "
"\\(mapdl\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.component.ComponentManager.rst:23:<autosummary>:1
msgid ":py:obj:`items <ansys.mapdl.core.component.ComponentManager.items>`\\ \\(\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.component.ComponentManager.rst:23:<autosummary>:1
msgid ""
"Return a view object that contains the name-type pairs for each component."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.component.ComponentManager.rst:23:<autosummary>:1
msgid ""
":py:obj:`select <ansys.mapdl.core.component.ComponentManager.select>`\\ "
"\\(names\\[\\, mute\\]\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.component.ComponentManager.rst:23:<autosummary>:1
msgid "Select Select components given their names"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.component.ComponentManager.rst:32:<autosummary>:1
msgid ""
":py:obj:`default_entity "
"<ansys.mapdl.core.component.ComponentManager.default_entity>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.component.ComponentManager.rst:32:<autosummary>:1
msgid "Default entity for component creation."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.component.ComponentManager.rst:32:<autosummary>:1
msgid ""
":py:obj:`default_entity_warning "
"<ansys.mapdl.core.component.ComponentManager.default_entity_warning>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.component.ComponentManager.rst:32:<autosummary>:1
msgid ""
"Enables the warning when creating components other than node components "
"without specifying its type."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.component.ComponentManager.rst:32:<autosummary>:1
msgid ":py:obj:`logger <ansys.mapdl.core.component.ComponentManager.logger>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.component.ComponentManager.rst:32:<autosummary>:1
msgid "Access to the logger."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.component.ComponentManager.rst:32:<autosummary>:1
msgid ":py:obj:`names <ansys.mapdl.core.component.ComponentManager.names>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.component.ComponentManager.rst:32:<autosummary>:1
msgid "Return a tuple that contains the components."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.component.ComponentManager.rst:32:<autosummary>:1
msgid ":py:obj:`types <ansys.mapdl.core.component.ComponentManager.types>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.component.ComponentManager.rst:32:<autosummary>:1
msgid "Return the types of the components."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.convert.convert_apdl_block.rst:2
msgid "ansys.mapdl.core.convert.convert\\_apdl\\_block"
msgstr ""

#: ../../pymapdl/doc/source/api/helper.rst:19:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/convert.pydocstring of
#: ansys.mapdl.core.convert.convert_apdl_block:2
msgid "Converts an ANSYS input string to a python PyMAPDL string."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/convert.pydocstring of
#: ansys.mapdl.core.convert.convert_apdl_block:7
msgid "**apdl_string** : :class:`python:str`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/convert.pydocstring of
#: ansys.mapdl.core.convert.convert_apdl_block:8
msgid "APDL strings or list of strings to convert."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/convert.pydocstring of
#: ansys.mapdl.core.convert.convert_apdl_block:10
#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:54
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc:17
msgid "**loglevel** : :class:`python:str`, :obj:`optional`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/convert.pydocstring of
#: ansys.mapdl.core.convert.convert_apdl_block:11
#: ../../pymapdl/src/ansys/mapdl/core/convert.pydocstring of
#: ansys.mapdl.core.convert.convert_script:15
msgid "Logging level of the ansys object within the script."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/convert.pydocstring of
#: ansys.mapdl.core.convert.convert_apdl_block:13
msgid ""
"**auto_exit** : :ref:`bool <python:bltin-boolean-values>`, :obj:`optional`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/convert.pydocstring of
#: ansys.mapdl.core.convert.convert_apdl_block:14
#: ../../pymapdl/src/ansys/mapdl/core/convert.pydocstring of
#: ansys.mapdl.core.convert.convert_script:18
msgid "Adds a line to the end of the script to exit MAPDL.  Default ``True``."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/convert.pydocstring of
#: ansys.mapdl.core.convert.convert_apdl_block:17
msgid "**line_ending** : :class:`python:str`, :obj:`optional`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/convert.pydocstring of
#: ansys.mapdl.core.convert.convert_apdl_block:18
msgid "When None, automatically determined by OS being used."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/convert.pydocstring of
#: ansys.mapdl.core.convert.convert_apdl_block:20
msgid ""
"**macros_as_functions** : :ref:`bool <python:bltin-boolean-values>`, "
":obj:`optional`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/convert.pydocstring of
#: ansys.mapdl.core.convert.convert_apdl_block:21
#: ../../pymapdl/src/ansys/mapdl/core/convert.pydocstring of
#: ansys.mapdl.core.convert.convert_script:30
msgid "Attempt to convert MAPDL macros to python functions."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/convert.pydocstring of
#: ansys.mapdl.core.convert.convert_apdl_block:23
msgid ""
"**use_function_names** : :ref:`bool <python:bltin-boolean-values>`, "
":obj:`optional`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/convert.pydocstring of
#: ansys.mapdl.core.convert.convert_apdl_block:24
#: ../../pymapdl/src/ansys/mapdl/core/convert.pydocstring of
#: ansys.mapdl.core.convert.convert_script:33
msgid ""
"Convert MAPDL functions to ansys.mapdl.core.Mapdl class methods.  When "
"``True``, the MAPDL command \"K\" will be converted to ``mapdl.k``.  When "
"``False``, it will be converted to ``mapdl.run('k')``."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/convert.pydocstring of
#: ansys.mapdl.core.convert.convert_apdl_block:29
msgid ""
"**show_log** : :ref:`bool <python:bltin-boolean-values>`, :obj:`optional`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/convert.pydocstring of
#: ansys.mapdl.core.convert.convert_apdl_block:30
#: ../../pymapdl/src/ansys/mapdl/core/convert.pydocstring of
#: ansys.mapdl.core.convert.convert_script:39
msgid ""
"Print the converted commands using a logger (from ``logging`` Python "
"module)."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/convert.pydocstring of
#: ansys.mapdl.core.convert.convert_apdl_block:33
msgid ""
"**add_imports** : :ref:`bool <python:bltin-boolean-values>`, :obj:`optional`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/convert.pydocstring of
#: ansys.mapdl.core.convert.convert_apdl_block:34
msgid ""
"If ``True``, it add the next lines to the beginning of the output file:"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/convert.pydocstring of
#: ansys.mapdl.core.convert.convert_apdl_block:43
msgid ""
"This option is useful if you are planning to use the output script from "
"another mapdl session. See examples section. This option overrides "
"``'auto_exit'``."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/convert.pydocstring of
#: ansys.mapdl.core.convert.convert_apdl_block:47
msgid ""
"**comment_solve** : :ref:`bool <python:bltin-boolean-values>`, "
":obj:`optional`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/convert.pydocstring of
#: ansys.mapdl.core.convert.convert_apdl_block:48
msgid ""
"If ``True``, pythonically comment the lines containing ``mapdl.solve`` or "
"``\"/EOF\"``."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/convert.pydocstring of
#: ansys.mapdl.core.convert.convert_apdl_block:51
msgid ""
"**cleanup_output** : :ref:`bool <python:bltin-boolean-values>`, "
":obj:`optional`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/convert.pydocstring of
#: ansys.mapdl.core.convert.convert_apdl_block:52
msgid ""
"If ``True`` the output is formatted using ``autopep8`` before writing the "
"file or returning the string."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/convert.pydocstring of
#: ansys.mapdl.core.convert.convert_apdl_block:55
msgid ""
"**header** : :ref:`bool <python:bltin-boolean-values>`, :obj:`optional`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/convert.pydocstring of
#: ansys.mapdl.core.convert.convert_apdl_block:56
#: ../../pymapdl/src/ansys/mapdl/core/convert.pydocstring of
#: ansys.mapdl.core.convert.convert_script:60
msgid ""
"If ``True``, the default header is written in the first line of the output. "
"If a string is provided, this string will be used as header."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/convert.pydocstring of
#: ansys.mapdl.core.convert.convert_apdl_block:60
#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:142
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc:40
msgid ""
"**print_com** : :ref:`bool <python:bltin-boolean-values>`, :obj:`optional`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/convert.pydocstring of
#: ansys.mapdl.core.convert.convert_apdl_block:61
#: ../../pymapdl/src/ansys/mapdl/core/convert.pydocstring of
#: ansys.mapdl.core.convert.convert_script:65
msgid ""
"Print command ``/COM`` arguments to python console. Defaults to ``True``."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/convert.pydocstring of
#: ansys.mapdl.core.convert.convert_apdl_block:64
msgid ""
"**only_commands** : :ref:`bool <python:bltin-boolean-values>`, "
":obj:`optional`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/convert.pydocstring of
#: ansys.mapdl.core.convert.convert_apdl_block:65
#: ../../pymapdl/src/ansys/mapdl/core/convert.pydocstring of
#: ansys.mapdl.core.convert.convert_script:69
msgid ""
"If ``True``, it converts only the commands, meaning that header "
"(``header=False``), imports (``add_imports=False``), and exit commands are "
"NOT included (``auto_exit=False``). Overrides ``header``, ``add_imports`` "
"and ``auto_exit``."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/convert.pydocstring of
#: ansys.mapdl.core.convert.convert_apdl_block:70
msgid ""
"**use_vtk** : :ref:`bool <python:bltin-boolean-values>`, :obj:`optional`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/convert.pydocstring of
#: ansys.mapdl.core.convert.convert_apdl_block:71
msgid ""
"It sets the `mapdl.use_vtk` argument equals True or False depending on this "
"value. Defaults to `None` which is Mapdl class default."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/convert.pydocstring of
#: ansys.mapdl.core.convert.convert_apdl_block:74
msgid ""
"**clear_at_start** : :ref:`bool <python:bltin-boolean-values>`, "
":obj:`optional`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/convert.pydocstring of
#: ansys.mapdl.core.convert.convert_apdl_block:75
msgid ""
"Add a `mapdl.clear()` after the Mapdl object initialization. Defaults to "
"`False`."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/convert.pydocstring of
#: ansys.mapdl.core.convert.convert_apdl_block:78
msgid ""
"**check_parameter_names** : :ref:`bool <python:bltin-boolean-values>`, "
":obj:`optional`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/convert.pydocstring of
#: ansys.mapdl.core.convert.convert_apdl_block:79
msgid ""
"Set MAPDL object to avoid parameter name checks (do not raise leading "
"underscored parameter exceptions). Defaults to `False`."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/convert.pydocstring of
#: ansys.mapdl.core.convert.convert_apdl_block:86
#: ../../pymapdl/src/ansys/mapdl/core/convert.pydocstring of
#: ansys.mapdl.core.convert.convert_script:86
msgid "List of lines translated."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/convert.pydocstring of
#: ansys.mapdl.core.convert.convert_apdl_block:101
msgid "Convert a script and use it in the same session."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.convert.convert_script.rst:2
msgid "ansys.mapdl.core.convert.convert\\_script"
msgstr ""

#: ../../pymapdl/doc/source/api/helper.rst:19:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/convert.pydocstring of
#: ansys.mapdl.core.convert.convert_script:2
msgid "Converts an ANSYS input file to a python PyMAPDL script."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/convert.pydocstring of
#: ansys.mapdl.core.convert.convert_script:7
msgid "**filename_in** : :class:`python:str`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/convert.pydocstring of
#: ansys.mapdl.core.convert.convert_script:8
msgid "Filename of the ansys input file to read in."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/convert.pydocstring of
#: ansys.mapdl.core.convert.convert_script:10
msgid "filename_out"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/convert.pydocstring of
#: ansys.mapdl.core.convert.convert_script-1
msgid "str, optional"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/convert.pydocstring of
#: ansys.mapdl.core.convert.convert_script:11
msgid ""
"Filename of the python script to write a translation to. Defaults to the "
"``filename_in`` name ending in ``py``."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/convert.pydocstring of
#: ansys.mapdl.core.convert.convert_script:14
msgid "loglevel"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/convert.pydocstring of
#: ansys.mapdl.core.convert.convert_script:17
msgid "auto_exit"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/convert.pydocstring of
#: ansys.mapdl.core.convert.convert_script:21
msgid "line_ending"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/convert.pydocstring of
#: ansys.mapdl.core.convert.convert_script:22
msgid "When None, automatically is ``"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/convert.pydocstring of
#: ansys.mapdl.core.convert.convert_script:24
msgid "**.``**"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/convert.pydocstring of
#: ansys.mapdl.core.convert.convert_script:25
msgid "exec_file"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/convert.pydocstring of
#: ansys.mapdl.core.convert.convert_script:26
msgid ""
"Specify the location of the ANSYS executable and include it in the converter"
" output ``launch_mapdl`` call."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/convert.pydocstring of
#: ansys.mapdl.core.convert.convert_script:29
msgid "macros_as_functions"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/convert.pydocstring of
#: ansys.mapdl.core.convert.convert_script:32
msgid "use_function_names"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/convert.pydocstring of
#: ansys.mapdl.core.convert.convert_script:38
msgid "show_log"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/convert.pydocstring of
#: ansys.mapdl.core.convert.convert_script:42
msgid "add_imports"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/convert.pydocstring of
#: ansys.mapdl.core.convert.convert_script:43
msgid ""
"If ``True``, add the lines ``from ansys.mapdl.core import launch_mapdl`` and"
" ``mapdl = launch_mapdl(loglevel=\"WARNING\")`` to the beginning of the "
"output file. This option is useful if you are planning to use the output "
"script from another mapdl session. See examples section. This option "
"overrides ``auto_exit``."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/convert.pydocstring of
#: ansys.mapdl.core.convert.convert_script:50
msgid "comment_solve"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/convert.pydocstring of
#: ansys.mapdl.core.convert.convert_script:51
msgid ""
"If ``True``, it will pythonically comment the lines that contain "
"``\"SOLVE\"`` or ``\"/EOF\"``."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/convert.pydocstring of
#: ansys.mapdl.core.convert.convert_script:54
msgid "cleanup_output"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/convert.pydocstring of
#: ansys.mapdl.core.convert.convert_script:55
msgid ""
"If ``True`` the output is formatted using ``autopep8`` before writing the "
"file or returning the string. This requires ``autopep8`` to be installed."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/convert.pydocstring of
#: ansys.mapdl.core.convert.convert_script:59
msgid "header"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/convert.pydocstring of
#: ansys.mapdl.core.convert.convert_script:64
msgid "print_com"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/convert.pydocstring of
#: ansys.mapdl.core.convert.convert_script:68
msgid "only_commands"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/convert.pydocstring of
#: ansys.mapdl.core.convert.convert_script:74
msgid "use_vtk"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/convert.pydocstring of
#: ansys.mapdl.core.convert.convert_script:75
msgid ""
"It sets the `mapdl.use_vtk` argument equals True or False depending on this "
"value."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/convert.pydocstring of
#: ansys.mapdl.core.convert.convert_script:78
msgid "clear_at_start"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/convert.pydocstring of
#: ansys.mapdl.core.convert.convert_script:79
msgid "Add a `mapdl.clear()` after the Mapdl object initialization."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/convert.pydocstring of
#: ansys.mapdl.core.convert.convert_script:105
msgid ""
"Converting a script and using it already in the same session. For this case,"
" it is recommended to use :func:`convert_apdl_block() "
"<ansys.mapdl.core.convert_apdl_block>` since you do not need to write the "
"file."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.database.MapdlDb.rst:2
msgid "ansys.mapdl.core.database.MapdlDb"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/database/database.pydocstring of
#: ansys.mapdl.core.database.database.MapdlDb:2
msgid "Abstract mapdl database class.  Created from a ``Mapdl`` instance."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/database/database.pydocstring of
#: ansys.mapdl.core.database.database.MapdlDb:20
#: ../../pymapdl/src/ansys/mapdl/core/database/nodes.pydocstring of
#: ansys.mapdl.core.database.nodes.DbNodes:20
msgid "Create a nodes instance."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/database/database.pydocstring of
#: ansys.mapdl.core.database.database.MapdlDb:39
#: ../../pymapdl/src/ansys/mapdl/core/database/nodes.pydocstring of
#: ansys.mapdl.core.database.nodes.DbNodes:39
msgid "Return the selection status and the coordinates of node 22."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.database.MapdlDb.rst:26:<autosummary>:1
#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.database.elems.DbElems.rst:27:<autosummary>:1
#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.database.nodes.DbNodes.rst:28:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/database/database.pydocstring of
#: ansys.mapdl.core.database.database.MapdlDb.__init__:2
#: ../../pymapdl/src/ansys/mapdl/core/database/elems.pydocstring of
#: ansys.mapdl.core.database.elems.DbElems.__init__:2
#: ../../pymapdl/src/ansys/mapdl/core/database/nodes.pydocstring of
#: ansys.mapdl.core.database.nodes.DbNodes.__init__:2
msgid "Initialize this class."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.database.MapdlDb.rst:26:<autosummary>:1
msgid ""
":py:obj:`__init__ <ansys.mapdl.core.database.MapdlDb.__init__>`\\ "
"\\(mapdl\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.database.MapdlDb.rst:26:<autosummary>:1
msgid ":py:obj:`clear <ansys.mapdl.core.database.MapdlDb.clear>`\\ \\(\\*\\*kwargs\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.database.MapdlDb.rst:26:<autosummary>:1
msgid "Delete everything in the MAPDL database."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.database.MapdlDb.rst:26:<autosummary>:1
msgid ""
":py:obj:`load <ansys.mapdl.core.database.MapdlDb.load>`\\ \\(fname\\[\\, "
"progress\\_bar\\]\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.database.MapdlDb.rst:26:<autosummary>:1
msgid "Load a MAPDL database file in memory."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.database.MapdlDb.rst:26:<autosummary>:1
msgid ""
":py:obj:`save <ansys.mapdl.core.database.MapdlDb.save>`\\ \\(fname\\[\\, "
"option\\]\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.database.MapdlDb.rst:26:<autosummary>:1
msgid "Save the MAPDL database to disk."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.database.MapdlDb.rst:26:<autosummary>:1
msgid ""
":py:obj:`start <ansys.mapdl.core.database.MapdlDb.start>`\\ \\(\\[port\\, "
"timeout\\]\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.database.MapdlDb.rst:26:<autosummary>:1
msgid "Start the gRPC MAPDL database server."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.database.MapdlDb.rst:26:<autosummary>:1
msgid ":py:obj:`stop <ansys.mapdl.core.database.MapdlDb.stop>`\\ \\(\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.database.MapdlDb.rst:26:<autosummary>:1
msgid "Shutdown the MAPDL database service and close the connection."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.database.MapdlDb.rst:33:<autosummary>:1
msgid ":py:obj:`active <ansys.mapdl.core.database.MapdlDb.active>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.database.MapdlDb.rst:33:<autosummary>:1
msgid "Return if the database server is active."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.database.MapdlDb.rst:33:<autosummary>:1
msgid ":py:obj:`elems <ansys.mapdl.core.database.MapdlDb.elems>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.database.MapdlDb.rst:33:<autosummary>:1
msgid "MAPDL database element interface."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.database.MapdlDb.rst:33:<autosummary>:1
msgid ":py:obj:`nodes <ansys.mapdl.core.database.MapdlDb.nodes>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.database.MapdlDb.rst:33:<autosummary>:1
msgid "MAPDL database nodes interface."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.database.elems.DbElems.rst:2
msgid "ansys.mapdl.core.database.elems.DbElems"
msgstr ""

#: ../../pymapdl/doc/source/api/database.rst:13:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/database/elems.pydocstring of
#: ansys.mapdl.core.database.elems.DbElems:2
msgid "Abstract mapdl database element class."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/database/elems.pydocstring of
#: ansys.mapdl.core.database.elems.DbElems:20
msgid "Create a MAPDL database element instance."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/database/elems.pydocstring of
#: ansys.mapdl.core.database.elems.DbElems:31
msgid "Return the element information of element 1."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/database/elems.pydocstring of
#: ansys.mapdl.core.database.elems.DbElems:36
msgid "Return the nodes belonging to the element."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/database/elems.pydocstring of
#: ansys.mapdl.core.database.elems.DbElems:41
msgid "Return the element data."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.database.elems.DbElems.rst:27:<autosummary>:1
msgid ""
":py:obj:`__init__ <ansys.mapdl.core.database.elems.DbElems.__init__>`\\ "
"\\(db\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.database.elems.DbElems.rst:27:<autosummary>:1
msgid ""
":py:obj:`first <ansys.mapdl.core.database.elems.DbElems.first>`\\ "
"\\(\\[ielm\\]\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.database.elems.DbElems.rst:27:<autosummary>:1
msgid "Get the number of the first element."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.database.elems.DbElems.rst:27:<autosummary>:1
msgid ":py:obj:`get <ansys.mapdl.core.database.elems.DbElems.get>`\\ \\(ielm\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.database.elems.DbElems.rst:27:<autosummary>:1
msgid "Get element attributes and nodes."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.database.elems.DbElems.rst:27:<autosummary>:1
msgid ""
":py:obj:`info <ansys.mapdl.core.database.elems.DbElems.info>`\\ \\(ielm\\, "
"ikey\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.database.elems.DbElems.rst:27:<autosummary>:1
msgid "Get information about a element"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.database.elems.DbElems.rst:27:<autosummary>:1
msgid ":py:obj:`next <ansys.mapdl.core.database.elems.DbElems.next>`\\ \\(\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.database.elems.DbElems.rst:27:<autosummary>:1
msgid "Return the number of the next selected element."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.database.elems.DbElems.rst:27:<autosummary>:1
msgid ""
":py:obj:`num <ansys.mapdl.core.database.elems.DbElems.num>`\\ "
"\\(\\[selected\\]\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.database.elems.DbElems.rst:27:<autosummary>:1
msgid "Number of elements."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.database.elems.DbElems.rst:27:<autosummary>:1
msgid ""
":py:obj:`push <ansys.mapdl.core.database.elems.DbElems.push>`\\ \\(ielm\\, "
"elmdat\\, nodes\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.database.elems.DbElems.rst:27:<autosummary>:1
msgid "Push an element into the database."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.database.elems.DbElems.rst:32:<autosummary>:1
msgid ":py:obj:`max_num <ansys.mapdl.core.database.elems.DbElems.max_num>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.database.elems.DbElems.rst:32:<autosummary>:1
msgid "Maximum element number."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.database.nodes.DbNodes.rst:2
msgid "ansys.mapdl.core.database.nodes.DbNodes"
msgstr ""

#: ../../pymapdl/doc/source/api/database.rst:13:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/database/nodes.pydocstring of
#: ansys.mapdl.core.database.nodes.DbNodes:2
msgid "Abstract mapdl db nodes class."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/database/nodes.pydocstring of
#: ansys.mapdl.core.database.nodes.DbNodes:46
msgid "Return all the node indices, coordinates, and angles of all the nodes."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.database.nodes.DbNodes.rst:28:<autosummary>:1
msgid ""
":py:obj:`__init__ <ansys.mapdl.core.database.nodes.DbNodes.__init__>`\\ "
"\\(db\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.database.nodes.DbNodes.rst:28:<autosummary>:1
msgid ""
":py:obj:`all_asarray "
"<ansys.mapdl.core.database.nodes.DbNodes.all_asarray>`\\ \\(\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.database.nodes.DbNodes.rst:28:<autosummary>:1
msgid "Return all node indices, coordinates, and angles as arrays."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.database.nodes.DbNodes.rst:28:<autosummary>:1
msgid ":py:obj:`coord <ansys.mapdl.core.database.nodes.DbNodes.coord>`\\ \\(inod\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.database.nodes.DbNodes.rst:28:<autosummary>:1
msgid "Return the location of a node."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.database.nodes.DbNodes.rst:28:<autosummary>:1
msgid ""
":py:obj:`first <ansys.mapdl.core.database.nodes.DbNodes.first>`\\ "
"\\(\\[inod\\]\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.database.nodes.DbNodes.rst:28:<autosummary>:1
msgid "Return the number of the first node."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.database.nodes.DbNodes.rst:28:<autosummary>:1
msgid ""
":py:obj:`info <ansys.mapdl.core.database.nodes.DbNodes.info>`\\ \\(inod\\, "
"ikey\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.database.nodes.DbNodes.rst:28:<autosummary>:1
msgid "Return information about a node."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.database.nodes.DbNodes.rst:28:<autosummary>:1
msgid ":py:obj:`next <ansys.mapdl.core.database.nodes.DbNodes.next>`\\ \\(\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.database.nodes.DbNodes.rst:28:<autosummary>:1
msgid "Return the number of the next selected node."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.database.nodes.DbNodes.rst:28:<autosummary>:1
msgid ""
":py:obj:`num <ansys.mapdl.core.database.nodes.DbNodes.num>`\\ "
"\\(\\[selected\\]\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.database.nodes.DbNodes.rst:28:<autosummary>:1
msgid "Return the number of nodes, either selected or all."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.database.nodes.DbNodes.rst:28:<autosummary>:1
msgid ""
":py:obj:`push <ansys.mapdl.core.database.nodes.DbNodes.push>`\\ \\(inod\\, "
"x\\, y\\, z\\[\\, xang\\, yang\\, zang\\]\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.database.nodes.DbNodes.rst:28:<autosummary>:1
msgid "Push a single node into the DB."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.database.nodes.DbNodes.rst:33:<autosummary>:1
msgid ":py:obj:`max_num <ansys.mapdl.core.database.nodes.DbNodes.max_num>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.database.nodes.DbNodes.rst:33:<autosummary>:1
msgid "Return the maximum node number."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.information.Information.aux_capabilities.rst:2
msgid "ansys.mapdl.core.information.Information.aux\\_capabilities"
msgstr ""

#: ../../pymapdl/doc/source/api/information.rst:36:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/information.pydocstring of
#: ansys.mapdl.core.information.Information.aux_capabilities:2
msgid "Retrieve the aux capabilities from the MAPDL instance."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.information.Information.boundary_condition_information.rst:2
msgid ""
"ansys.mapdl.core.information.Information.boundary\\_condition\\_information"
msgstr ""

#: ../../pymapdl/doc/source/api/information.rst:36:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/information.pydocstring of
#: ansys.mapdl.core.information.Information.boundary_condition_information:2
msgid "Retrieve the boundary condition information from the MAPDL instance."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.information.Information.config_values.rst:2
msgid "ansys.mapdl.core.information.Information.config\\_values"
msgstr ""

#: ../../pymapdl/doc/source/api/information.rst:36:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/information.pydocstring of
#: ansys.mapdl.core.information.Information.config_values:2
msgid "Retrieve the config values from the MAPDL instance."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.information.Information.database_status.rst:2
msgid "ansys.mapdl.core.information.Information.database\\_status"
msgstr ""

#: ../../pymapdl/doc/source/api/information.rst:36:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/information.pydocstring of
#: ansys.mapdl.core.information.Information.database_status:2
msgid "Retrieve the database status from the MAPDL instance."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.information.Information.global_status.rst:2
msgid "ansys.mapdl.core.information.Information.global\\_status"
msgstr ""

#: ../../pymapdl/doc/source/api/information.rst:36:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/information.pydocstring of
#: ansys.mapdl.core.information.Information.global_status:2
msgid "Retrieve the global status from the MAPDL instance."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.information.Information.job_information.rst:2
msgid "ansys.mapdl.core.information.Information.job\\_information"
msgstr ""

#: ../../pymapdl/doc/source/api/information.rst:36:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/information.pydocstring of
#: ansys.mapdl.core.information.Information.job_information:2
msgid "Retrieve the job information from the MAPDL instance."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.information.Information.load_step_options.rst:2
msgid "ansys.mapdl.core.information.Information.load\\_step\\_options"
msgstr ""

#: ../../pymapdl/doc/source/api/information.rst:36:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/information.pydocstring of
#: ansys.mapdl.core.information.Information.load_step_options:2
msgid "Retrieve the load step options from the MAPDL instance."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.information.Information.mapdl_version.rst:2
msgid "ansys.mapdl.core.information.Information.mapdl\\_version"
msgstr ""

#: ../../pymapdl/doc/source/api/information.rst:36:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/information.pydocstring of
#: ansys.mapdl.core.information.Information.mapdl_version:2
msgid "Retrieve the MAPDL version from the MAPDL instance."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.information.Information.model_information.rst:2
msgid "ansys.mapdl.core.information.Information.model\\_information"
msgstr ""

#: ../../pymapdl/doc/source/api/information.rst:36:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/information.pydocstring of
#: ansys.mapdl.core.information.Information.model_information:2
msgid "Retrieve the model information from the MAPDL instance."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.information.Information.post_capabilities.rst:2
msgid "ansys.mapdl.core.information.Information.post\\_capabilities"
msgstr ""

#: ../../pymapdl/doc/source/api/information.rst:36:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/information.pydocstring of
#: ansys.mapdl.core.information.Information.post_capabilities:2
msgid "Retrieve the post capabilities from the MAPDL instance."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.information.Information.preprocessing_capabilities.rst:2
msgid "ansys.mapdl.core.information.Information.preprocessing\\_capabilities"
msgstr ""

#: ../../pymapdl/doc/source/api/information.rst:36:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/information.pydocstring of
#: ansys.mapdl.core.information.Information.preprocessing_capabilities:2
msgid "Retrieve the preprocessing capabilities from the MAPDL instance."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.information.Information.product.rst:2
msgid "ansys.mapdl.core.information.Information.product"
msgstr ""

#: ../../pymapdl/doc/source/api/information.rst:36:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/information.pydocstring of
#: ansys.mapdl.core.information.Information.product:2
msgid "Retrieve the product from the MAPDL instance."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.information.Information.products.rst:2
msgid "ansys.mapdl.core.information.Information.products"
msgstr ""

#: ../../pymapdl/doc/source/api/information.rst:36:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/information.pydocstring of
#: ansys.mapdl.core.information.Information.products:2
msgid "Retrieve the products from the MAPDL instance."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.information.Information.pymapdl_version.rst:2
msgid "ansys.mapdl.core.information.Information.pymapdl\\_version"
msgstr ""

#: ../../pymapdl/doc/source/api/information.rst:36:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/information.pydocstring of
#: ansys.mapdl.core.information.Information.pymapdl_version:2
msgid "Retrieve the PyMAPDL version from the MAPDL instance."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.information.Information.routine_information.rst:2
msgid "ansys.mapdl.core.information.Information.routine\\_information"
msgstr ""

#: ../../pymapdl/doc/source/api/information.rst:36:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/information.pydocstring of
#: ansys.mapdl.core.information.Information.routine_information:2
msgid "Retrieve the routine information from the MAPDL instance."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.information.Information.scratch_memory_status.rst:2
msgid "ansys.mapdl.core.information.Information.scratch\\_memory\\_status"
msgstr ""

#: ../../pymapdl/doc/source/api/information.rst:36:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/information.pydocstring of
#: ansys.mapdl.core.information.Information.scratch_memory_status:2
msgid "Retrieve the scratch memory status from the MAPDL instance."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.information.Information.solution_options.rst:2
msgid "ansys.mapdl.core.information.Information.solution\\_options"
msgstr ""

#: ../../pymapdl/doc/source/api/information.rst:36:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/information.pydocstring of
#: ansys.mapdl.core.information.Information.solution_options:2
msgid "Retrieve the solution options from the MAPDL instance."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.information.Information.solution_options_configuration.rst:2
msgid ""
"ansys.mapdl.core.information.Information.solution\\_options\\_configuration"
msgstr ""

#: ../../pymapdl/doc/source/api/information.rst:36:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/information.pydocstring of
#: ansys.mapdl.core.information.Information.solution_options_configuration:2
msgid "Retrieve the solution options configuration from the MAPDL instance."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.information.Information.stitles.rst:2
msgid "ansys.mapdl.core.information.Information.stitles"
msgstr ""

#: ../../pymapdl/doc/source/api/information.rst:36:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/information.pydocstring of
#: ansys.mapdl.core.information.Information.stitles:2
msgid "Retrieve or set the value for the MAPDL stitle (subtitles)."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/information.pydocstring of
#: ansys.mapdl.core.information.Information.stitles:4
msgid ""
"If 'stitle' includes newline characters (`\\n`), then each line is assigned "
"to one STITLE."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/information.pydocstring of
#: ansys.mapdl.core.information.Information.stitles:7
msgid "If 'stitle' is equals ``None``, the stitles are reset."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/information.pydocstring of
#: ansys.mapdl.core.information.Information.stitles:9
msgid "If ``i`` is supplied, only set the stitle number i."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/information.pydocstring of
#: ansys.mapdl.core.information.Information.stitles:11
msgid "Starting from 0 up to 3 (Python indexing)."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.information.Information.title.rst:2
msgid "ansys.mapdl.core.information.Information.title"
msgstr ""

#: ../../pymapdl/doc/source/api/information.rst:36:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/information.pydocstring of
#: ansys.mapdl.core.information.Information.title:2
msgid "Retrieve and set the title from the MAPDL instance."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.information.Information.titles.rst:2
msgid "ansys.mapdl.core.information.Information.titles"
msgstr ""

#: ../../pymapdl/doc/source/api/information.rst:36:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/information.pydocstring of
#: ansys.mapdl.core.information.Information.titles:2
msgid "Retrieve the titles from the MAPDL instance."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.information.Information.units.rst:2
msgid "ansys.mapdl.core.information.Information.units"
msgstr ""

#: ../../pymapdl/doc/source/api/information.rst:36:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/information.pydocstring of
#: ansys.mapdl.core.information.Information.units:2
msgid "Retrieve the units from the MAPDL instance."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.inline_functions.Query.asel.rst:2
msgid "ansys.mapdl.core.inline\\_functions.Query.asel"
msgstr ""

#: ../../pymapdl/doc/source/api/inline.rst:53:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/selection_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.selection_queries._SelectionStatusQueries.asel:2
msgid "Returns selection status of an area."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/selection_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.selection_queries._SelectionStatusQueries.asel:4
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/selection_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.selection_queries._SelectionStatusQueries.esel:4
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/selection_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.selection_queries._SelectionStatusQueries.ksel:4
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/selection_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.selection_queries._SelectionStatusQueries.lsel:4
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/selection_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.selection_queries._SelectionStatusQueries.nsel:4
msgid "Returns a ``SelectionStatus`` object with values:"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/selection_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.selection_queries._SelectionStatusQueries.asel:6
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/selection_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.selection_queries._SelectionStatusQueries.esel:6
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/selection_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.selection_queries._SelectionStatusQueries.ksel:6
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/selection_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.selection_queries._SelectionStatusQueries.lsel:6
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/selection_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.selection_queries._SelectionStatusQueries.nsel:6
msgid "1  - SELECTED 0  - UNDEFINED -1 - UNSELECTED"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/selection_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.selection_queries._SelectionStatusQueries.asel:12
msgid "**a** : :class:`python:int`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/selection_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.selection_queries._SelectionStatusQueries.asel:13
msgid "Area number"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/selection_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.selection_queries._SelectionStatusQueries.asel:19
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/selection_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.selection_queries._SelectionStatusQueries.esel:19
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/selection_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.selection_queries._SelectionStatusQueries.ksel:19
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/selection_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.selection_queries._SelectionStatusQueries.lsel:19
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/selection_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.selection_queries._SelectionStatusQueries.nsel:19
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/selection_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.selection_queries._SelectionStatusQueries.vsel:22
msgid ":obj:`mapdl.ansys.core.inline_functions.SelectionStatus`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/selection_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.selection_queries._SelectionStatusQueries.asel:20
msgid "Selection status of the area."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/selection_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.selection_queries._SelectionStatusQueries.asel:31
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/selection_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.selection_queries._SelectionStatusQueries.esel:31
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/selection_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.selection_queries._SelectionStatusQueries.ksel:31
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/selection_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.selection_queries._SelectionStatusQueries.lsel:31
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/selection_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.selection_queries._SelectionStatusQueries.nsel:31
msgid ""
":sphinx_autodoc_typehints_type:`\\:py\\:class\\:\\`\\~ansys.mapdl.core.inline\\_functions.core.SelectionStatus\\``"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/selection_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.selection_queries._SelectionStatusQueries.asel:35
msgid "Here we create a single area and interrogate its selection status."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/selection_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.selection_queries._SelectionStatusQueries.asel:48
msgid ""
"We can use ``Query.asel`` to interrogate the selection status of the line. "
"The response is an ``enum.IntEnum`` object. If you query a line that does "
"not exist, it will return a status ``SelectionStatus.UNDEFINED``."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.inline_functions.Query.centrx.rst:2
msgid "ansys.mapdl.core.inline\\_functions.Query.centrx"
msgstr ""

#: ../../pymapdl/doc/source/api/inline.rst:53:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._ComponentQueries.centrx:2
msgid "Return the x coordinate of the element centroid."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._ComponentQueries.centrx:4
msgid ""
"Fetches centroid X-coordinate of element ``e`` in global Cartesian "
"coordinate system. Centroid is determined from the selected nodes on the "
"element."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._ComponentQueries.centrx:10
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._ComponentQueries.centry:10
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._ComponentQueries.centrz:10
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/selection_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.selection_queries._SelectionStatusQueries.esel:12
msgid "**e** : :class:`python:int`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._ComponentQueries.centrx:11
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._ComponentQueries.centry:11
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._ComponentQueries.centrz:11
msgid "The element number of the element to be considered."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._ComponentQueries.centrx:18
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._ComponentQueries.centry:18
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._ComponentQueries.centrz:18
msgid "The centroid coordinate."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._ComponentQueries.centrx:33
msgid ""
"Here we construct a line between the coordinates ``(0, 0, 0)`` and ``(1, 2, "
"3)`` then find the centroid x-coordinate of this element."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.inline_functions.Query.centry.rst:2
msgid "ansys.mapdl.core.inline\\_functions.Query.centry"
msgstr ""

#: ../../pymapdl/doc/source/api/inline.rst:53:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._ComponentQueries.centry:2
msgid "Return the y coordinate of the element centroid."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._ComponentQueries.centry:4
msgid ""
"Fetches centroid Y-coordinate of element ``e`` in global Cartesian "
"coordinate system. Centroid is determined from the selected nodes on the "
"element."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._ComponentQueries.centry:33
msgid ""
"Here we construct a line between the coordinates (0, 0, 0) and (1, 2, 3) "
"then find the centroid y-coordinate of this element."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.inline_functions.Query.centrz.rst:2
msgid "ansys.mapdl.core.inline\\_functions.Query.centrz"
msgstr ""

#: ../../pymapdl/doc/source/api/inline.rst:53:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._ComponentQueries.centrz:2
msgid "Return the z coordinate of the element centroid."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._ComponentQueries.centrz:4
msgid ""
"Fetches centroid Z-coordinate of element ``e`` in global Cartesian "
"coordinate system. Centroid is determined from the selected nodes on the "
"element."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._ComponentQueries.centrz:33
msgid ""
"Here we construct a line between the coordinates (0, 0, 0) and (1, 2, 3) "
"then find the centroid z-coordinate of this element."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.inline_functions.Query.esel.rst:2
msgid "ansys.mapdl.core.inline\\_functions.Query.esel"
msgstr ""

#: ../../pymapdl/doc/source/api/inline.rst:53:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/selection_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.selection_queries._SelectionStatusQueries.esel:2
msgid "Returns selection status of an element."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/selection_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.selection_queries._SelectionStatusQueries.esel:13
msgid "Element number"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/selection_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.selection_queries._SelectionStatusQueries.esel:20
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/selection_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.selection_queries._SelectionStatusQueries.vsel:23
msgid "Status of element"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/selection_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.selection_queries._SelectionStatusQueries.esel:35
msgid "Here we create a single element and interrogate its selection status."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/selection_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.selection_queries._SelectionStatusQueries.esel:49
msgid ""
"We can use ``Query.esel`` to interrogate the selection status of the "
"element. The response is an ``enum.IntEnum`` object. If you query an element"
" that does not exist, it will return a status ``SelectionStatus.UNDEFINED``."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.inline_functions.Query.kp.rst:2
msgid "ansys.mapdl.core.inline\\_functions.Query.kp"
msgstr ""

#: ../../pymapdl/doc/source/api/inline.rst:53:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._InverseGetComponentQueries.kp:2
msgid "Return keypoint closest to coordinate ``(x, y, z)``."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._InverseGetComponentQueries.kp:4
msgid "Number of the selected keypoint nearest the `x`, `y`, `z` point."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._InverseGetComponentQueries.kp:6
msgid ""
"In the active coordinate system, lowest number for coincident keypoints."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._InverseGetComponentQueries.kp:11
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._InverseGetComponentQueries.node:11
msgid "**x** : :class:`python:float`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._InverseGetComponentQueries.kp:10
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._InverseGetComponentQueries.kp:13
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._InverseGetComponentQueries.kp:16
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._InverseGetComponentQueries.node:10
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._InverseGetComponentQueries.node:13
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._InverseGetComponentQueries.node:16
#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.get_default_ansys:13
#: ../../../../../../../opt/hostedtoolcache/Python/3.10.16/x64/lib/python3.10/site-packages/ansys/tools/path/path.pydocstring
#: of ansys.tools.path.path.find_mapdl:24
msgid "python:float"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._InverseGetComponentQueries.kp:12
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._InverseGetComponentQueries.node:12
msgid "X-coordinate in the active coordinate system"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._InverseGetComponentQueries.kp:14
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._InverseGetComponentQueries.node:14
msgid "**y** : :class:`python:float`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._InverseGetComponentQueries.kp:15
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._InverseGetComponentQueries.node:15
msgid "Y-coordinate in the active coordinate system"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._InverseGetComponentQueries.kp:17
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._InverseGetComponentQueries.node:17
msgid "**z** : :class:`python:float`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._InverseGetComponentQueries.kp:18
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._InverseGetComponentQueries.node:18
msgid "Z-coordinate in the active coordinate system"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._InverseGetComponentQueries.kp:24
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._InverseGetComponentQueries.node:24
msgid ":class:`python:int`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._InverseGetComponentQueries.kp:25
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/selection_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.selection_queries._SelectionStatusQueries.ksel:13
msgid "Keypoint number"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._InverseGetComponentQueries.kp:36
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._InverseGetComponentQueries.node:36
msgid ":sphinx_autodoc_typehints_type:`\\:py\\:class\\:\\`int\\``"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._InverseGetComponentQueries.kp:40
msgid ""
"In this example we construct a simple triangle of keypoints in 3D and then "
"find the keypoint closest to the point (1, 1, 1)."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.inline_functions.Query.ksel.rst:2
msgid "ansys.mapdl.core.inline\\_functions.Query.ksel"
msgstr ""

#: ../../pymapdl/doc/source/api/inline.rst:53:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/selection_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.selection_queries._SelectionStatusQueries.ksel:2
msgid "Returns selection status of a keypoint."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._ComponentQueries.kx:8
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._ComponentQueries.ky:8
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._ComponentQueries.kz:8
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/selection_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.selection_queries._SelectionStatusQueries.ksel:12
msgid "**k** : :class:`python:int`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/selection_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.selection_queries._SelectionStatusQueries.ksel:20
msgid "Status of keypoint"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/selection_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.selection_queries._SelectionStatusQueries.ksel:35
msgid "Here we create a single keypoint and interrogate its selection status."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/selection_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.selection_queries._SelectionStatusQueries.ksel:45
msgid ""
"We can use ``Query.ksel`` to interrogate the selection status of the node. "
"The response is an ``enum.IntEnum`` object. If you query a node that does "
"not exist, it will return a status ``SelectionStatus.UNDEFINED``."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.inline_functions.Query.kx.rst:2
msgid "ansys.mapdl.core.inline\\_functions.Query.kx"
msgstr ""

#: ../../pymapdl/doc/source/api/inline.rst:53:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._ComponentQueries.kx:2
msgid "Return the x coordinate of a keypont."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._ComponentQueries.kx:4
msgid "X-coordinate of keypoint ``k`` in the active coordinate system."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._ComponentQueries.kx:9
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._ComponentQueries.ky:9
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._ComponentQueries.kz:9
msgid "Keypoint number to be considered."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._ComponentQueries.kx:16
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._ComponentQueries.ky:16
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._ComponentQueries.kz:16
msgid "Coordinate of the keypoint."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._ComponentQueries.kx:31
msgid ""
"Here we add a single keypoint, then use ``kx`` to extract the x-coordinate "
"of it."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.inline_functions.Query.ky.rst:2
msgid "ansys.mapdl.core.inline\\_functions.Query.ky"
msgstr ""

#: ../../pymapdl/doc/source/api/inline.rst:53:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._ComponentQueries.ky:2
msgid "Return the y coordinate of a keypont."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._ComponentQueries.ky:4
msgid "Y-coordinate of keypoint ``k`` in the active coordinate system."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._ComponentQueries.ky:31
msgid ""
"Here we add a single keypoint, then use ``ky`` to extract the y-coordinate "
"of it."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.inline_functions.Query.kz.rst:2
msgid "ansys.mapdl.core.inline\\_functions.Query.kz"
msgstr ""

#: ../../pymapdl/doc/source/api/inline.rst:53:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._ComponentQueries.kz:2
msgid "Return the z coordinate of a keypont."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._ComponentQueries.kz:4
msgid "Z-coordinate of keypoint ``k`` in the active coordinate system."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._ComponentQueries.kz:31
msgid ""
"Here we add a single keypoint, then use ``kz`` to extract the z-coordinate "
"of it."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.inline_functions.Query.lsel.rst:2
msgid "ansys.mapdl.core.inline\\_functions.Query.lsel"
msgstr ""

#: ../../pymapdl/doc/source/api/inline.rst:53:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/selection_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.selection_queries._SelectionStatusQueries.lsel:2
msgid "Returns selection status of a line."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._ComponentQueries.nx:9
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._ComponentQueries.ny:9
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._ComponentQueries.nz:9
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._DisplacementComponentQueries.rotx:8
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._DisplacementComponentQueries.roty:8
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._DisplacementComponentQueries.rotz:8
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._DisplacementComponentQueries.ux:8
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._DisplacementComponentQueries.uy:8
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._DisplacementComponentQueries.uz:8
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/line_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.line_queries._LineFractionCoordinateQueries.lx:9
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/line_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.line_queries._LineFractionCoordinateQueries.ly:9
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/line_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.line_queries._LineFractionCoordinateQueries.lz:9
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/line_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.line_queries._LineFractionSlopeQueries.lsx:11
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/line_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.line_queries._LineFractionSlopeQueries.lsy:11
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/line_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.line_queries._LineFractionSlopeQueries.lsz:11
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/selection_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.selection_queries._SelectionStatusQueries.lsel:12
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/selection_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.selection_queries._SelectionStatusQueries.nsel:12
msgid "**n** : :class:`python:int`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/selection_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.selection_queries._SelectionStatusQueries.lsel:13
msgid "Line number"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/selection_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.selection_queries._SelectionStatusQueries.lsel:20
msgid "Status of line"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/selection_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.selection_queries._SelectionStatusQueries.lsel:35
msgid "Here we create a single line and interrogate its selection status."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/selection_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.selection_queries._SelectionStatusQueries.lsel:47
msgid ""
"We can use ``Query.lsel`` to interrogate the selection status of the line. "
"The response is an ``enum.IntEnum`` object. If you query a line that does "
"not exist, it will return a status ``SelectionStatus.UNDEFINED``."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.inline_functions.Query.lsx.rst:2
msgid "ansys.mapdl.core.inline\\_functions.Query.lsx"
msgstr ""

#: ../../pymapdl/doc/source/api/inline.rst:53:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/line_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.line_queries._LineFractionSlopeQueries.lsx:2
msgid "X-slope of line ``n`` at length fraction ``lfrac``."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/line_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.line_queries._LineFractionSlopeQueries.lsx:4
msgid ""
"Fetches X-slope of line ``n`` at ``lfrac`` times the line length along the "
"line. ``0. <= lfrac <= 1.``. This is equivalent to the rate of change of the"
" x-coordinate with respect to the change of line length."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/line_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.line_queries._LineFractionCoordinateQueries.lx:10
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/line_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.line_queries._LineFractionCoordinateQueries.ly:10
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/line_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.line_queries._LineFractionCoordinateQueries.lz:10
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/line_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.line_queries._LineFractionSlopeQueries.lsx:12
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/line_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.line_queries._LineFractionSlopeQueries.lsy:12
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/line_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.line_queries._LineFractionSlopeQueries.lsz:12
msgid "The line number of the line to be considered."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/line_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.line_queries._LineFractionCoordinateQueries.lx:12
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/line_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.line_queries._LineFractionCoordinateQueries.ly:12
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/line_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.line_queries._LineFractionCoordinateQueries.lz:12
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/line_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.line_queries._LineFractionSlopeQueries.lsx:14
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/line_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.line_queries._LineFractionSlopeQueries.lsy:14
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/line_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.line_queries._LineFractionSlopeQueries.lsz:14
msgid "**lfrac: float**"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/line_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.line_queries._LineFractionCoordinateQueries.lx:13
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/line_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.line_queries._LineFractionCoordinateQueries.ly:13
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/line_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.line_queries._LineFractionCoordinateQueries.lz:13
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/line_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.line_queries._LineFractionSlopeQueries.lsx:15
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/line_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.line_queries._LineFractionSlopeQueries.lsy:15
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/line_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.line_queries._LineFractionSlopeQueries.lsz:15
msgid ""
"The fraction of the length of the line along which to enquire. ``0. <= lfrac"
" <= 1.``"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/line_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.line_queries._LineFractionSlopeQueries.lsx:23
msgid "The X-slope."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/line_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.line_queries._LineFractionSlopeQueries.lsx:38
msgid ""
"Here we construct a line between the coordinates ``(0, 0, 0)`` and ``(1, 2, "
"2)`` then find the X-slope halfway along the line."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.inline_functions.Query.lsy.rst:2
msgid "ansys.mapdl.core.inline\\_functions.Query.lsy"
msgstr ""

#: ../../pymapdl/doc/source/api/inline.rst:53:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/line_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.line_queries._LineFractionSlopeQueries.lsy:2
msgid "Y-slope of line ``n`` at length fraction ``lfrac``."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/line_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.line_queries._LineFractionSlopeQueries.lsy:4
msgid ""
"Fetches Y-slope of line ``n`` at ``lfrac`` times the line length along the "
"line. ``0. <= lfrac <= 1.``. This is equivalent to the rate of change of the"
" y-coordinate with respect to the change of line length."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/line_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.line_queries._LineFractionSlopeQueries.lsy:23
msgid "The Y-slope."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/line_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.line_queries._LineFractionSlopeQueries.lsy:38
msgid ""
"Here we construct a line between the coordinates ``(0, 0, 0)`` and ``(1, 2, "
"2)`` then find the Y-slope halfway along the line."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.inline_functions.Query.lsz.rst:2
msgid "ansys.mapdl.core.inline\\_functions.Query.lsz"
msgstr ""

#: ../../pymapdl/doc/source/api/inline.rst:53:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/line_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.line_queries._LineFractionSlopeQueries.lsz:2
msgid "Z-slope of line ``n`` at length fraction ``lfrac``."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/line_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.line_queries._LineFractionSlopeQueries.lsz:4
msgid ""
"Fetches Z-slope of line ``n`` at ``lfrac`` times the line length along the "
"line. ``0. <= lfrac <= 1.``. This is equivalent to the rate of change of the"
" z-coordinate with respect to the change of line length."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/line_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.line_queries._LineFractionSlopeQueries.lsz:23
msgid "The Z-slope."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/line_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.line_queries._LineFractionSlopeQueries.lsz:38
msgid ""
"Here we construct a line between the coordinates ``(0, 0, 0)`` and ``(1, 2, "
"2)`` then find the Z-slope halfway along the line."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.inline_functions.Query.lx.rst:2
msgid "ansys.mapdl.core.inline\\_functions.Query.lx"
msgstr ""

#: ../../pymapdl/doc/source/api/inline.rst:53:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/line_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.line_queries._LineFractionCoordinateQueries.lx:2
msgid "X-coordinate of line ``n`` at length fraction ``lfrac``."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/line_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.line_queries._LineFractionCoordinateQueries.lx:4
msgid ""
"Fetches X-coordinate of line ``n`` at ``lfrac`` times the line length along "
"the line. ``0. <= lfrac <= 1.``."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/line_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.line_queries._LineFractionCoordinateQueries.lx:21
msgid "The X-coordinate."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/line_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.line_queries._LineFractionCoordinateQueries.lx:36
msgid ""
"Here we construct a line between the coordinates ``(0, 0, 0)`` and ``(1, 2, "
"3)`` then find the X-coordinate halfway along the line."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.inline_functions.Query.ly.rst:2
msgid "ansys.mapdl.core.inline\\_functions.Query.ly"
msgstr ""

#: ../../pymapdl/doc/source/api/inline.rst:53:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/line_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.line_queries._LineFractionCoordinateQueries.ly:2
msgid "Y-coordinate of line ``n`` at length fraction ``lfrac``."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/line_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.line_queries._LineFractionCoordinateQueries.ly:4
msgid ""
"Fetches Y-coordinate of line ``n`` at ``lfrac`` times the line length along "
"the line. ``0. <= lfrac <= 1.``."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/line_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.line_queries._LineFractionCoordinateQueries.ly:21
msgid "The Y-coordinate."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/line_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.line_queries._LineFractionCoordinateQueries.ly:36
msgid ""
"Here we construct a line between the coordinates ``(0, 0, 0)`` and ``(1, 2, "
"3)`` then find the Y-coordinate halfway along the line."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.inline_functions.Query.lz.rst:2
msgid "ansys.mapdl.core.inline\\_functions.Query.lz"
msgstr ""

#: ../../pymapdl/doc/source/api/inline.rst:53:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/line_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.line_queries._LineFractionCoordinateQueries.lz:2
msgid "Z-coordinate of line ``n`` at length fraction ``lfrac``."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/line_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.line_queries._LineFractionCoordinateQueries.lz:4
msgid ""
"Fetches Z-coordinate of line ``n`` at ``lfrac`` times the line length along "
"the line. ``0. <= lfrac <= 1.``."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/line_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.line_queries._LineFractionCoordinateQueries.lz:21
msgid "The Z-coordinate."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/line_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.line_queries._LineFractionCoordinateQueries.lz:36
msgid ""
"Here we construct a line between the coordinates ``(0, 0, 0)`` and ``(1, 2, "
"3)`` then find the Z-coordinate halfway along the line."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.inline_functions.Query.node.rst:2
msgid "ansys.mapdl.core.inline\\_functions.Query.node"
msgstr ""

#: ../../pymapdl/doc/source/api/inline.rst:53:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._InverseGetComponentQueries.node:2
msgid "Return node closest to coordinate ``(x, y, z)``."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._InverseGetComponentQueries.node:4
msgid ""
"Number of the selected node nearest the `x`, `y`, `z` point. (In the active "
"coordinate system, lowest number for coincident nodes.) A number higher than"
" the highest node number indicates that the node is internal (generated by "
"program)."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._ComponentQueries.nx:10
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._ComponentQueries.ny:10
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._ComponentQueries.nz:10
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._DisplacementComponentQueries.rotx:9
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._DisplacementComponentQueries.roty:9
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._DisplacementComponentQueries.rotz:9
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._DisplacementComponentQueries.ux:9
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._DisplacementComponentQueries.uy:9
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._DisplacementComponentQueries.uz:9
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._InverseGetComponentQueries.node:25
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/selection_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.selection_queries._SelectionStatusQueries.nsel:13
msgid "Node number"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._InverseGetComponentQueries.node:40
msgid ""
"In this example we construct a solid cube and mesh it. Then we use "
"``queries.node`` to find the node closest to the centre of the cube. Using "
"this we can extract the coordinates of this node and see how close to the "
"centre the node is."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.inline_functions.Query.nsel.rst:2
msgid "ansys.mapdl.core.inline\\_functions.Query.nsel"
msgstr ""

#: ../../pymapdl/doc/source/api/inline.rst:53:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/selection_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.selection_queries._SelectionStatusQueries.nsel:2
msgid "Returns selection status of a node."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/selection_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.selection_queries._SelectionStatusQueries.nsel:20
msgid "Status of node"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/selection_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.selection_queries._SelectionStatusQueries.nsel:35
msgid "Here we create a single node and interrogate its selection status."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/selection_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.selection_queries._SelectionStatusQueries.nsel:46
msgid ""
"We can use ``Query.nsel`` to interrogate the selection status of the node. "
"The response is an ``enum.IntEnum`` object. If you query a node that does "
"not exist, it will return a status ``SelectionStatus.UNDEFINED``."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.inline_functions.Query.nx.rst:2
msgid "ansys.mapdl.core.inline\\_functions.Query.nx"
msgstr ""

#: ../../pymapdl/doc/source/api/inline.rst:53:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._ComponentQueries.nx:2
msgid "Return the x coordinate of a node."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._ComponentQueries.nx:4
msgid "Fetches X-coordinate of node ``n`` in the active coordinate system."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._ComponentQueries.nx:17
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._ComponentQueries.ny:17
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._ComponentQueries.nz:17
msgid "Coordinate of node"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._ComponentQueries.nx:32
msgid ""
"Here we construct a simple box and mesh it with elements. Then we use the "
"``nx`` method from the ``queries`` attribute to find the x-coordinate of the"
" 10th node."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.inline_functions.Query.ny.rst:2
msgid "ansys.mapdl.core.inline\\_functions.Query.ny"
msgstr ""

#: ../../pymapdl/doc/source/api/inline.rst:53:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._ComponentQueries.ny:2
msgid "Return the y coordinate of a node."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._ComponentQueries.ny:4
msgid "Fetches Y-coordinate of node ``n`` in the active coordinate system."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._ComponentQueries.ny:32
msgid ""
"Here we construct a simple box and mesh it with elements. Then we use the "
"the ``ny`` method from the ``queries`` attribute to find the y-coordinate of"
" the 10th node."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.inline_functions.Query.nz.rst:2
msgid "ansys.mapdl.core.inline\\_functions.Query.nz"
msgstr ""

#: ../../pymapdl/doc/source/api/inline.rst:53:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._ComponentQueries.nz:2
msgid "Return the z coordinate of a node."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._ComponentQueries.nz:4
msgid "Fetches Z-coordinate of node ``n`` in the active coordinate system."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._ComponentQueries.nz:32
msgid ""
"Here we construct a simple box and mesh it with elements. Then we use the "
"``nz`` attribute from the ``queries`` attribute to find the z-coordinate of "
"the 10th node."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.inline_functions.Query.rotx.rst:2
msgid "ansys.mapdl.core.inline\\_functions.Query.rotx"
msgstr ""

#: ../../pymapdl/doc/source/api/inline.rst:53:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._DisplacementComponentQueries.rotx:2
msgid "Returns x-component of rotational displacement at a node."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._DisplacementComponentQueries.rotx:4
msgid "X-component of rotational displacement at node ``n``."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._DisplacementComponentQueries.rotx:16
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._DisplacementComponentQueries.roty:16
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._DisplacementComponentQueries.rotz:16
msgid "Rotational displacement of the node."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._DisplacementComponentQueries.rotx:31
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._DisplacementComponentQueries.roty:31
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._DisplacementComponentQueries.rotz:31
msgid ""
"This example has been adapted from the example script "
":ref:`ref_rotational_displacement_example`. We create a square of shell "
"material, apply a displacement perpendicular to the plane of the material, "
"and then solve."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._DisplacementComponentQueries.rotx:36
msgid ""
"Then we can use ``queries.rotx`` to get the x-component rotational "
"displacement at the middle node on the deformed edge."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.inline_functions.Query.roty.rst:2
msgid "ansys.mapdl.core.inline\\_functions.Query.roty"
msgstr ""

#: ../../pymapdl/doc/source/api/inline.rst:53:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._DisplacementComponentQueries.roty:2
msgid "Returns y-component of rotational displacement at a node."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._DisplacementComponentQueries.roty:4
msgid "Y-component of rotational displacement at node ``n``."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._DisplacementComponentQueries.roty:36
msgid ""
"Then we can use ``queries.roty`` to get the y-component rotational "
"displacement at the middle node on the deformed edge."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.inline_functions.Query.rotz.rst:2
msgid "ansys.mapdl.core.inline\\_functions.Query.rotz"
msgstr ""

#: ../../pymapdl/doc/source/api/inline.rst:53:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._DisplacementComponentQueries.rotz:2
msgid "Returns z-component of rotational displacement at a node."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._DisplacementComponentQueries.rotz:4
msgid "Z-component of rotational displacement at node ``n``."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._DisplacementComponentQueries.rotz:36
msgid ""
"Then we can use ``queries.rotz`` to get the z-component rotational "
"displacement at the middle node on the deformed edge."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.inline_functions.Query.ux.rst:2
msgid "ansys.mapdl.core.inline\\_functions.Query.ux"
msgstr ""

#: ../../pymapdl/doc/source/api/inline.rst:53:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._DisplacementComponentQueries.ux:2
msgid "Returns x-component of structural displacement at a node."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._DisplacementComponentQueries.ux:4
msgid "X-component of structural displacement at node ``n``."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._DisplacementComponentQueries.ux:16
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._DisplacementComponentQueries.uy:16
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._DisplacementComponentQueries.uz:16
msgid "Displacement of node"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._DisplacementComponentQueries.ux:31
msgid ""
"In this example we create a simple block of 6 cubic elements, fix one end in"
" place, and then bend the other perpendicular to it. We can then examine the"
" displacement of one of the nodes in the x-direction at the deformed end "
"(node number 7)."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.inline_functions.Query.uy.rst:2
msgid "ansys.mapdl.core.inline\\_functions.Query.uy"
msgstr ""

#: ../../pymapdl/doc/source/api/inline.rst:53:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._DisplacementComponentQueries.uy:2
msgid "Returns y-component of structural displacement at a node."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._DisplacementComponentQueries.uy:4
msgid "Y-component of structural displacement at node ``n``."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._DisplacementComponentQueries.uy:31
msgid ""
"In this example we create a simple block of 6 cubic elements, fix one end in"
" place, and then bend the other perpendicular to it. We can then examine the"
" displacement of one of the nodes in the y-direction at the deformed end "
"(node number 7)."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.inline_functions.Query.uz.rst:2
msgid "ansys.mapdl.core.inline\\_functions.Query.uz"
msgstr ""

#: ../../pymapdl/doc/source/api/inline.rst:53:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._DisplacementComponentQueries.uz:2
msgid "Returns z-component of structural displacement at a node."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._DisplacementComponentQueries.uz:4
msgid "Z-component of structural displacement at node ``n``."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/component_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.component_queries._DisplacementComponentQueries.uz:31
msgid ""
"In this example we create a simple block of 6 cubic elements, fix one end in"
" place, and then bend the other perpendicular to it. We can then examine the"
" displacement of one of the nodes in the z-direction at the deformed end "
"(node number 7)."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.inline_functions.Query.vsel.rst:2
msgid "ansys.mapdl.core.inline\\_functions.Query.vsel"
msgstr ""

#: ../../pymapdl/doc/source/api/inline.rst:53:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/selection_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.selection_queries._SelectionStatusQueries.vsel:2
msgid "Returns selection status of a volume."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/selection_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.selection_queries._SelectionStatusQueries.vsel:4
msgid ""
"Returns a :class:`SelectionStatus "
"<mapdl.ansys.core.inline_functions.SelectionStatus>` with values: :rtype: "
":sphinx_autodoc_typehints_type:`\\:py\\:class\\:\\`\\~ansys.mapdl.core.inline\\_functions.core.SelectionStatus\\``"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/selection_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.selection_queries._SelectionStatusQueries.vsel:9
msgid "1 - SELECTED"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/selection_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.selection_queries._SelectionStatusQueries.vsel:10
msgid "0 - UNDEFINED"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/selection_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.selection_queries._SelectionStatusQueries.vsel:11
msgid "-1 - UNSELECTED"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/selection_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.selection_queries._SelectionStatusQueries.vsel:15
msgid "**v** : :class:`python:int`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/selection_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.selection_queries._SelectionStatusQueries.vsel:16
msgid "Volume number"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/selection_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.selection_queries._SelectionStatusQueries.vsel:36
msgid "Here we create a single volume and interrogate its selection status."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/selection_queries.pydocstring
#: of
#: ansys.mapdl.core.inline_functions.selection_queries._SelectionStatusQueries.vsel:51
msgid ""
"We can use ``Query.vsel`` to interrogate the selection status of the "
"element. The response is an ``enum.IntEnum`` object. If you query a volume "
"that does not exist, it will return a status ``SelectionStatus.UNDEFINED``."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.krylov.KrylovSolver.rst:2
msgid "ansys.mapdl.core.krylov.KrylovSolver"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/krylov.pydocstring of
#: ansys.mapdl.core.krylov.KrylovSolver:2
msgid "Abstract mapdl krylov class.  Created from a ``Mapdl`` instance."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/krylov.pydocstring of
#: ansys.mapdl.core.krylov.KrylovSolver:18
msgid "The procedure to use the Krylov solver is composed of three steps:"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/krylov.pydocstring of
#: ansys.mapdl.core.krylov.KrylovSolver:20
msgid ""
"Generate Krylov subspace using :func:`KrylovSolver.gensubspace "
"<ansys.mapdl.core.krylov.KrylovSolver.gensubspace>`."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/krylov.pydocstring of
#: ansys.mapdl.core.krylov.KrylovSolver:23
msgid ""
"Use :func:`KrylovSolver.solve <ansys.mapdl.core.krylov.KrylovSolver.solve>` "
"to solve the generated Krylovsub space using a reduced harmonic analysis "
"over a specified frequency range"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/krylov.pydocstring of
#: ansys.mapdl.core.krylov.KrylovSolver:27
msgid ""
"Expand the reduced solution back to the original space using "
":func:`KrylovSolver.solve <ansys.mapdl.core.krylov.KrylovSolver.solve>`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/krylov.pydocstring of
#: ansys.mapdl.core.krylov.KrylovSolver:33
msgid "Create an instance."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.krylov.KrylovSolver.rst:25:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/krylov.pydocstring of
#: ansys.mapdl.core.krylov.KrylovSolver.__init__:2
msgid "Krylov analysis"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/krylov.pydocstring of
#: ansys.mapdl.core.krylov.KrylovSolver.__init__:4
msgid ""
"Abstract mapdl krylov class.  Created from an :class:`Mapdl instance "
"<ansys.mapdl.core.Mapdl>` instance."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.krylov.KrylovSolver.rst:25:<autosummary>:1
msgid ""
":py:obj:`__init__ <ansys.mapdl.core.krylov.KrylovSolver.__init__>`\\ "
"\\(mapdl\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.krylov.KrylovSolver.rst:25:<autosummary>:1
msgid ""
":py:obj:`compute_residuals "
"<ansys.mapdl.core.krylov.KrylovSolver.compute_residuals>`\\ \\(iFreq\\, "
"RzV\\, Xi\\, omega\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.krylov.KrylovSolver.rst:25:<autosummary>:1
msgid "Compute residuals of the matrices"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.krylov.KrylovSolver.rst:25:<autosummary>:1
msgid ""
":py:obj:`expand <ansys.mapdl.core.krylov.KrylovSolver.expand>`\\ "
"\\(\\[residual\\_computation\\, ...\\]\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.krylov.KrylovSolver.rst:25:<autosummary>:1
msgid "Expand the reduced solution back to FE space."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.krylov.KrylovSolver.rst:25:<autosummary>:1
msgid ""
":py:obj:`gensubspace <ansys.mapdl.core.krylov.KrylovSolver.gensubspace>`\\ "
"\\(max\\_dim\\_q\\, frequency\\[\\, ...\\]\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.krylov.KrylovSolver.rst:25:<autosummary>:1
msgid "Generate a Krylov subspace for model reduction in a harmonic analysis."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.krylov.KrylovSolver.rst:25:<autosummary>:1
msgid ""
":py:obj:`solve <ansys.mapdl.core.krylov.KrylovSolver.solve>`\\ "
"\\(freq\\_start\\, freq\\_end\\, freq\\_steps\\[\\, ...\\]\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.krylov.KrylovSolver.rst:25:<autosummary>:1
msgid "Reduce the system of equations and solve at each frequency."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.krylov.KrylovSolver.rst:30:<autosummary>:1
msgid ""
":py:obj:`is_orthogonal "
"<ansys.mapdl.core.krylov.KrylovSolver.is_orthogonal>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.krylov.KrylovSolver.rst:30:<autosummary>:1
msgid "Check whether the solution is orthogonal."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.launcher.close_all_local_instances.rst:2
msgid "ansys.mapdl.core.launcher.close\\_all\\_local\\_instances"
msgstr ""

#: ../../pymapdl/doc/source/api/launcher.rst:20:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.close_all_local_instances:2
msgid "Close all MAPDL instances within a port_range."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.close_all_local_instances:4
msgid ""
"This function can be used when cleaning up from a failed pool or batch run."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.close_all_local_instances:9
msgid "**port_range** : :class:`python:list`, :obj:`optional`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.close_all_local_instances:8
msgid "python:list, optional"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.close_all_local_instances:10
msgid ""
"Defaults to ``range(50000, 50200)``.  Expand this range if there are many "
"potential instances of MAPDL in gRPC mode."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.close_all_local_instances:29
msgid "Close all instances on in the range of 50000 and 50199."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.launcher.get_default_ansys.rst:2
msgid "ansys.mapdl.core.launcher.get\\_default\\_ansys"
msgstr ""

#: ../../pymapdl/doc/source/api/launcher.rst:20:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.get_default_ansys:2
msgid ""
"Searches for ansys path within the standard install location and returns the"
" path and version of the latest MAPDL version installed."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.get_default_ansys:11
#: ../../../../../../../opt/hostedtoolcache/Python/3.10.16/x64/lib/python3.10/site-packages/ansys/tools/path/path.pydocstring
#: of ansys.tools.path.path.find_mapdl:22
msgid "**ansys_path** : :class:`python:str`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.get_default_ansys:12
#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.get_default_ansys_path:12
#: ../../../../../../../opt/hostedtoolcache/Python/3.10.16/x64/lib/python3.10/site-packages/ansys/tools/path/path.pydocstring
#: of ansys.tools.path.path.find_mapdl:23
msgid "Full path to ANSYS executable."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.get_default_ansys:14
#: ../../../../../../../opt/hostedtoolcache/Python/3.10.16/x64/lib/python3.10/site-packages/ansys/tools/path/path.pydocstring
#: of ansys.tools.path.path.find_mapdl:25
msgid "**version** : :class:`python:float`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.get_default_ansys:15
#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.get_default_ansys_version:12
#: ../../../../../../../opt/hostedtoolcache/Python/3.10.16/x64/lib/python3.10/site-packages/ansys/tools/path/path.pydocstring
#: of ansys.tools.path.path.find_mapdl:26
msgid "Version float.  For example, 21.1 corresponds to 2021R1."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.get_default_ansys:28
#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.get_default_ansys_path:25
#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.get_default_ansys_version:25
#: ../../../../../../../opt/hostedtoolcache/Python/3.10.16/x64/lib/python3.10/site-packages/ansys/tools/path/path.pydocstring
#: of ansys.tools.path.path.find_mapdl:41
msgid "Within Windows"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.get_default_ansys:34
#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.get_default_ansys_path:31
#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.get_default_ansys_version:31
#: ../../../../../../../opt/hostedtoolcache/Python/3.10.16/x64/lib/python3.10/site-packages/ansys/tools/path/path.pydocstring
#: of ansys.tools.path.path.find_mapdl:47
msgid "Within Linux"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.launcher.get_default_ansys_path.rst:2
msgid "ansys.mapdl.core.launcher.get\\_default\\_ansys\\_path"
msgstr ""

#: ../../pymapdl/doc/source/api/launcher.rst:20:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.get_default_ansys_path:2
msgid ""
"Searches for ansys path within the standard install location and returns the"
" path of the latest MAPDL version installed."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.launcher.get_default_ansys_version.rst:2
msgid "ansys.mapdl.core.launcher.get\\_default\\_ansys\\_version"
msgstr ""

#: ../../pymapdl/doc/source/api/launcher.rst:20:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.get_default_ansys_version:2
msgid ""
"Searches for ansys path within the standard install location and returns the"
" version of the latest MAPDL version installed."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.launcher.launch_mapdl.rst:2
msgid "ansys.mapdl.core.launcher.launch\\_mapdl"
msgstr ""

#: ../../pymapdl/doc/source/api/launcher.rst:20:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:2
msgid "Start MAPDL locally."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:7
msgid "**exec_file** : :class:`python:str`, :obj:`optional`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:8
msgid ""
"The location of the MAPDL executable.  Will use the cached location when "
"left at the default :class:`None` and no environment variable is set."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:12
msgid ""
"The executable path can be also set through the environment variable "
":envvar:`PYMAPDL_MAPDL_EXEC`. For example:"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:19
#: ../../pymapdl/src/ansys/mapdl/core/pool.pydocstring of
#: ansys.mapdl.core.pool.MapdlPool:18
msgid "**run_location** : :class:`python:str`, :obj:`optional`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:20
msgid ""
"MAPDL working directory.  Defaults to a temporary working directory.  If "
"directory doesn't exist, one is created."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:23
msgid "**jobname** : :class:`python:str`, :obj:`optional`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:24
msgid "MAPDL jobname.  Defaults to ``'file'``."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:26
msgid "**nproc** : :class:`python:int`, :obj:`optional`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:27
msgid ""
"Number of processors.  Defaults to ``2``. If running on an HPC cluster, this"
" value is adjusted to the number of CPUs allocated to the job, unless the "
"argument ``running_on_hpc`` is set to ``\"false\"``."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:31
msgid "**ram** : :class:`python:float`, :obj:`optional`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:32
msgid ""
"Total size in megabytes of the workspace (memory) used for the initial "
"allocation. The default is :class:`None`, in which case 2 GB (2048 MB) is "
"used. To force a fixed size throughout the run, specify a negative number."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:38
msgid "Mode to launch MAPDL.  Must be one of the following:"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:40
msgid "``'grpc'``"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:41
msgid "``'console'``"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:43
msgid ""
"The ``'grpc'`` mode is available on ANSYS 2021R1 or newer and provides the "
"best performance and stability. The ``'console'`` mode is for legacy use "
"only Linux only prior to 2020R2. This console mode is pending depreciation. "
"Visit :ref:`versions_and_interfaces` for more information."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:49
msgid ""
"**override** : :ref:`bool <python:bltin-boolean-values>`, :obj:`optional`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:50
msgid ""
"Attempts to delete the lock file at the ``run_location``. Useful when a "
"prior MAPDL session has exited prematurely and the lock file has not been "
"deleted."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:55
msgid ""
"Sets which messages are printed to the console.  ``'INFO'`` prints out all "
"ANSYS messages, ``'WARNING'`` prints only messages containing ANSYS "
"warnings, and ``'ERROR'`` logs only error messages."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:60
msgid "**additional_switches** : :class:`python:str`, :obj:`optional`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:61
msgid ""
"Additional switches for MAPDL, for example ``'aa_r'``, the academic research"
" license, would be added with:"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:64
msgid "``additional_switches=\"-aa_r\"``"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:66
msgid ""
"Avoid adding switches like ``-i``, ``-o`` or ``-b`` as these are already "
"included to start up the MAPDL server.  See the notes section for additional"
" details."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:70
msgid "**start_timeout** : :class:`python:float`, :obj:`optional`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:71
msgid ""
"Maximum allowable time to connect to the MAPDL server. By default it is 45 "
"seconds, however, it is increased to 90 seconds if running on HPC."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:74
msgid "**port** : :class:`python:int`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:75
msgid ""
"Port to launch MAPDL gRPC on.  Final port will be the first port available "
"after (or including) this port.  Defaults to ``50052``. You can also provide"
" this value through the environment variable :envvar:`PYMAPDL_PORT`. For "
"instance ``PYMAPDL_PORT=50053``. However the argument (if specified) has "
"precedence over the environment variable. If this environment variable is "
"empty, it is as it is not set."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:82
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc:23
msgid ""
"**cleanup_on_exit** : :ref:`bool <python:bltin-boolean-values>`, "
":obj:`optional`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:83
msgid ""
"Exit MAPDL when python exits or the mapdl Python instance is garbage "
"collected."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:86
#: ../../pymapdl/src/ansys/mapdl/core/pool.pydocstring of
#: ansys.mapdl.core.pool.MapdlPool:74
msgid ""
"**start_instance** : :ref:`bool <python:bltin-boolean-values>`, "
":obj:`optional`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:87
msgid ""
"When :class:`False`, connect to an existing MAPDL instance at ``ip`` and "
"``port``, which default to ip ``'127.0.0.1'`` at port ``50052``. Otherwise, "
"launch a local instance of MAPDL. You can also provide this value through "
"the environment variable :envvar:`PYMAPDL_START_INSTANCE`. However the "
"argument (if specified) has precedence over the environment variable. If "
"this environment variable is empty, it is as it is not set."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:95
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc:8
msgid "**ip** : :class:`python:str`, :obj:`optional`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:96
msgid ""
"Specify the IP address of the MAPDL instance to connect to. You can also "
"provide a hostname as an alternative to an IP address. Defaults to "
"``'127.0.0.1'``. Used only when ``start_instance`` is :class:`False`. If "
"this argument is provided, and ``start_instance`` (or its correspondent "
"environment variable :envvar:`PYMAPDL_START_INSTANCE`) is :class:`True` "
"then, an exception is raised. You can also provide this value through the "
"environment variable :envvar:`PYMAPDL_IP`. For instance "
"``PYMAPDL_IP=123.45.67.89``. However the argument (if specified) has "
"precedence over the environment variable. If this environment variable is "
"empty, it is as it is not set."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:108
msgid ""
"**clear_on_connect** : :ref:`bool <python:bltin-boolean-values>`, "
":obj:`optional`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:109
msgid ""
"Defaults to :class:`True`, giving you a fresh environment when connecting to"
" MAPDL. When if ``start_instance`` is specified it defaults to "
":class:`False`."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:113
msgid "**log_apdl** : :class:`python:str`, :obj:`optional`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:114
msgid ""
"Enables logging every APDL command to the local disk.  This can be used to "
"\"record\" all the commands that are sent to MAPDL via PyMAPDL so a script "
"can be run within MAPDL without PyMAPDL. This argument is the path of the "
"output file (e.g. ``log_apdl='pymapdl_log.txt'``). By default this is "
"disabled."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:120
#: ../../pymapdl/src/ansys/mapdl/core/pool.pydocstring of
#: ansys.mapdl.core.pool.MapdlPool:52
msgid ""
"**remove_temp_dir_on_exit** : :ref:`bool <python:bltin-boolean-values>`, "
":obj:`optional`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:121
msgid ""
"When ``run_location`` is :class:`None`, this launcher creates a new MAPDL "
"working directory within the user temporary directory, obtainable with "
"``tempfile.gettempdir()``. When this parameter is :class:`True`, this "
"directory will be deleted when MAPDL is exited. Default to :class:`False`. "
"If you change the working directory, PyMAPDL does not delete the original "
"working directory nor the new one."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:129
msgid ""
"**license_server_check** : :ref:`bool <python:bltin-boolean-values>`, "
":obj:`optional`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:130
msgid ""
"Check if the license server is available if MAPDL fails to start.  Only "
"available on ``mode='grpc'``. Defaults :class:`False`."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:133
msgid "**license_type** : :class:`python:str`, :obj:`optional`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:134
msgid ""
"Enable license type selection. You can input a string for its license name "
"(for example ``'meba'`` or ``'ansys'``) or its description (\"enterprise "
"solver\" or \"enterprise\" respectively). You can also use legacy licenses "
"(for example ``'aa_t_a'``) but it will also raise a warning. If it is not "
"used (:class:`None`), no specific license will be requested, being up to the"
" license server to provide a specific license type. Default is "
":class:`None`."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:143
msgid ""
"Print the command ``/COM`` arguments to the standard output. Default "
":class:`False`."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:146
msgid "**add_env_vars** : :class:`python:dict`, :obj:`optional`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:147
msgid ""
"The provided dictionary will be used to extend the MAPDL process environment"
" variables. If you want to control all of the environment variables, use the"
" argument ``replace_env_vars``. Defaults to :class:`None`."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:152
msgid "**replace_env_vars** : :class:`python:dict`, :obj:`optional`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:153
msgid ""
"The provided dictionary will be used to replace all the MAPDL process "
"environment variables. It replace the system environment variables which "
"otherwise would be used in the process. To just add some environment "
"variables to the MAPDL process, use ``add_env_vars``. Defaults to "
":class:`None`."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:159
msgid "**version** : :class:`python:float`, :obj:`optional`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:160
msgid ""
"Version of MAPDL to launch. If :class:`None`, the latest version is used. "
"Versions can be provided as integers (i.e. ``version=222``) or floats (i.e. "
"``version=22.2``). To retrieve the available installed versions, use the "
"function :meth:`ansys.tools.path.path.get_available_ansys_installations`. "
"You can also provide this value through the environment variable "
":envvar:`PYMAPDL_MAPDL_VERSION`. For instance "
"``PYMAPDL_MAPDL_VERSION=22.2``. However the argument (if specified) has "
"precedence over the environment variable. If this environment variable is "
"empty, it is as it is not set."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:171
msgid "**running_on_hpc: bool, optional**"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:172
msgid ""
"Whether detect if PyMAPDL is running on an HPC cluster. Currently only SLURM"
" clusters are supported. By default, it is set to true. This option can be "
"bypassed if the :envvar:`PYMAPDL_RUNNING_ON_HPC` environment variable is set"
" to :class:`True`. For more information, see :ref:`ref_hpc_slurm`."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:178
msgid ""
"**launch_on_hpc** : :ref:`bool <python:bltin-boolean-values>`, "
":obj:`Optional`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:177
msgid "bool, Optional"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:179
msgid ""
"If :class:`True`, it uses the implemented scheduler (SLURM only) to launch "
"an MAPDL instance on the HPC. In this case you can pass the "
"'`scheduler_options`' argument to :func:`launch_mapdl() "
"<ansys.mapdl.core.launcher.launch_mapdl>` to specify the scheduler arguments"
" as a string or as a dictionary. For more information, see "
":ref:`ref_hpc_slurm`."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:186
msgid "**mapdl_output** : :class:`python:str`, :obj:`optional`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:187
msgid "Redirect the MAPDL console output to a given file."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:189
msgid "**kwargs** : :class:`python:dict`, :obj:`Optional`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:188
msgid "python:dict, Optional"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:190
msgid ""
"These keyword arguments are interface-specific or for development purposes. "
"For more information, see Notes."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:193
msgid "scheduler_options : :class:`str`, :class:`dict`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:192
msgid "str, dict"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:194
msgid ""
"Use it to specify options to the scheduler run command. It can be a string "
"or a dictionary with arguments and its values (both as strings). For more "
"information visit :ref:`ref_hpc_slurm`."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:198
msgid "set_no_abort : :class:`bool`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:199
msgid ""
"*(Development use only)* Sets MAPDL to not abort at the first error within "
"/BATCH mode. Defaults to :class:`True`."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:203
msgid "force_intel : :class:`bool`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:204
msgid ""
"*(Development use only)* Forces the use of Intel message pass interface "
"(MPI) in versions between Ansys 2021R0 and 2022R2, where because of VPNs "
"issues this MPI is deactivated by default. See "
":ref:`vpn_issues_troubleshooting` for more information. Defaults to "
":class:`False`."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:215
msgid ":obj:`Union`\\[:obj:`MapdlGrpc`, :obj:`MapdlConsole`]"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:216
msgid "An instance of Mapdl.  Type depends on the selected ``mode``."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:225
msgid ""
":sphinx_autodoc_typehints_type:`\\:py\\:data\\:\\`\\~typing.Union\\`\\\\ "
"\\\\\\[\\:py\\:class\\:\\`\\~ansys.mapdl.core.mapdl\\_grpc.MapdlGrpc\\`\\, "
"\\:py\\:class\\:\\`\\~ansys.mapdl.core.mapdl\\_console.MapdlConsole\\`\\]`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:229
msgid "**Ansys Student Version**"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:231
msgid ""
"If an Ansys Student version is detected, PyMAPDL will launch MAPDL in "
"shared-memory parallelism (SMP) mode unless another option is specified."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:234
msgid "**Additional switches**"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:236
msgid ""
"These are the MAPDL switch options as of 2020R2 applicable for running MAPDL"
" as a service via gRPC.  Excluded switches not applicable or are set via "
"keyword arguments such as ``\"-j\"`` ."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:240
msgid "\\-acc <device>"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:241
msgid ""
"Enables the use of GPU hardware.  See GPU Accelerator Capability in the "
"Parallel Processing Guide for more information."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:245
msgid "\\-amfg"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:246
msgid ""
"Enables the additive manufacturing capability.  Requires an additive "
"manufacturing license. For general information about this feature, see AM "
"Process Simulation in ANSYS Workbench."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:250
msgid "\\-ansexe <executable>"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:251
msgid ""
"Activates a custom mechanical APDL executable. In the ANSYS Workbench "
"environment, activates a custom Mechanical APDL executable."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:255
msgid "\\-custom <executable>"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:256
msgid ""
"Calls a custom Mechanical APDL executable See Running Your Custom Executable"
" in the Programmer's Reference for more information."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:260
msgid "\\-db value"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:261
msgid ""
"Initial memory allocation Defines the portion of workspace (memory) to be "
"used as the initial allocation for the database. The default is 1024 MB. "
"Specify a negative number to force a fixed size throughout the run; useful "
"on small memory systems."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:267
msgid "\\-dis"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:268
msgid ""
"Enables Distributed ANSYS See the Parallel Processing Guide for more "
"information."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:271
msgid "\\-dvt"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:272
msgid ""
"Enables ANSYS DesignXplorer advanced task (add-on). Requires DesignXplorer."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:275
msgid "\\-l <language>"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:276
msgid ""
"Specifies a language file to use other than English This option is valid "
"only if you have a translated message file in an appropriately named "
"subdirectory in ``/ansys_inc/v201/ansys/docu`` or ``Program "
"Files\\ANSYS\\Inc\\V201\\ANSYS\\docu``"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:282
msgid "\\-m <workspace>"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:283
msgid ""
"Specifies the total size of the workspace Workspace (memory) in megabytes "
"used for the initial allocation. If you omit the ``-m`` option, the default "
"is 2 GB (2048 MB). Specify a negative number to force a fixed size "
"throughout the run."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:289
msgid "\\-machines <IP>"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:290
msgid ""
"Specifies the distributed machines Machines on which to run a Distributed "
"ANSYS analysis. See Starting Distributed ANSYS in the Parallel Processing "
"Guide for more information."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:295
msgid "\\-mpi <value>"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:296
msgid ""
"Specifies the type of MPI to use. See the Parallel Processing Guide for more"
" information."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:299
msgid "\\-mpifile <appfile>"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:300
msgid ""
"Specifies an existing MPI file Specifies an existing MPI file (appfile) to "
"be used in a Distributed ANSYS run. See Using MPI Files in the Parallel "
"Processing Guide for more information."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:305
msgid "\\-na <value>"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:306
msgid ""
"Specifies the number of GPU accelerator devices Number of GPU devices per "
"machine or compute node when running with the GPU accelerator feature. See "
"GPU Accelerator Capability in the Parallel Processing Guide for more "
"information."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:311
msgid "\\-name <value>"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:312
msgid ""
"Defines Mechanical APDL parameters Set mechanical APDL parameters at program"
" start-up. The parameter name must be at least two characters long. For "
"details about parameters, see the ANSYS Parametric Design Language Guide."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:317
msgid "\\-p <productname>"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:318
msgid ""
"ANSYS session product Defines the ANSYS session product that will run during"
" the session. For more detailed information about the ``-p`` option, see "
"Selecting an ANSYS Product via the Command Line."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:323
msgid "\\-ppf <license feature name>"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:324
msgid ""
"HPC license Specifies which HPC license to use during a parallel processing "
"run. See HPC Licensing in the Parallel Processing Guide for more "
"information."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:329
msgid "\\-smp"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:330
msgid ""
"Enables shared-memory parallelism. See the Parallel Processing Guide for "
"more information."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:333
msgid "**PyPIM**"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:335
msgid ""
"If the environment is configured to use `PyPIM "
"<https://pypim.docs.pyansys.com>`_ and ``start_instance`` is :class:`True`, "
"then starting the instance will be delegated to PyPIM. In this event, most "
"of the options will be ignored and the server side configuration will be "
"used."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:343
msgid "Launch MAPDL using the best protocol."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:348
msgid ""
"Run MAPDL with shared memory parallel and specify the location of the Ansys "
"binary."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:354
msgid ""
"Connect to an existing instance of MAPDL at IP 192.168.1.30 and port 50001."
"  This is only available using the latest ``'grpc'`` mode."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:361
msgid ""
"Run MAPDL using the console mode (not recommended, and available only on "
"Linux)."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:366
msgid "Run MAPDL with additional environment variables."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/launcher.pydocstring of
#: ansys.mapdl.core.launcher.launch_mapdl:371
msgid ""
"Run MAPDL with our own set of environment variables. It replace the system "
"environment variables which otherwise would be used in the process."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.logging.Logger.rst:2
msgid "ansys.mapdl.core.logging.Logger"
msgstr ""

#: ../../pymapdl/doc/source/api/logging.rst:36:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/logging.pydocstring of
#: ansys.mapdl.core.logging.Logger:2
msgid "Logger used for each PyMAPDL session."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/logging.pydocstring of
#: ansys.mapdl.core.logging.Logger:4
msgid ""
"This class allows you to add handlers to the logger to output to a file or "
"standard output."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/logging.pydocstring of
#: ansys.mapdl.core.logging.Logger:9
msgid "**level** : :class:`python:int`, :obj:`optional`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/logging.pydocstring of
#: ansys.mapdl.core.logging.Logger:10
msgid ""
"Logging level to filter the message severity allowed in the logger. The "
"default is ``logging.DEBUG``."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/logging.pydocstring of
#: ansys.mapdl.core.logging.Logger:13
#: ../../pymapdl/src/ansys/mapdl/core/logging.pydocstring of
#: ansys.mapdl.core.logging.Logger.__init__:10
msgid ""
"**to_file** : :ref:`bool <python:bltin-boolean-values>`, :obj:`optional`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/logging.pydocstring of
#: ansys.mapdl.core.logging.Logger:14
msgid "Write log messages to a file. The default is ``False``."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/logging.pydocstring of
#: ansys.mapdl.core.logging.Logger:16
#: ../../pymapdl/src/ansys/mapdl/core/logging.pydocstring of
#: ansys.mapdl.core.logging.Logger.__init__:13
msgid ""
"**to_stdout** : :ref:`bool <python:bltin-boolean-values>`, :obj:`optional`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/logging.pydocstring of
#: ansys.mapdl.core.logging.Logger:17
msgid "Write log messages into the standard output. The default is ``True``."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/logging.pydocstring of
#: ansys.mapdl.core.logging.Logger:20
#: ../../pymapdl/src/ansys/mapdl/core/logging.pydocstring of
#: ansys.mapdl.core.logging.Logger.__init__:17
msgid "**filename** : :class:`python:str`, :obj:`optional`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/logging.pydocstring of
#: ansys.mapdl.core.logging.Logger:21
msgid ""
"Name of the file where log messages are written to. The default is "
"``FILE_NAME``."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/logging.pydocstring of
#: ansys.mapdl.core.logging.Logger:38
msgid ""
"Demonstrate logger usage from an instance mapdl. This is automatically "
"created when creating an Mapdl instance."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/logging.pydocstring of
#: ansys.mapdl.core.logging.Logger:46
msgid "Import the global pymapdl logger and add a file output handler."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.logging.Logger.rst:27:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/logging.pydocstring of
#: ansys.mapdl.core.logging.Logger.__init__:2
msgid "Customized logger class for PyMAPDL."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/logging.pydocstring of
#: ansys.mapdl.core.logging.Logger.__init__:7
msgid ""
"**level** : :class:`python:str` or :class:`python:int`, :obj:`optional`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/logging.pydocstring of
#: ansys.mapdl.core.logging.Logger.__init__:6
msgid "python:str or python:int, optional"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/logging.pydocstring of
#: ansys.mapdl.core.logging.Logger.__init__:8
msgid ""
"Level of logging as defined in the package ``logging``. By default 'DEBUG'."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/logging.pydocstring of
#: ansys.mapdl.core.logging.Logger.__init__:11
msgid "To record the logs in a file, by default ``False``."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/logging.pydocstring of
#: ansys.mapdl.core.logging.Logger.__init__:14
msgid ""
"To output the logs to the standard output, which is the command line. By "
"default ``True``."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/logging.pydocstring of
#: ansys.mapdl.core.logging.Logger.__init__:18
msgid "Name of the output file. By default ``pymapdl.log``."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.logging.Logger.rst:27:<autosummary>:1
msgid ""
":py:obj:`__init__ <ansys.mapdl.core.logging.Logger.__init__>`\\ "
"\\(\\[level\\, to\\_file\\, to\\_stdout\\, ...\\]\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.logging.Logger.rst:27:<autosummary>:1
msgid ""
":py:obj:`add_child_logger "
"<ansys.mapdl.core.logging.Logger.add_child_logger>`\\ \\(logger\\_name\\[\\,"
" level\\]\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.logging.Logger.rst:27:<autosummary>:1
msgid "Add a child logger to the main logger."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.logging.Logger.rst:27:<autosummary>:1
msgid ""
":py:obj:`add_handling_uncaught_expections "
"<ansys.mapdl.core.logging.Logger.add_handling_uncaught_expections>`\\ "
"\\(logger\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.logging.Logger.rst:27:<autosummary>:1
msgid "This just redirect the output of an exception to the logger."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.logging.Logger.rst:27:<autosummary>:1
msgid ""
":py:obj:`add_instance_logger "
"<ansys.mapdl.core.logging.Logger.add_instance_logger>`\\ \\(name\\, "
"mapdl\\_instance\\[\\, ...\\]\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.logging.Logger.rst:27:<autosummary>:1
msgid "Create a logger for a MAPDL instance."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.logging.Logger.rst:27:<autosummary>:1
msgid ""
":py:obj:`log_to_file <ansys.mapdl.core.logging.Logger.log_to_file>`\\ "
"\\(\\[filename\\, level\\]\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.logging.Logger.rst:27:<autosummary>:1
msgid "Add file handler to logger."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.logging.Logger.rst:27:<autosummary>:1
msgid ""
":py:obj:`log_to_stdout <ansys.mapdl.core.logging.Logger.log_to_stdout>`\\ "
"\\(\\[level\\]\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.logging.Logger.rst:27:<autosummary>:1
msgid "Add standard output handler to the logger."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.logging.Logger.rst:27:<autosummary>:1
msgid ""
":py:obj:`setLevel <ansys.mapdl.core.logging.Logger.setLevel>`\\ "
"\\(\\[level\\]\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.logging.Logger.rst:27:<autosummary>:1
msgid "Change the log level of the object and the attached handlers."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.logging.Logger.rst:33:<autosummary>:1
msgid ":py:obj:`file_handler <ansys.mapdl.core.logging.Logger.file_handler>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.logging.Logger.rst:33:<autosummary>:1
msgid ""
":py:obj:`std_out_handler "
"<ansys.mapdl.core.logging.Logger.std_out_handler>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mapdl_geometry.Geometry.rst:2
msgid "ansys.mapdl.core.mapdl\\_geometry.Geometry"
msgstr ""

#: ../../pymapdl/doc/source/api/geometry.rst:13:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_geometry.pydocstring of
#: ansys.mapdl.core.mapdl_geometry.Geometry:2
msgid "Pythonic representation of MAPDL CAD geometry"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_geometry.pydocstring of
#: ansys.mapdl.core.mapdl_geometry.Geometry:4
msgid ""
"Contains advanced methods to extend geometry building and selection within "
"MAPDL."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mapdl_geometry.Geometry.rst:31:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_geometry.pydocstring of
#: ansys.mapdl.core.mapdl_geometry.Geometry.__init__:2
msgid "Geometry manager"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_geometry.pydocstring of
#: ansys.mapdl.core.mapdl_geometry.Geometry.__init__:4
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_geometry.pydocstring of
#: ansys.mapdl.core.mapdl_geometry.LegacyGeometry.__init__:4
msgid ""
"Class to help to manage geometry representations in an :class:`Mapdl "
"instance <ansys.mapdl.core.Mapdl>` instance."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mapdl_geometry.Geometry.rst:31:<autosummary>:1
msgid ""
":py:obj:`__init__ <ansys.mapdl.core.mapdl_geometry.Geometry.__init__>`\\ "
"\\(mapdl\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mapdl_geometry.Geometry.rst:31:<autosummary>:1
msgid ""
":py:obj:`area_select "
"<ansys.mapdl.core.mapdl_geometry.Geometry.area_select>`\\ \\(items\\[\\, "
"sel\\_type\\, return\\_selected\\]\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mapdl_geometry.Geometry.rst:31:<autosummary>:1
#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mapdl_geometry.LegacyGeometry.rst:34:<autosummary>:1
msgid "Select areas using a sequence of items."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mapdl_geometry.Geometry.rst:31:<autosummary>:1
msgid ""
":py:obj:`generate_surface "
"<ansys.mapdl.core.mapdl_geometry.Geometry.generate_surface>`\\ "
"\\(\\[density\\, amin\\, amax\\, ninc\\]\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mapdl_geometry.Geometry.rst:31:<autosummary>:1
#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mapdl_geometry.LegacyGeometry.rst:34:<autosummary>:1
msgid "Generate an all-triangular surface of the active surfaces."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mapdl_geometry.Geometry.rst:31:<autosummary>:1
msgid ""
":py:obj:`get_areas <ansys.mapdl.core.mapdl_geometry.Geometry.get_areas>`\\ "
"\\(\\[quality\\, return\\_as\\_list\\]\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mapdl_geometry.Geometry.rst:31:<autosummary>:1
#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mapdl_geometry.LegacyGeometry.rst:34:<autosummary>:1
msgid ""
"Get active areas from MAPDL represented as :class:`pyvista.PolyData` or a "
"list of :class:`pyvista.UnstructuredGrid`."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mapdl_geometry.Geometry.rst:31:<autosummary>:1
msgid ""
":py:obj:`get_elements_per_area "
"<ansys.mapdl.core.mapdl_geometry.Geometry.get_elements_per_area>`\\ \\(\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mapdl_geometry.Geometry.rst:31:<autosummary>:1
#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mapdl_geometry.LegacyGeometry.rst:34:<autosummary>:1
msgid "Get the number of elements meshed for each area."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mapdl_geometry.Geometry.rst:31:<autosummary>:1
msgid ""
":py:obj:`get_keypoints "
"<ansys.mapdl.core.mapdl_geometry.Geometry.get_keypoints>`\\ "
"\\(\\[return\\_as\\_list\\, ...\\]\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mapdl_geometry.Geometry.rst:31:<autosummary>:1
#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mapdl_geometry.Geometry.rst:47:<autosummary>:1
#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mapdl_geometry.LegacyGeometry.rst:34:<autosummary>:1
msgid "Obtain the keypoints geometry."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mapdl_geometry.Geometry.rst:31:<autosummary>:1
msgid ""
":py:obj:`get_lines <ansys.mapdl.core.mapdl_geometry.Geometry.get_lines>`\\ "
"\\(\\[return\\_as\\_list\\]\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mapdl_geometry.Geometry.rst:31:<autosummary>:1
#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mapdl_geometry.LegacyGeometry.rst:34:<autosummary>:1
msgid "Obtain line geometry"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mapdl_geometry.Geometry.rst:31:<autosummary>:1
msgid ""
":py:obj:`get_volumes "
"<ansys.mapdl.core.mapdl_geometry.Geometry.get_volumes>`\\ "
"\\(\\[return\\_as\\_list\\, quality\\]\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mapdl_geometry.Geometry.rst:31:<autosummary>:1
#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mapdl_geometry.LegacyGeometry.rst:34:<autosummary>:1
msgid ""
"Get active volumes from MAPDL represented as a :class:`pyvista.PolyData` "
"object or a list of :class:`pyvista.UnstructuredGrid` objects."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mapdl_geometry.Geometry.rst:31:<autosummary>:1
msgid ""
":py:obj:`keypoint_select "
"<ansys.mapdl.core.mapdl_geometry.Geometry.keypoint_select>`\\ \\(\\[items\\,"
" sel\\_type\\, ...\\]\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mapdl_geometry.Geometry.rst:31:<autosummary>:1
#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mapdl_geometry.LegacyGeometry.rst:34:<autosummary>:1
msgid "Select keypoints using a sequence of items."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mapdl_geometry.Geometry.rst:31:<autosummary>:1
msgid ""
":py:obj:`line_select "
"<ansys.mapdl.core.mapdl_geometry.Geometry.line_select>`\\ \\(items\\[\\, "
"sel\\_type\\, return\\_selected\\]\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mapdl_geometry.Geometry.rst:31:<autosummary>:1
#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mapdl_geometry.LegacyGeometry.rst:34:<autosummary>:1
msgid "Select lines using a sequence of items."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mapdl_geometry.Geometry.rst:31:<autosummary>:1
msgid ""
":py:obj:`volume_select "
"<ansys.mapdl.core.mapdl_geometry.Geometry.volume_select>`\\ \\(items\\[\\, "
"sel\\_type\\, return\\_selected\\]\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mapdl_geometry.Geometry.rst:31:<autosummary>:1
#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mapdl_geometry.LegacyGeometry.rst:34:<autosummary>:1
msgid "Select volumes using a sequence of items."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mapdl_geometry.Geometry.rst:47:<autosummary>:1
msgid ":py:obj:`anum <ansys.mapdl.core.mapdl_geometry.Geometry.anum>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mapdl_geometry.Geometry.rst:47:<autosummary>:1
#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mapdl_geometry.LegacyGeometry.rst:47:<autosummary>:1
msgid "Array of area numbers."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mapdl_geometry.Geometry.rst:47:<autosummary>:1
msgid ":py:obj:`areas <ansys.mapdl.core.mapdl_geometry.Geometry.areas>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mapdl_geometry.Geometry.rst:47:<autosummary>:1
msgid "Geometry of the areas."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mapdl_geometry.Geometry.rst:47:<autosummary>:1
msgid ""
":py:obj:`keypoints <ansys.mapdl.core.mapdl_geometry.Geometry.keypoints>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mapdl_geometry.Geometry.rst:47:<autosummary>:1
msgid ":py:obj:`knum <ansys.mapdl.core.mapdl_geometry.Geometry.knum>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mapdl_geometry.Geometry.rst:47:<autosummary>:1
#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mapdl_geometry.LegacyGeometry.rst:47:<autosummary>:1
msgid "Array of keypoint numbers."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mapdl_geometry.Geometry.rst:47:<autosummary>:1
msgid ":py:obj:`lines <ansys.mapdl.core.mapdl_geometry.Geometry.lines>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mapdl_geometry.Geometry.rst:47:<autosummary>:1
msgid "Geometry of the lines."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mapdl_geometry.Geometry.rst:47:<autosummary>:1
msgid ":py:obj:`lnum <ansys.mapdl.core.mapdl_geometry.Geometry.lnum>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mapdl_geometry.Geometry.rst:47:<autosummary>:1
#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mapdl_geometry.LegacyGeometry.rst:47:<autosummary>:1
msgid "Array of line numbers."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mapdl_geometry.Geometry.rst:47:<autosummary>:1
msgid ":py:obj:`n_area <ansys.mapdl.core.mapdl_geometry.Geometry.n_area>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mapdl_geometry.Geometry.rst:47:<autosummary>:1
#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mapdl_geometry.LegacyGeometry.rst:47:<autosummary>:1
msgid "Number of areas currently selected."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mapdl_geometry.Geometry.rst:47:<autosummary>:1
msgid ""
":py:obj:`n_keypoint <ansys.mapdl.core.mapdl_geometry.Geometry.n_keypoint>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mapdl_geometry.Geometry.rst:47:<autosummary>:1
#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mapdl_geometry.LegacyGeometry.rst:47:<autosummary>:1
msgid "Number of keypoints currently selected."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mapdl_geometry.Geometry.rst:47:<autosummary>:1
msgid ":py:obj:`n_line <ansys.mapdl.core.mapdl_geometry.Geometry.n_line>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mapdl_geometry.Geometry.rst:47:<autosummary>:1
#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mapdl_geometry.LegacyGeometry.rst:47:<autosummary>:1
msgid "Number of lines currently selected."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mapdl_geometry.Geometry.rst:47:<autosummary>:1
msgid ":py:obj:`n_volu <ansys.mapdl.core.mapdl_geometry.Geometry.n_volu>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mapdl_geometry.Geometry.rst:47:<autosummary>:1
#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mapdl_geometry.LegacyGeometry.rst:47:<autosummary>:1
msgid "Number of volumes currently selected."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mapdl_geometry.Geometry.rst:47:<autosummary>:1
msgid ":py:obj:`vnum <ansys.mapdl.core.mapdl_geometry.Geometry.vnum>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mapdl_geometry.Geometry.rst:47:<autosummary>:1
#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mapdl_geometry.LegacyGeometry.rst:47:<autosummary>:1
msgid "Array of volume numbers."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mapdl_geometry.Geometry.rst:47:<autosummary>:1
msgid ":py:obj:`volumes <ansys.mapdl.core.mapdl_geometry.Geometry.volumes>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mapdl_geometry.Geometry.rst:47:<autosummary>:1
#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mapdl_geometry.LegacyGeometry.rst:47:<autosummary>:1
msgid "Obtain the volumes geometry"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mapdl_geometry.LegacyGeometry.rst:2
msgid "ansys.mapdl.core.mapdl\\_geometry.LegacyGeometry"
msgstr ""

#: ../../pymapdl/doc/source/api/geometry.rst:13:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_geometry.pydocstring of
#: ansys.mapdl.core.mapdl_geometry.LegacyGeometry:2
msgid "Legacy Pythonic representation of the MAPDL CAD geometry."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_geometry.pydocstring of
#: ansys.mapdl.core.mapdl_geometry.LegacyGeometry:4
msgid ""
"This class contains advanced methods for extending geometry building and "
"selection within MAPDL."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mapdl_geometry.LegacyGeometry.rst:34:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_geometry.pydocstring of
#: ansys.mapdl.core.mapdl_geometry.LegacyGeometry.__init__:2
msgid "Legacy geometry manager"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mapdl_geometry.LegacyGeometry.rst:34:<autosummary>:1
msgid ""
":py:obj:`__init__ "
"<ansys.mapdl.core.mapdl_geometry.LegacyGeometry.__init__>`\\ \\(mapdl\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mapdl_geometry.LegacyGeometry.rst:34:<autosummary>:1
msgid ""
":py:obj:`area_select "
"<ansys.mapdl.core.mapdl_geometry.LegacyGeometry.area_select>`\\ "
"\\(items\\[\\, sel\\_type\\, return\\_selected\\]\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mapdl_geometry.LegacyGeometry.rst:34:<autosummary>:1
msgid ""
":py:obj:`areas <ansys.mapdl.core.mapdl_geometry.LegacyGeometry.areas>`\\ "
"\\(\\[quality\\, merge\\]\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mapdl_geometry.LegacyGeometry.rst:34:<autosummary>:1
msgid "List of areas from MAPDL represented as a ``pyvista.PolyData`` object."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mapdl_geometry.LegacyGeometry.rst:34:<autosummary>:1
msgid ""
":py:obj:`generate_surface "
"<ansys.mapdl.core.mapdl_geometry.LegacyGeometry.generate_surface>`\\ "
"\\(\\[density\\, amin\\, amax\\, ninc\\]\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mapdl_geometry.LegacyGeometry.rst:34:<autosummary>:1
msgid ""
":py:obj:`get_areas "
"<ansys.mapdl.core.mapdl_geometry.LegacyGeometry.get_areas>`\\ "
"\\(\\[quality\\, return\\_as\\_list\\]\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mapdl_geometry.LegacyGeometry.rst:34:<autosummary>:1
msgid ""
":py:obj:`get_elements_per_area "
"<ansys.mapdl.core.mapdl_geometry.LegacyGeometry.get_elements_per_area>`\\ "
"\\(\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mapdl_geometry.LegacyGeometry.rst:34:<autosummary>:1
msgid ""
":py:obj:`get_keypoints "
"<ansys.mapdl.core.mapdl_geometry.LegacyGeometry.get_keypoints>`\\ "
"\\(\\[return\\_as\\_list\\, ...\\]\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mapdl_geometry.LegacyGeometry.rst:34:<autosummary>:1
msgid ""
":py:obj:`get_lines "
"<ansys.mapdl.core.mapdl_geometry.LegacyGeometry.get_lines>`\\ "
"\\(\\[return\\_as\\_list\\]\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mapdl_geometry.LegacyGeometry.rst:34:<autosummary>:1
msgid ""
":py:obj:`get_volumes "
"<ansys.mapdl.core.mapdl_geometry.LegacyGeometry.get_volumes>`\\ "
"\\(\\[return\\_as\\_list\\, quality\\]\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mapdl_geometry.LegacyGeometry.rst:34:<autosummary>:1
msgid ""
":py:obj:`keypoint_select "
"<ansys.mapdl.core.mapdl_geometry.LegacyGeometry.keypoint_select>`\\ "
"\\(\\[items\\, sel\\_type\\, ...\\]\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mapdl_geometry.LegacyGeometry.rst:34:<autosummary>:1
msgid ""
":py:obj:`keypoints "
"<ansys.mapdl.core.mapdl_geometry.LegacyGeometry.keypoints>`\\ \\(\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mapdl_geometry.LegacyGeometry.rst:34:<autosummary>:1
msgid "Keypoint coordinates."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mapdl_geometry.LegacyGeometry.rst:34:<autosummary>:1
msgid ""
":py:obj:`line_select "
"<ansys.mapdl.core.mapdl_geometry.LegacyGeometry.line_select>`\\ "
"\\(items\\[\\, sel\\_type\\, return\\_selected\\]\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mapdl_geometry.LegacyGeometry.rst:34:<autosummary>:1
msgid ""
":py:obj:`lines <ansys.mapdl.core.mapdl_geometry.LegacyGeometry.lines>`\\ "
"\\(\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mapdl_geometry.LegacyGeometry.rst:34:<autosummary>:1
msgid "Active lines as a ``pyvista.PolyData`` object."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mapdl_geometry.LegacyGeometry.rst:34:<autosummary>:1
msgid ""
":py:obj:`volume_select "
"<ansys.mapdl.core.mapdl_geometry.LegacyGeometry.volume_select>`\\ "
"\\(items\\[\\, sel\\_type\\, return\\_selected\\]\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mapdl_geometry.LegacyGeometry.rst:47:<autosummary>:1
msgid ":py:obj:`anum <ansys.mapdl.core.mapdl_geometry.LegacyGeometry.anum>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mapdl_geometry.LegacyGeometry.rst:47:<autosummary>:1
msgid ":py:obj:`knum <ansys.mapdl.core.mapdl_geometry.LegacyGeometry.knum>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mapdl_geometry.LegacyGeometry.rst:47:<autosummary>:1
msgid ":py:obj:`lnum <ansys.mapdl.core.mapdl_geometry.LegacyGeometry.lnum>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mapdl_geometry.LegacyGeometry.rst:47:<autosummary>:1
msgid ""
":py:obj:`n_area <ansys.mapdl.core.mapdl_geometry.LegacyGeometry.n_area>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mapdl_geometry.LegacyGeometry.rst:47:<autosummary>:1
msgid ""
":py:obj:`n_keypoint "
"<ansys.mapdl.core.mapdl_geometry.LegacyGeometry.n_keypoint>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mapdl_geometry.LegacyGeometry.rst:47:<autosummary>:1
msgid ""
":py:obj:`n_line <ansys.mapdl.core.mapdl_geometry.LegacyGeometry.n_line>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mapdl_geometry.LegacyGeometry.rst:47:<autosummary>:1
msgid ""
":py:obj:`n_volu <ansys.mapdl.core.mapdl_geometry.LegacyGeometry.n_volu>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mapdl_geometry.LegacyGeometry.rst:47:<autosummary>:1
msgid ":py:obj:`vnum <ansys.mapdl.core.mapdl_geometry.LegacyGeometry.vnum>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mapdl_geometry.LegacyGeometry.rst:47:<autosummary>:1
msgid ""
":py:obj:`volumes <ansys.mapdl.core.mapdl_geometry.LegacyGeometry.volumes>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mapdl_grpc.MapdlGrpc.channel_state.rst:2
msgid "ansys.mapdl.core.mapdl\\_grpc.MapdlGrpc.channel\\_state"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:113:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.channel_state:2
msgid "Returns the gRPC channel state."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.channel_state:4
msgid "The possible values are:"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.channel_state:6
msgid "0 - 'IDLE'"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.channel_state:7
msgid "1 - 'CONNECTING'"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.channel_state:8
msgid "2 - 'READY'"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.channel_state:9
msgid "3 - 'TRANSIENT_FAILURE'"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.channel_state:10
msgid "4 - 'SHUTDOWN'"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mapdl_grpc.MapdlGrpc.check_status.rst:2
msgid "ansys.mapdl.core.mapdl\\_grpc.MapdlGrpc.check\\_status"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.check_status:2
msgid ""
"Return MAPDL status. * 'exited' if MAPDL is exited * 'exiting' if MAPDL is "
"exiting * Otherwise returns 'OK'."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mapdl_grpc.MapdlGrpc.connection.rst:2
msgid "ansys.mapdl.core.mapdl\\_grpc.MapdlGrpc.connection"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:113:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.connection:2
msgid ""
"Return the type of connection to the instance, namely: grpc, corba or "
"console."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mapdl_grpc.MapdlGrpc.download.rst:2
msgid "ansys.mapdl.core.mapdl\\_grpc.MapdlGrpc.download"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:113:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.download:2
msgid ""
"Download files from the gRPC instance working directory :rtype: "
":sphinx_autodoc_typehints_type:`\\:py\\:class\\:\\`\\~typing.List\\`\\\\ "
"\\\\\\[\\:py\\:class\\:\\`str\\`\\]`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.download:6
msgid "This feature is only available for MAPDL 2021R1 or newer."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.download:10
msgid ""
"**files** : :class:`python:str` or :obj:`List`\\[:class:`python:str`] "
":obj:`or` :class:`python:tuple`\\(:class:`python:str`)"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.download:9
msgid "python:str or List[python:str] or python:tuple(python:str)"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.download:11
msgid ""
"Name of the file on the server. File must be in the same directory as the "
"mapdl instance. A list of string names or tuples of string names can also be"
" used. List current files with :meth:`Mapdl.list_files "
"<MapdlGrpc.list_files>`."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.download:16
msgid ""
"Alternatively, you can also specify **glob expressions** to match file "
"names. For example: `'file*'` to match every file whose name starts with "
"`'file'`."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.download:20
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.download_project:11
msgid "**target_dir** : :class:`python:str`, :obj:`optional`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.download:21
msgid ""
"Path where the downloaded files will be located. The default is the current "
"working directory."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.download:24
msgid "**extension** : :class:`python:str`, :obj:`optional`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.download:25
msgid "Filename with this extension will be considered. The default is None."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.download:27
msgid "**chunk_size** : :class:`python:int`, :obj:`optional`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.download:28
msgid "Chunk size in bytes.  Must be less than 4MB. The default is 256 kB."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.download:30
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.download_project:14
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.download_result:11
#: ../../pymapdl/src/ansys/mapdl/core/pool.pydocstring of
#: ansys.mapdl.core.pool.MapdlPool:45
msgid ""
"**progress_bar** : :ref:`bool <python:bltin-boolean-values>`, "
":obj:`optional`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.download:31
msgid ""
"Display a progress bar using ``tqdm`` when ``True``. Helpful for showing "
"download progress."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.download:34
msgid ""
"**recursive** : :ref:`bool <python:bltin-boolean-values>`, :obj:`optional`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.download:35
msgid ""
"Whether to use recursion when using glob pattern. The default is ``False``."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.download:49
msgid "There are some considerations to keep in mind when using this command:"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.download:51
msgid ""
"The glob pattern search does not search recursively in remote instances."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.download:52
msgid ""
"In a remote instance, it is not possible to list or download files in "
"different locations than the MAPDL working directory."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.download:54
msgid ""
"If you are in local and provide a file path, downloading files from a "
"different folder is allowed. However it is not a recommended approach."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.download:61
msgid "Download a single file:"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.download:65
msgid "Download all the files starting with `'file'`:"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.download:69
msgid "Download every single file in the MAPDL working directory:"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.download:73
msgid ""
"Alternatively, you can download all the files using "
":func:`Mapdl.download_project "
"<ansys.mapdl.core.mapdl_grpc.MapdlGrpc.download_project>` (recommended):"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mapdl_grpc.MapdlGrpc.download_project.rst:2
msgid "ansys.mapdl.core.mapdl\\_grpc.MapdlGrpc.download\\_project"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:113:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.download_project:2
msgid "Download all the project files located in the MAPDL working directory."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.download_project:7
msgid ""
"**extensions** : :obj:`List`\\[:class:`python:str`], "
":obj:`Tuple`\\[:class:`python:str`], :obj:`optional`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.download_project:6
msgid "List[python:str], Tuple[python:str], optional"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.download_project:8
msgid ""
"List of extensions to filter the files before downloading, by default None."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.download_project:12
msgid "Path to downloaded the files will to. The default is ``None``."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.download_project:15
msgid ""
"Display a progress bar using ``tqdm`` when ``True``.  Helpful for showing "
"download progress. The default is ``False``."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.download_project:23
msgid ":obj:`List`\\[:obj:`Str`]"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.download_project:24
msgid "List of downloaded files."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mapdl_grpc.MapdlGrpc.download_result.rst:2
msgid "ansys.mapdl.core.mapdl\\_grpc.MapdlGrpc.download\\_result"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:113:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.download_result:2
msgid "Download remote result files to a local directory"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.download_result:7
msgid "**path** : :class:`python:str`, :obj:`Path`, :obj:`optional`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.download_result:6
msgid "python:str, Path, optional"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.download_result:8
msgid ""
"Path where the files are downloaded, by default the current python path "
"(``os.getcwd()``)"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.download_result:12
msgid "Show the progress bar or not, default to False."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.download_result:14
msgid "**preference** : :class:`python:str`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.download_result:15
msgid ""
"Preferred type for the result file, which is either ``rst`` or ``rth``. This"
" parameter is only required when both files are present. The default is "
"```None``, in which case ``\"rst\"`` is used."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.download_result:35
msgid "Download remote result files into the current working directory"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mapdl_grpc.MapdlGrpc.file.rst:2
msgid "ansys.mapdl.core.mapdl\\_grpc.MapdlGrpc.file"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:113:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.file:2
msgid "Specifies the data file where results are to be found."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.file:4
msgid "APDL Command: FILE"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.file:8
msgid "**fname** : :class:`python:str`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.file:9
msgid ""
"File name and directory path (248 characters maximum, including the "
"characters needed for the directory path).  An unspecified directory path "
"defaults to the working directory; in this case, you can use all 248 "
"characters for the file name."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.file:14
msgid "**ext** : :class:`python:str`, default: \"rst\""
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.file:13
msgid "python:str, default: \"rst\""
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.file:15
msgid ""
"Filename extension (eight-character maximum). If ``fname`` has an extension "
"this is ignored."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.file:32
msgid ""
"Specifies the Ansys data file where the results are to be found for "
"postprocessing."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_extended.pydocstring of
#: ansys.mapdl.core.mapdl_extended._MapdlCommandExtended.file:38
msgid "Load a result file that is outside of the current working directory."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mapdl_grpc.MapdlGrpc.ip.rst:2
msgid "ansys.mapdl.core.mapdl\\_grpc.MapdlGrpc.ip"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:113:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.ip:2
msgid "Return the MAPDL gRPC instance IP."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mapdl_grpc.MapdlGrpc.is_local.rst:2
msgid "ansys.mapdl.core.mapdl\\_grpc.MapdlGrpc.is\\_local"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:113:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.is_local:2
msgid "Check if the instance is running locally or remotely."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mapdl_grpc.MapdlGrpc.list_error_file.rst:2
msgid "ansys.mapdl.core.mapdl\\_grpc.MapdlGrpc.list\\_error\\_file"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mapdl_grpc.MapdlGrpc.list_files.rst:2
msgid "ansys.mapdl.core.mapdl\\_grpc.MapdlGrpc.list\\_files"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mapdl_grpc.MapdlGrpc.mute.rst:2
msgid "ansys.mapdl.core.mapdl\\_grpc.MapdlGrpc.mute"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mapdl_grpc.MapdlGrpc.port.rst:2
msgid "ansys.mapdl.core.mapdl\\_grpc.MapdlGrpc.port"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:113:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.port:2
msgid "Returns the MAPDL gRPC instance port."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mapdl_grpc.MapdlGrpc.upload.rst:2
msgid "ansys.mapdl.core.mapdl\\_grpc.MapdlGrpc.upload"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:113:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.upload:2
msgid "Upload a file to the grpc instance"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.upload:6
msgid "file_name"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.upload-1
msgid "str"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.upload:7
msgid "Local file to upload."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.upload:9
msgid "progress_bar"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.upload:10
msgid ""
"Whether to display a progress bar using ``tqdm``. The default is ``True``. "
"This parameter is helpful for showing download progress."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.upload:19
msgid ""
"Base name of the file uploaded.  File can be accessed relative to the mapdl "
"instance with this file name."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc.upload:33
msgid "Upload \"local_file.inp\" while disabling the progress bar"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mesh_grpc.MeshGrpc.rst:2
msgid "ansys.mapdl.core.mesh\\_grpc.MeshGrpc"
msgstr ""

#: ../../pymapdl/doc/source/api/mesh.rst:12:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/mesh_grpc.pydocstring of
#: ansys.mapdl.core.mesh_grpc.MeshGrpc:2
msgid "Provides an interface to the gRPC mesh from MAPDL."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mesh_grpc.MeshGrpc.rst:23:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/mesh_grpc.pydocstring of
#: ansys.mapdl.core.mesh_grpc.MeshGrpc.__init__:2
msgid "Initialize grpc geometry data"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mesh_grpc.MeshGrpc.rst:23:<autosummary>:1
msgid ""
":py:obj:`__init__ <ansys.mapdl.core.mesh_grpc.MeshGrpc.__init__>`\\ "
"\\(mapdl\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mesh_grpc.MeshGrpc.rst:23:<autosummary>:1
msgid ""
":py:obj:`nodes_in_coordinate_system "
"<ansys.mapdl.core.mesh_grpc.MeshGrpc.nodes_in_coordinate_system>`\\ "
"\\(CS\\_id\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mesh_grpc.MeshGrpc.rst:23:<autosummary>:1
msgid "Return nodes in the desired coordinate system."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mesh_grpc.MeshGrpc.rst:23:<autosummary>:1
msgid ""
":py:obj:`save <ansys.mapdl.core.mesh_grpc.MeshGrpc.save>`\\ "
"\\(filename\\[\\, binary\\, force\\_linear\\, ...\\]\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mesh_grpc.MeshGrpc.rst:23:<autosummary>:1
msgid "Save the geometry as a vtk file"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mesh_grpc.MeshGrpc.rst:54:<autosummary>:1
msgid ":py:obj:`ekey <ansys.mapdl.core.mesh_grpc.MeshGrpc.ekey>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mesh_grpc.MeshGrpc.rst:54:<autosummary>:1
msgid "Element type key"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mesh_grpc.MeshGrpc.rst:54:<autosummary>:1
msgid ":py:obj:`elem <ansys.mapdl.core.mesh_grpc.MeshGrpc.elem>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mesh_grpc.MeshGrpc.rst:54:<autosummary>:1
msgid "List of elements containing raw ansys information."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mesh_grpc.MeshGrpc.rst:54:<autosummary>:1
msgid ""
":py:obj:`elem_real_constant "
"<ansys.mapdl.core.mesh_grpc.MeshGrpc.elem_real_constant>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mesh_grpc.MeshGrpc.rst:54:<autosummary>:1
msgid "Real constant reference for each element."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mesh_grpc.MeshGrpc.rst:54:<autosummary>:1
msgid ""
":py:obj:`element_components "
"<ansys.mapdl.core.mesh_grpc.MeshGrpc.element_components>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mesh_grpc.MeshGrpc.rst:54:<autosummary>:1
msgid "Element components for the archive."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mesh_grpc.MeshGrpc.rst:54:<autosummary>:1
msgid ""
":py:obj:`element_coord_system "
"<ansys.mapdl.core.mesh_grpc.MeshGrpc.element_coord_system>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mesh_grpc.MeshGrpc.rst:54:<autosummary>:1
msgid "Element coordinate system number"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mesh_grpc.MeshGrpc.rst:54:<autosummary>:1
msgid ":py:obj:`enum <ansys.mapdl.core.mesh_grpc.MeshGrpc.enum>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mesh_grpc.MeshGrpc.rst:54:<autosummary>:1
msgid "Element numbers of currently selected elements"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mesh_grpc.MeshGrpc.rst:54:<autosummary>:1
msgid ":py:obj:`enum_all <ansys.mapdl.core.mesh_grpc.MeshGrpc.enum_all>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mesh_grpc.MeshGrpc.rst:54:<autosummary>:1
msgid "Array of all element numbers, even those not selected."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mesh_grpc.MeshGrpc.rst:54:<autosummary>:1
msgid ":py:obj:`et_id <ansys.mapdl.core.mesh_grpc.MeshGrpc.et_id>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mesh_grpc.MeshGrpc.rst:54:<autosummary>:1
msgid "Element type id (ET) for each element."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mesh_grpc.MeshGrpc.rst:54:<autosummary>:1
msgid ":py:obj:`etype <ansys.mapdl.core.mesh_grpc.MeshGrpc.etype>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mesh_grpc.MeshGrpc.rst:54:<autosummary>:1
msgid "Element type of each element."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mesh_grpc.MeshGrpc.rst:54:<autosummary>:1
msgid ":py:obj:`grid <ansys.mapdl.core.mesh_grpc.MeshGrpc.grid>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mesh_grpc.MeshGrpc.rst:54:<autosummary>:1
msgid "VTK representation of the underlying finite element mesh."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mesh_grpc.MeshGrpc.rst:54:<autosummary>:1
msgid ":py:obj:`key_option <ansys.mapdl.core.mesh_grpc.MeshGrpc.key_option>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mesh_grpc.MeshGrpc.rst:54:<autosummary>:1
msgid "Key options of selected element types."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mesh_grpc.MeshGrpc.rst:54:<autosummary>:1
msgid ":py:obj:`local <ansys.mapdl.core.mesh_grpc.MeshGrpc.local>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mesh_grpc.MeshGrpc.rst:54:<autosummary>:1
msgid ""
":py:obj:`material_type "
"<ansys.mapdl.core.mesh_grpc.MeshGrpc.material_type>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mesh_grpc.MeshGrpc.rst:54:<autosummary>:1
msgid "Material type index of each element in the archive."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mesh_grpc.MeshGrpc.rst:54:<autosummary>:1
msgid ":py:obj:`n_elem <ansys.mapdl.core.mesh_grpc.MeshGrpc.n_elem>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mesh_grpc.MeshGrpc.rst:54:<autosummary>:1
msgid "Number of currently selected elements in MAPDL."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mesh_grpc.MeshGrpc.rst:54:<autosummary>:1
msgid ":py:obj:`n_node <ansys.mapdl.core.mesh_grpc.MeshGrpc.n_node>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mesh_grpc.MeshGrpc.rst:54:<autosummary>:1
msgid "Number of currently selected nodes in MAPDL."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mesh_grpc.MeshGrpc.rst:54:<autosummary>:1
msgid ":py:obj:`nnum <ansys.mapdl.core.mesh_grpc.MeshGrpc.nnum>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mesh_grpc.MeshGrpc.rst:54:<autosummary>:1
msgid "Array of currently selected node numbers."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mesh_grpc.MeshGrpc.rst:54:<autosummary>:1
msgid ":py:obj:`nnum_all <ansys.mapdl.core.mesh_grpc.MeshGrpc.nnum_all>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mesh_grpc.MeshGrpc.rst:54:<autosummary>:1
msgid "Array of all node numbers, even those not selected."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mesh_grpc.MeshGrpc.rst:54:<autosummary>:1
msgid ""
":py:obj:`node_angles <ansys.mapdl.core.mesh_grpc.MeshGrpc.node_angles>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mesh_grpc.MeshGrpc.rst:54:<autosummary>:1
msgid "Not yet implemented"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mesh_grpc.MeshGrpc.rst:54:<autosummary>:1
msgid ""
":py:obj:`node_components "
"<ansys.mapdl.core.mesh_grpc.MeshGrpc.node_components>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mesh_grpc.MeshGrpc.rst:54:<autosummary>:1
msgid "Node components for the archive."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mesh_grpc.MeshGrpc.rst:54:<autosummary>:1
msgid ":py:obj:`nodes <ansys.mapdl.core.mesh_grpc.MeshGrpc.nodes>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mesh_grpc.MeshGrpc.rst:54:<autosummary>:1
msgid "Array of nodes in Global Cartesian coordinate system."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mesh_grpc.MeshGrpc.rst:54:<autosummary>:1
msgid ""
":py:obj:`nodes_in_current_CS "
"<ansys.mapdl.core.mesh_grpc.MeshGrpc.nodes_in_current_CS>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mesh_grpc.MeshGrpc.rst:54:<autosummary>:1
msgid "Returns the nodes array in the current coordinate system."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mesh_grpc.MeshGrpc.rst:54:<autosummary>:1
msgid ""
":py:obj:`nodes_rotation "
"<ansys.mapdl.core.mesh_grpc.MeshGrpc.nodes_rotation>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mesh_grpc.MeshGrpc.rst:54:<autosummary>:1
msgid "Returns an array of node rotations"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mesh_grpc.MeshGrpc.rst:54:<autosummary>:1
msgid ":py:obj:`rlblock <ansys.mapdl.core.mesh_grpc.MeshGrpc.rlblock>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mesh_grpc.MeshGrpc.rst:54:<autosummary>:1
msgid "Real constant data from the RLBLOCK."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mesh_grpc.MeshGrpc.rst:54:<autosummary>:1
msgid ""
":py:obj:`rlblock_num <ansys.mapdl.core.mesh_grpc.MeshGrpc.rlblock_num>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mesh_grpc.MeshGrpc.rst:54:<autosummary>:1
msgid "Indices from the real constant data"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mesh_grpc.MeshGrpc.rst:54:<autosummary>:1
msgid ":py:obj:`section <ansys.mapdl.core.mesh_grpc.MeshGrpc.section>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mesh_grpc.MeshGrpc.rst:54:<autosummary>:1
msgid "Section number"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mesh_grpc.MeshGrpc.rst:54:<autosummary>:1
msgid ":py:obj:`tshape <ansys.mapdl.core.mesh_grpc.MeshGrpc.tshape>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mesh_grpc.MeshGrpc.rst:54:<autosummary>:1
msgid "Tshape of contact elements."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mesh_grpc.MeshGrpc.rst:54:<autosummary>:1
msgid ":py:obj:`tshape_key <ansys.mapdl.core.mesh_grpc.MeshGrpc.tshape_key>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.mesh_grpc.MeshGrpc.rst:54:<autosummary>:1
msgid "Dict with the mapping between element type and element shape."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.parameters.Parameters.rst:2
msgid "ansys.mapdl.core.parameters.Parameters"
msgstr ""

#: ../../pymapdl/doc/source/api/parameters.rst:12:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/parameters.pydocstring of
#: ansys.mapdl.core.parameters.Parameters:2
msgid "Collection of MAPDL parameters."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/parameters.pydocstring of
#: ansys.mapdl.core.parameters.Parameters:18
msgid "See :ref:`ref_parameters` for additional notes."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/parameters.pydocstring of
#: ansys.mapdl.core.parameters.Parameters:23
msgid "Simply list all parameters except for MAPDL MATH parameters."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/parameters.pydocstring of
#: ansys.mapdl.core.parameters.Parameters:35
msgid "Get a parameter"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/parameters.pydocstring of
#: ansys.mapdl.core.parameters.Parameters:40
msgid "Get an array parameter"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.parameters.Parameters.rst:25:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/parameters.pydocstring of
#: ansys.mapdl.core.parameters.Parameters.__init__:2
msgid "Parameters manager"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/parameters.pydocstring of
#: ansys.mapdl.core.parameters.Parameters.__init__:4
msgid ""
"Class to help to manage parameters in an :class:`Mapdl instance "
"<ansys.mapdl.core.Mapdl>` instance."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.parameters.Parameters.rst:25:<autosummary>:1
msgid ""
":py:obj:`__init__ <ansys.mapdl.core.parameters.Parameters.__init__>`\\ "
"\\(mapdl\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.parameters.Parameters.rst:25:<autosummary>:1
msgid ":py:obj:`copy <ansys.mapdl.core.parameters.Parameters.copy>`\\ \\(\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.parameters.Parameters.rst:25:<autosummary>:1
msgid "Return a shallow copy of the dictionary."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.parameters.Parameters.rst:25:<autosummary>:1
msgid ":py:obj:`items <ansys.mapdl.core.parameters.Parameters.items>`\\ \\(\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.parameters.Parameters.rst:25:<autosummary>:1
msgid ""
"Return a view object that contains the key-value pairs in the dictionary."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.parameters.Parameters.rst:25:<autosummary>:1
msgid ":py:obj:`keys <ansys.mapdl.core.parameters.Parameters.keys>`\\ \\(\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.parameters.Parameters.rst:25:<autosummary>:1
msgid "Return a view object that contains the keys in the dictionary."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.parameters.Parameters.rst:25:<autosummary>:1
msgid ":py:obj:`values <ansys.mapdl.core.parameters.Parameters.values>`\\ \\(\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.parameters.Parameters.rst:25:<autosummary>:1
msgid "Return a view object that contains the values in the dictionary."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.parameters.Parameters.rst:42:<autosummary>:1
msgid ":py:obj:`csys <ansys.mapdl.core.parameters.Parameters.csys>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.parameters.Parameters.rst:42:<autosummary>:1
msgid "Active coordinate system"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.parameters.Parameters.rst:42:<autosummary>:1
msgid ":py:obj:`dsys <ansys.mapdl.core.parameters.Parameters.dsys>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.parameters.Parameters.rst:42:<autosummary>:1
msgid "Active display coordinate system"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.parameters.Parameters.rst:42:<autosummary>:1
msgid ":py:obj:`esys <ansys.mapdl.core.parameters.Parameters.esys>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.parameters.Parameters.rst:42:<autosummary>:1
msgid "Active element coordinate system"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.parameters.Parameters.rst:42:<autosummary>:1
msgid ":py:obj:`material <ansys.mapdl.core.parameters.Parameters.material>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.parameters.Parameters.rst:42:<autosummary>:1
msgid "Active material"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.parameters.Parameters.rst:42:<autosummary>:1
msgid ":py:obj:`numcpu <ansys.mapdl.core.parameters.Parameters.numcpu>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.parameters.Parameters.rst:42:<autosummary>:1
msgid "Number of Distributed MAPDL processes being used."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.parameters.Parameters.rst:42:<autosummary>:1
msgid ":py:obj:`platform <ansys.mapdl.core.parameters.Parameters.platform>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.parameters.Parameters.rst:42:<autosummary>:1
msgid "The current platform."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.parameters.Parameters.rst:42:<autosummary>:1
msgid ":py:obj:`real <ansys.mapdl.core.parameters.Parameters.real>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.parameters.Parameters.rst:42:<autosummary>:1
msgid "Active real constant set"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.parameters.Parameters.rst:42:<autosummary>:1
msgid ":py:obj:`revision <ansys.mapdl.core.parameters.Parameters.revision>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.parameters.Parameters.rst:42:<autosummary>:1
msgid "MAPDL revision version."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.parameters.Parameters.rst:42:<autosummary>:1
msgid ":py:obj:`routine <ansys.mapdl.core.parameters.Parameters.routine>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.parameters.Parameters.rst:42:<autosummary>:1
msgid "Current routine string as a string."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.parameters.Parameters.rst:42:<autosummary>:1
msgid ":py:obj:`rsys <ansys.mapdl.core.parameters.Parameters.rsys>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.parameters.Parameters.rst:42:<autosummary>:1
msgid "Active result coordinate system"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.parameters.Parameters.rst:42:<autosummary>:1
msgid ":py:obj:`section <ansys.mapdl.core.parameters.Parameters.section>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.parameters.Parameters.rst:42:<autosummary>:1
msgid "Active section number"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.parameters.Parameters.rst:42:<autosummary>:1
msgid ":py:obj:`type <ansys.mapdl.core.parameters.Parameters.type>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.parameters.Parameters.rst:42:<autosummary>:1
msgid "Active element type"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.parameters.Parameters.rst:42:<autosummary>:1
msgid ":py:obj:`units <ansys.mapdl.core.parameters.Parameters.units>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.parameters.Parameters.rst:42:<autosummary>:1
msgid "Units specified by /UNITS command."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.ALLOWED_TARGETS.rst:2
msgid "ansys.mapdl.core.plotting.ALLOWED\\_TARGETS"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:89:<autosummary>:1 ../docstring of
#: ansys.mapdl.core.plotting.ALLOWED_TARGETS:2 ../docstring of
#: ansys.mapdl.core.plotting.BCS:2
msgid "Built-in mutable sequence."
msgstr ""

#: ../docstring of ansys.mapdl.core.plotting.ALLOWED_TARGETS:4 ../docstring of
#: ansys.mapdl.core.plotting.BCS:4
msgid ""
"If no argument is given, the constructor creates a new empty list. The "
"argument must be an iterable if specified."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.BCS.rst:2
msgid "ansys.mapdl.core.plotting.BCS"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlPlotter.rst:2
msgid "ansys.mapdl.core.plotting.MapdlPlotter"
msgstr ""

#: ../../pymapdl/doc/source/api/plotting.rst:20:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/plotting/visualizer.pydocstring of
#: ansys.mapdl.core.plotting.visualizer.MapdlPlotter:2
msgid "Plotter class for PyMAPDL."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/plotting/visualizer.pydocstring of
#: ansys.mapdl.core.plotting.visualizer.MapdlPlotter:4
msgid ""
"This class is an implementation of the ``PlotterInterface`` class from the "
"`Visualization Interface Tool <https://github.com/ansys/ansys-tools-"
"visualization-interface>`_. The picker is implemented in PyMAPDL-specific "
"classes due to the characteristics of the library."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/plotting/visualizer.pydocstring of
#: ansys.mapdl.core.plotting.visualizer.MapdlPlotter:9
msgid ""
"**use_trame** : :ref:`bool <python:bltin-boolean-values>`, :obj:`optional`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/plotting/visualizer.pydocstring of
#: ansys.mapdl.core.plotting.visualizer.MapdlPlotter:10
msgid "Whether to use the Trame visualizer. The default is ``False``."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/plotting/visualizer.pydocstring of
#: ansys.mapdl.core.plotting.visualizer.MapdlPlotter:12
msgid "**theme** : :obj:`pv.DefaultTheme`, :obj:`optional`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/plotting/visualizer.pydocstring of
#: ansys.mapdl.core.plotting.visualizer.MapdlPlotter:11
msgid "pv.DefaultTheme, optional"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/plotting/visualizer.pydocstring of
#: ansys.mapdl.core.plotting.visualizer.MapdlPlotter:13
msgid "Theme to use for the plotter. The default is ``None``."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlPlotter.rst:31:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/plotting/visualizer.pydocstring of
#: ansys.mapdl.core.plotting.visualizer.MapdlPlotter.__init__:2
msgid "Initialize the ``MapdlPlotter`` class."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlPlotter.rst:31:<autosummary>:1
msgid ""
":py:obj:`__init__ <ansys.mapdl.core.plotting.MapdlPlotter.__init__>`\\ "
"\\(\\[use\\_trame\\, theme\\]\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlPlotter.rst:31:<autosummary>:1
msgid ""
":py:obj:`add_labels <ansys.mapdl.core.plotting.MapdlPlotter.add_labels>`\\ "
"\\(points\\, labels\\, \\*\\*plotting\\_options\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlPlotter.rst:31:<autosummary>:1
msgid "Add labels to the plotter."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlPlotter.rst:31:<autosummary>:1
msgid ""
":py:obj:`add_mesh <ansys.mapdl.core.plotting.MapdlPlotter.add_mesh>`\\ "
"\\(meshes\\, points\\, labels\\, \\*\\[\\, cpos\\, ...\\]\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlPlotter.rst:31:<autosummary>:1
msgid "Adds a mesh to the plotter."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlPlotter.rst:31:<autosummary>:1
msgid ""
":py:obj:`add_points <ansys.mapdl.core.plotting.MapdlPlotter.add_points>`\\ "
"\\(points\\, \\*\\*plotting\\_options\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlPlotter.rst:31:<autosummary>:1
msgid "Add points to the plotter."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlPlotter.rst:31:<autosummary>:1
msgid ""
":py:obj:`bc_nodes_plot "
"<ansys.mapdl.core.plotting.MapdlPlotter.bc_nodes_plot>`\\ \\(mapdl\\, "
"bc\\_labels\\[\\, ...\\]\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlPlotter.rst:31:<autosummary>:1
msgid "Plot nodes BC given a list of labels."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlPlotter.rst:31:<autosummary>:1
msgid ""
":py:obj:`bc_plot <ansys.mapdl.core.plotting.MapdlPlotter.bc_plot>`\\ "
"\\(\\[mapdl\\, bc\\_labels\\, bc\\_target\\, ...\\]\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlPlotter.rst:31:<autosummary>:1
msgid "Plot boundary conditions."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlPlotter.rst:31:<autosummary>:1
msgid ""
":py:obj:`get_meshes_from_plotter "
"<ansys.mapdl.core.plotting.MapdlPlotter.get_meshes_from_plotter>`\\ \\(\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlPlotter.rst:31:<autosummary>:1
msgid "Get the meshes plotted in the plotter."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlPlotter.rst:31:<autosummary>:1
msgid ""
":py:obj:`plot <ansys.mapdl.core.plotting.MapdlPlotter.plot>`\\ \\(meshes\\, "
"points\\, labels\\, \\*\\[\\, title\\, ...\\]\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlPlotter.rst:31:<autosummary>:1
msgid "Add an object to the plotter."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlPlotter.rst:31:<autosummary>:1
msgid ""
":py:obj:`plot_iter <ansys.mapdl.core.plotting.MapdlPlotter.plot_iter>`\\ "
"\\(plotting\\_list\\[\\, name\\_filter\\]\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlPlotter.rst:31:<autosummary>:1
msgid "Add a list of objects to the plotter."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlPlotter.rst:31:<autosummary>:1
msgid ""
":py:obj:`show <ansys.mapdl.core.plotting.MapdlPlotter.show>`\\ "
"\\(\\[window\\_size\\, return\\_plotter\\, ...\\]\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlPlotter.rst:31:<autosummary>:1
msgid "Show the plotter."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlPlotter.rst:31:<autosummary>:1
msgid ""
":py:obj:`switch_scene "
"<ansys.mapdl.core.plotting.MapdlPlotter.switch_scene>`\\ \\(pl\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlPlotter.rst:31:<autosummary>:1
msgid "Switches the backend scene to the given plotter."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlPlotter.rst:38:<autosummary>:1
msgid ":py:obj:`backend <ansys.mapdl.core.plotting.MapdlPlotter.backend>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlPlotter.rst:38:<autosummary>:1
msgid "Return the base plotter object."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlPlotter.rst:38:<autosummary>:1
msgid ":py:obj:`meshes <ansys.mapdl.core.plotting.MapdlPlotter.meshes>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlPlotter.rst:38:<autosummary>:1
msgid "Return the meshes."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlPlotter.rst:38:<autosummary>:1
msgid ":py:obj:`scene <ansys.mapdl.core.plotting.MapdlPlotter.scene>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlPlotter.rst:38:<autosummary>:1
msgid "Return the scene."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlTheme.rst:2
msgid "ansys.mapdl.core.plotting.MapdlTheme"
msgstr ""

#: ../../pymapdl/doc/source/api/plotting.rst:20:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/plotting/theme.pydocstring of
#: ansys.mapdl.core.plotting.theme.MapdlTheme:2
msgid "Provides the PyMAPDL-specific theme for PyVista."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/plotting/theme.pydocstring of
#: ansys.mapdl.core.plotting.theme.MapdlTheme:4
msgid "The theme includes these defaults:"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/plotting/theme.pydocstring of
#: ansys.mapdl.core.plotting.theme.MapdlTheme:6
msgid "PyMAPDL colormap as default colormap."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/plotting/theme.pydocstring of
#: ansys.mapdl.core.plotting.theme.MapdlTheme:7
msgid "``'Courier'`` font family for an interactive plot"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/plotting/theme.pydocstring of
#: ansys.mapdl.core.plotting.theme.MapdlTheme:8
msgid "``'PyMAPDL'`` for the title of an interactive plot"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/plotting/theme.pydocstring of
#: ansys.mapdl.core.plotting.theme.MapdlTheme:25
msgid ""
"Create a custom theme with unique parameters from the ``MapdlTheme`` base."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/plotting/theme.pydocstring of
#: ansys.mapdl.core.plotting.theme.MapdlTheme:33
msgid "Apply this theme to element plotting."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/plotting/theme.pydocstring of
#: ansys.mapdl.core.plotting.theme.MapdlTheme:37
msgid "Apply this theme to area plotting."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlTheme.rst:26:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/plotting/theme.pydocstring of
#: ansys.mapdl.core.plotting.theme.MapdlTheme.__init__:2
msgid "Initialize the theme."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlTheme.rst:26:<autosummary>:1
msgid ":py:obj:`__init__ <ansys.mapdl.core.plotting.MapdlTheme.__init__>`\\ \\(\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlTheme.rst:26:<autosummary>:1
msgid ""
":py:obj:`from_dict <ansys.mapdl.core.plotting.MapdlTheme.from_dict>`\\ "
"\\(dict\\_\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlTheme.rst:26:<autosummary>:1
msgid "Create from a dictionary."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlTheme.rst:26:<autosummary>:1
msgid ""
":py:obj:`load_theme <ansys.mapdl.core.plotting.MapdlTheme.load_theme>`\\ "
"\\(theme\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlTheme.rst:26:<autosummary>:1
msgid "Overwrite the current theme with a theme."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlTheme.rst:26:<autosummary>:1
msgid ""
":py:obj:`restore_defaults "
"<ansys.mapdl.core.plotting.MapdlTheme.restore_defaults>`\\ \\(\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlTheme.rst:26:<autosummary>:1
msgid "Restore the theme defaults."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlTheme.rst:26:<autosummary>:1
msgid ":py:obj:`save <ansys.mapdl.core.plotting.MapdlTheme.save>`\\ \\(filename\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlTheme.rst:26:<autosummary>:1
msgid "Serialize this theme to a json file."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlTheme.rst:26:<autosummary>:1
msgid ":py:obj:`to_dict <ansys.mapdl.core.plotting.MapdlTheme.to_dict>`\\ \\(\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlTheme.rst:26:<autosummary>:1
msgid "Return theme config parameters as a dictionary."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlTheme.rst:85:<autosummary>:1
msgid ""
":py:obj:`above_range_color "
"<ansys.mapdl.core.plotting.MapdlTheme.above_range_color>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlTheme.rst:85:<autosummary>:1
msgid "Return or set the default above range color."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlTheme.rst:85:<autosummary>:1
msgid ""
":py:obj:`allow_empty_mesh "
"<ansys.mapdl.core.plotting.MapdlTheme.allow_empty_mesh>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlTheme.rst:85:<autosummary>:1
msgid "Return or set whether to allow plotting empty meshes."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlTheme.rst:85:<autosummary>:1
msgid ""
":py:obj:`anti_aliasing "
"<ansys.mapdl.core.plotting.MapdlTheme.anti_aliasing>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlTheme.rst:85:<autosummary>:1
msgid "Enable or disable anti-aliasing."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlTheme.rst:85:<autosummary>:1
msgid ":py:obj:`auto_close <ansys.mapdl.core.plotting.MapdlTheme.auto_close>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlTheme.rst:85:<autosummary>:1
msgid "Automatically close the figures when finished plotting."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlTheme.rst:85:<autosummary>:1
msgid ":py:obj:`axes <ansys.mapdl.core.plotting.MapdlTheme.axes>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlTheme.rst:85:<autosummary>:1
msgid "Return or set the default ``axes`` configuration."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlTheme.rst:85:<autosummary>:1
msgid ":py:obj:`background <ansys.mapdl.core.plotting.MapdlTheme.background>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlTheme.rst:85:<autosummary>:1
msgid "Return or set the default background color of pyvista plots."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlTheme.rst:85:<autosummary>:1
msgid ""
":py:obj:`before_close_callback "
"<ansys.mapdl.core.plotting.MapdlTheme.before_close_callback>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlTheme.rst:85:<autosummary>:1
msgid "Return the default before_close_callback function for Plotter."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlTheme.rst:85:<autosummary>:1
msgid ""
":py:obj:`below_range_color "
"<ansys.mapdl.core.plotting.MapdlTheme.below_range_color>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlTheme.rst:85:<autosummary>:1
msgid "Return or set the default below range color."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlTheme.rst:85:<autosummary>:1
msgid ":py:obj:`camera <ansys.mapdl.core.plotting.MapdlTheme.camera>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlTheme.rst:85:<autosummary>:1
msgid "Return or set the default camera position."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlTheme.rst:85:<autosummary>:1
msgid ":py:obj:`cmap <ansys.mapdl.core.plotting.MapdlTheme.cmap>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlTheme.rst:85:<autosummary>:1
msgid "Return or set the default colormap of pyvista."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlTheme.rst:85:<autosummary>:1
msgid ":py:obj:`color <ansys.mapdl.core.plotting.MapdlTheme.color>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlTheme.rst:85:<autosummary>:1
msgid "Return or set the default color of meshes in pyvista."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlTheme.rst:85:<autosummary>:1
msgid ""
":py:obj:`color_cycler <ansys.mapdl.core.plotting.MapdlTheme.color_cycler>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlTheme.rst:85:<autosummary>:1
msgid "Return or set the default color cycler used to color meshes."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlTheme.rst:85:<autosummary>:1
msgid ""
":py:obj:`colorbar_horizontal "
"<ansys.mapdl.core.plotting.MapdlTheme.colorbar_horizontal>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlTheme.rst:85:<autosummary>:1
msgid "Return or set the default parameters of a horizontal colorbar."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlTheme.rst:85:<autosummary>:1
msgid ""
":py:obj:`colorbar_orientation "
"<ansys.mapdl.core.plotting.MapdlTheme.colorbar_orientation>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlTheme.rst:85:<autosummary>:1
msgid "Return or set the default colorbar orientation."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlTheme.rst:85:<autosummary>:1
msgid ""
":py:obj:`colorbar_vertical "
"<ansys.mapdl.core.plotting.MapdlTheme.colorbar_vertical>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlTheme.rst:85:<autosummary>:1
msgid "Return or set the default parameters of a vertical colorbar."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlTheme.rst:85:<autosummary>:1
msgid ""
":py:obj:`depth_peeling "
"<ansys.mapdl.core.plotting.MapdlTheme.depth_peeling>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlTheme.rst:85:<autosummary>:1
msgid "Return or set the default depth peeling parameters."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlTheme.rst:85:<autosummary>:1
msgid ":py:obj:`edge_color <ansys.mapdl.core.plotting.MapdlTheme.edge_color>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlTheme.rst:85:<autosummary>:1
msgid "Return or set the default edge color."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlTheme.rst:85:<autosummary>:1
msgid ""
":py:obj:`edge_opacity <ansys.mapdl.core.plotting.MapdlTheme.edge_opacity>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlTheme.rst:85:<autosummary>:1
msgid "Return or set the edges opacity."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlTheme.rst:85:<autosummary>:1
msgid ""
":py:obj:`enable_camera_orientation_widget "
"<ansys.mapdl.core.plotting.MapdlTheme.enable_camera_orientation_widget>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlTheme.rst:85:<autosummary>:1
msgid "Enable the camera orientation widget in all plotters."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlTheme.rst:85:<autosummary>:1
msgid ""
":py:obj:`floor_color <ansys.mapdl.core.plotting.MapdlTheme.floor_color>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlTheme.rst:85:<autosummary>:1
msgid "Return or set the default floor color."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlTheme.rst:85:<autosummary>:1
msgid ":py:obj:`font <ansys.mapdl.core.plotting.MapdlTheme.font>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlTheme.rst:85:<autosummary>:1
msgid "Return or set the default font size, family, and/or color."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlTheme.rst:85:<autosummary>:1
msgid ""
":py:obj:`full_screen <ansys.mapdl.core.plotting.MapdlTheme.full_screen>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlTheme.rst:85:<autosummary>:1
msgid "Return if figures are shown in full screen."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlTheme.rst:85:<autosummary>:1
msgid ""
":py:obj:`hidden_line_removal "
"<ansys.mapdl.core.plotting.MapdlTheme.hidden_line_removal>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlTheme.rst:85:<autosummary>:1
msgid "Return or set hidden line removal."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlTheme.rst:85:<autosummary>:1
msgid ""
":py:obj:`image_scale <ansys.mapdl.core.plotting.MapdlTheme.image_scale>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlTheme.rst:85:<autosummary>:1
msgid "Return or set the default image scale factor."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlTheme.rst:85:<autosummary>:1
msgid ""
":py:obj:`interactive <ansys.mapdl.core.plotting.MapdlTheme.interactive>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlTheme.rst:85:<autosummary>:1
msgid "Return or set the default ``interactive`` parameter."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlTheme.rst:85:<autosummary>:1
msgid ""
":py:obj:`interpolate_before_map "
"<ansys.mapdl.core.plotting.MapdlTheme.interpolate_before_map>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlTheme.rst:85:<autosummary>:1
msgid "Return or set whether to interpolate colors before mapping."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlTheme.rst:85:<autosummary>:1
msgid ""
":py:obj:`jupyter_backend "
"<ansys.mapdl.core.plotting.MapdlTheme.jupyter_backend>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlTheme.rst:85:<autosummary>:1
msgid "Return or set the jupyter notebook plotting backend."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlTheme.rst:85:<autosummary>:1
msgid ":py:obj:`lighting <ansys.mapdl.core.plotting.MapdlTheme.lighting>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlTheme.rst:85:<autosummary>:1
msgid "Return or set the default ``lighting``."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlTheme.rst:85:<autosummary>:1
msgid ""
":py:obj:`lighting_params "
"<ansys.mapdl.core.plotting.MapdlTheme.lighting_params>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlTheme.rst:85:<autosummary>:1
msgid "Return or set the default lighting configuration."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlTheme.rst:85:<autosummary>:1
msgid ":py:obj:`line_width <ansys.mapdl.core.plotting.MapdlTheme.line_width>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlTheme.rst:85:<autosummary>:1
msgid "Return or set the default line width."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlTheme.rst:85:<autosummary>:1
msgid ":py:obj:`logo_file <ansys.mapdl.core.plotting.MapdlTheme.logo_file>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlTheme.rst:85:<autosummary>:1
msgid "Return or set the logo file."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlTheme.rst:85:<autosummary>:1
msgid ""
":py:obj:`multi_rendering_splitting_position "
"<ansys.mapdl.core.plotting.MapdlTheme.multi_rendering_splitting_position>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlTheme.rst:85:<autosummary>:1
msgid ""
"Return or set the default ``multi_rendering_splitting_position`` parameter."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlTheme.rst:85:<autosummary>:1
msgid ""
":py:obj:`multi_samples "
"<ansys.mapdl.core.plotting.MapdlTheme.multi_samples>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlTheme.rst:85:<autosummary>:1
msgid "Return or set the default ``multi_samples`` parameter."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlTheme.rst:85:<autosummary>:1
msgid ":py:obj:`name <ansys.mapdl.core.plotting.MapdlTheme.name>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlTheme.rst:85:<autosummary>:1
msgid "Return or set the name of the theme."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlTheme.rst:85:<autosummary>:1
msgid ":py:obj:`nan_color <ansys.mapdl.core.plotting.MapdlTheme.nan_color>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlTheme.rst:85:<autosummary>:1
msgid "Return or set the default NaN color."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlTheme.rst:85:<autosummary>:1
msgid ":py:obj:`notebook <ansys.mapdl.core.plotting.MapdlTheme.notebook>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlTheme.rst:85:<autosummary>:1
msgid "Return or set the state of notebook plotting."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlTheme.rst:85:<autosummary>:1
msgid ":py:obj:`opacity <ansys.mapdl.core.plotting.MapdlTheme.opacity>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlTheme.rst:85:<autosummary>:1
msgid "Return or set the opacity."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlTheme.rst:85:<autosummary>:1
msgid ""
":py:obj:`outline_color "
"<ansys.mapdl.core.plotting.MapdlTheme.outline_color>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlTheme.rst:85:<autosummary>:1
msgid "Return or set the default outline color."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlTheme.rst:85:<autosummary>:1
msgid ":py:obj:`point_size <ansys.mapdl.core.plotting.MapdlTheme.point_size>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlTheme.rst:85:<autosummary>:1
msgid "Return or set the default point size."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlTheme.rst:85:<autosummary>:1
msgid ""
":py:obj:`render_lines_as_tubes "
"<ansys.mapdl.core.plotting.MapdlTheme.render_lines_as_tubes>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlTheme.rst:85:<autosummary>:1
msgid "Return or set the default ``render_lines_as_tubes`` parameter."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlTheme.rst:85:<autosummary>:1
msgid ""
":py:obj:`render_points_as_spheres "
"<ansys.mapdl.core.plotting.MapdlTheme.render_points_as_spheres>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlTheme.rst:85:<autosummary>:1
msgid "Return or set the default ``render_points_as_spheres`` parameter."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlTheme.rst:85:<autosummary>:1
msgid ""
":py:obj:`return_cpos <ansys.mapdl.core.plotting.MapdlTheme.return_cpos>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlTheme.rst:85:<autosummary>:1
msgid "Return or set the default behavior of returning the camera position."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlTheme.rst:85:<autosummary>:1
msgid ""
":py:obj:`sharp_edges_feature_angle "
"<ansys.mapdl.core.plotting.MapdlTheme.sharp_edges_feature_angle>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlTheme.rst:85:<autosummary>:1
msgid "Set or return the angle of the sharp edges feature angle."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlTheme.rst:85:<autosummary>:1
msgid ":py:obj:`show_edges <ansys.mapdl.core.plotting.MapdlTheme.show_edges>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlTheme.rst:85:<autosummary>:1
msgid "Return or set the default edge visibility."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlTheme.rst:85:<autosummary>:1
msgid ""
":py:obj:`show_scalar_bar "
"<ansys.mapdl.core.plotting.MapdlTheme.show_scalar_bar>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlTheme.rst:85:<autosummary>:1
msgid "Return or set the default color bar visibility."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlTheme.rst:85:<autosummary>:1
msgid ""
":py:obj:`show_vertices "
"<ansys.mapdl.core.plotting.MapdlTheme.show_vertices>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlTheme.rst:85:<autosummary>:1
msgid "Return or set the default vertex visibility."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlTheme.rst:85:<autosummary>:1
msgid ":py:obj:`silhouette <ansys.mapdl.core.plotting.MapdlTheme.silhouette>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlTheme.rst:85:<autosummary>:1
msgid "Return or set the default ``silhouette`` configuration."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlTheme.rst:85:<autosummary>:1
msgid ""
":py:obj:`slider_styles "
"<ansys.mapdl.core.plotting.MapdlTheme.slider_styles>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlTheme.rst:85:<autosummary>:1
msgid "Return the default slider style configurations."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlTheme.rst:85:<autosummary>:1
msgid ""
":py:obj:`smooth_shading "
"<ansys.mapdl.core.plotting.MapdlTheme.smooth_shading>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlTheme.rst:85:<autosummary>:1
msgid "Return or set the default ``smooth_shading`` parameter."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlTheme.rst:85:<autosummary>:1
msgid ""
":py:obj:`split_sharp_edges "
"<ansys.mapdl.core.plotting.MapdlTheme.split_sharp_edges>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlTheme.rst:85:<autosummary>:1
msgid "Set or return splitting sharp edges."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlTheme.rst:85:<autosummary>:1
msgid ":py:obj:`title <ansys.mapdl.core.plotting.MapdlTheme.title>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlTheme.rst:85:<autosummary>:1
msgid "Return or set the default ``title`` parameter."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlTheme.rst:85:<autosummary>:1
msgid ":py:obj:`trame <ansys.mapdl.core.plotting.MapdlTheme.trame>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlTheme.rst:85:<autosummary>:1
msgid "Return or set the default trame parameters."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlTheme.rst:85:<autosummary>:1
msgid ""
":py:obj:`transparent_background "
"<ansys.mapdl.core.plotting.MapdlTheme.transparent_background>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlTheme.rst:85:<autosummary>:1
msgid "Return or set the default ``transparent_background`` parameter."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlTheme.rst:85:<autosummary>:1
msgid ""
":py:obj:`volume_mapper "
"<ansys.mapdl.core.plotting.MapdlTheme.volume_mapper>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlTheme.rst:85:<autosummary>:1
msgid "Return or set the default ``volume_mapper`` parameter."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlTheme.rst:85:<autosummary>:1
msgid ""
":py:obj:`window_size <ansys.mapdl.core.plotting.MapdlTheme.window_size>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.plotting.MapdlTheme.rst:85:<autosummary>:1
msgid "Return or set the default render window size."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.pool.MapdlPool.rst:2
msgid "ansys.mapdl.core.pool.MapdlPool"
msgstr ""

#: ../../pymapdl/doc/source/api/pool.rst:12:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/pool.pydocstring of
#: ansys.mapdl.core.pool.MapdlPool:2
msgid "Create a pool of MAPDL instances."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/pool.pydocstring of
#: ansys.mapdl.core.pool.MapdlPool:5
msgid "Requires MAPDL 2020 R2 or later."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/pool.pydocstring of
#: ansys.mapdl.core.pool.MapdlPool:9
msgid "**n_instances** : :class:`python:int`, :obj:`optional`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/pool.pydocstring of
#: ansys.mapdl.core.pool.MapdlPool:10
msgid ""
"Number of instances to create. This argument can be optional if the number "
"of instances can be inferred from the ``ip`` and/or ``port`` arguments. See "
"these arguments documentation for more information."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/pool.pydocstring of
#: ansys.mapdl.core.pool.MapdlPool:14
msgid "**wait** : :ref:`bool <python:bltin-boolean-values>`, :obj:`optional`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/pool.pydocstring of
#: ansys.mapdl.core.pool.MapdlPool:15
msgid ""
"Wait for pool to be initialized.  Otherwise, pool will start in the "
"background and all resources may not be available instantly."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/pool.pydocstring of
#: ansys.mapdl.core.pool.MapdlPool:19
msgid ""
"Base directory to create additional directories for each MAPDL instance.  "
"Defaults to a temporary working directory."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/pool.pydocstring of
#: ansys.mapdl.core.pool.MapdlPool:22
msgid ""
"**ip** : :class:`python:str`, :class:`python:list`\\[:class:`python:str`], "
":obj:`optional`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/pool.pydocstring of
#: ansys.mapdl.core.pool.MapdlPool:21
msgid "python:str, python:list[python:str], optional"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/pool.pydocstring of
#: ansys.mapdl.core.pool.MapdlPool:23
msgid ""
"IP address(es) to connect to where the MAPDL instances are running. You can "
"use one IP, if you have multiple instances running on it, but in that case "
"you must specify all the ports using the argument `port`. If using a list of"
" IPs, the number of ports in 'port' argument should match the number of IPs."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/pool.pydocstring of
#: ansys.mapdl.core.pool.MapdlPool:29
msgid ""
"**port** : :class:`python:int`, :class:`python:list`\\[:class:`python:int`],"
" :obj:`optional`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/pool.pydocstring of
#: ansys.mapdl.core.pool.MapdlPool:28
msgid "python:int, python:list[python:int], optional"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/pool.pydocstring of
#: ansys.mapdl.core.pool.MapdlPool:30
msgid ""
"The ports where the MAPDL instances are started on or can be connected to. "
"If you are connecting to a single remote instance (only one IP in ``ip`` "
"argument), you must specify a number of ports equal to the number of "
"instances you want to connect to. If you are connecting to multiple "
"instances (multiple IPs in ``ip`` argument), the amount of ports, should "
"match the number of IPs."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/pool.pydocstring of
#: ansys.mapdl.core.pool.MapdlPool:37
msgid ""
"If only one port is specified and you are starting the MAPDL instances "
"locally (``start_instance`` is ``True``), this port is the port for the "
"first instance. The rest of the instances ports are unitarian increments of "
"port, as long as these ports are free from other processes usage. If you are"
" not starting the MAPDL instances local, PyMAPDL does not check whether "
"these ports are busy or not. Defaults to 50052."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/pool.pydocstring of
#: ansys.mapdl.core.pool.MapdlPool:46
msgid ""
"Show a progress bar when starting the pool.  Defaults to ``True``.  Will not"
" be shown when ``wait=False``."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/pool.pydocstring of
#: ansys.mapdl.core.pool.MapdlPool:49
msgid ""
"**restart_failed** : :ref:`bool <python:bltin-boolean-values>`, "
":obj:`optional`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/pool.pydocstring of
#: ansys.mapdl.core.pool.MapdlPool:50
msgid "Restarts any failed instances in the pool. Defaults to ``True``."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/pool.pydocstring of
#: ansys.mapdl.core.pool.MapdlPool:53
msgid ""
"When ``run_location`` is ``None``, this launcher creates a new MAPDL working"
" directory within the user temporary directory, obtainable with "
"``tempfile.gettempdir()``. When this parameter is ``True``, this directory "
"will be deleted when MAPDL is exited. Default ``False``. If you change the "
"working directory, PyMAPDL does not delete the original working directory "
"nor the new one."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/pool.pydocstring of
#: ansys.mapdl.core.pool.MapdlPool:61
msgid "**names** : :class:`python:str`, :obj:`Callable`, :obj:`optional`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/pool.pydocstring of
#: ansys.mapdl.core.pool.MapdlPool:60
msgid "python:str, Callable, optional"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/pool.pydocstring of
#: ansys.mapdl.core.pool.MapdlPool:62
msgid ""
"You can specify the names of the directories where the instances are "
"created. A string or a function (callable) that accepts an integer and "
"return an string can be used. If you use a string, \"_{i}\" is appended to "
"that string, where \"i\" is the index of each instance in the pool. By "
"default, the instances directories are named as \"Instances_{i}\"."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/pool.pydocstring of
#: ansys.mapdl.core.pool.MapdlPool:69
msgid "**override: bool, optional**"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/pool.pydocstring of
#: ansys.mapdl.core.pool.MapdlPool:70
msgid ""
"Attempts to delete the lock file at the run_location. Useful when a prior "
"MAPDL session has exited prematurely and the lock file has not been deleted."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/pool.pydocstring of
#: ansys.mapdl.core.pool.MapdlPool:75
msgid ""
"Set it to ``False`` to make PyMAPDL to connect to remote instances instead "
"of launching them. In that case, you need to supply the MAPDL instances "
"ports as a list of ``int`` s."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/pool.pydocstring of
#: ansys.mapdl.core.pool.MapdlPool:79
msgid "**exec_file: str, optional**"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/pool.pydocstring of
#: ansys.mapdl.core.pool.MapdlPool:80
msgid ""
"The location of the MAPDL executable.  Will use the cached location when "
"left at the default ``None``."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/pool.pydocstring of
#: ansys.mapdl.core.pool.MapdlPool:83
msgid "**\\*\\*kwargs** : :class:`python:dict`, :obj:`optional`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/pool.pydocstring of
#: ansys.mapdl.core.pool.MapdlPool:84
msgid ""
"Additional keyword arguments. For a complete listing, see the description "
"for the :func:`ansys.mapdl.core.launcher.launch_mapdl` method."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/pool.pydocstring of
#: ansys.mapdl.core.pool.MapdlPool:102
msgid ""
"Simply create a pool of 10 instances to run in the temporary directory."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/pool.pydocstring of
#: ansys.mapdl.core.pool.MapdlPool:109
msgid ""
"Create several instances with 1 CPU each running at the current directory "
"within their own isolated directories."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/pool.pydocstring of
#: ansys.mapdl.core.pool.MapdlPool:117
msgid "Create a pool while specifying the MAPDL executable in Windows."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/pool.pydocstring of
#: ansys.mapdl.core.pool.MapdlPool:123
msgid "Create a pool while specifying the MAPDL executable in Linux."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/pool.pydocstring of
#: ansys.mapdl.core.pool.MapdlPool:129
msgid ""
"Create a pool of instances in multiple instances and with different ports:"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.pool.MapdlPool.rst:28:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/pool.pydocstring of
#: ansys.mapdl.core.pool.MapdlPool.__init__:2
msgid "Initialize several instances of mapdl"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.pool.MapdlPool.rst:28:<autosummary>:1
msgid ""
":py:obj:`__init__ <ansys.mapdl.core.pool.MapdlPool.__init__>`\\ "
"\\(\\[n\\_instances\\, wait\\, run\\_location\\, ...\\]\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.pool.MapdlPool.rst:28:<autosummary>:1
msgid ":py:obj:`exit <ansys.mapdl.core.pool.MapdlPool.exit>`\\ \\(\\[block\\]\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.pool.MapdlPool.rst:28:<autosummary>:1
msgid "Close out all instances in the pool."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.pool.MapdlPool.rst:28:<autosummary>:1
msgid ""
":py:obj:`is_initialized <ansys.mapdl.core.pool.MapdlPool.is_initialized>`\\ "
"\\(index\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.pool.MapdlPool.rst:28:<autosummary>:1
msgid "Check if the instance is initialized"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.pool.MapdlPool.rst:28:<autosummary>:1
msgid ""
":py:obj:`map <ansys.mapdl.core.pool.MapdlPool.map>`\\ \\(func\\[\\, "
"iterable\\, progress\\_bar\\, ...\\]\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.pool.MapdlPool.rst:28:<autosummary>:1
msgid "Run a function for each instance of mapdl within the pool."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.pool.MapdlPool.rst:28:<autosummary>:1
msgid ":py:obj:`next <ansys.mapdl.core.pool.MapdlPool.next>`\\ \\(\\[return\\_index\\]\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.pool.MapdlPool.rst:28:<autosummary>:1
msgid "Return a context manager that returns available instances."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.pool.MapdlPool.rst:28:<autosummary>:1
msgid ""
":py:obj:`next_available <ansys.mapdl.core.pool.MapdlPool.next_available>`\\ "
"\\(\\[return\\_index\\, as\\_ctx\\]\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.pool.MapdlPool.rst:28:<autosummary>:1
msgid "Wait until an instance of MAPDL is available and return that instance."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.pool.MapdlPool.rst:28:<autosummary>:1
msgid ""
":py:obj:`run_batch <ansys.mapdl.core.pool.MapdlPool.run_batch>`\\ "
"\\(files\\[\\, clear\\_at\\_start\\, ...\\]\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.pool.MapdlPool.rst:28:<autosummary>:1
msgid "Run a batch of input files on the pool."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.pool.MapdlPool.rst:28:<autosummary>:1
msgid ""
":py:obj:`wait_for_ready <ansys.mapdl.core.pool.MapdlPool.wait_for_ready>`\\ "
"\\(\\[timeout\\]\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.pool.MapdlPool.rst:28:<autosummary>:1
msgid "Wait until pool is ready."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.pool.MapdlPool.rst:33:<autosummary>:1
msgid ":py:obj:`ready <ansys.mapdl.core.pool.MapdlPool.ready>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.pool.MapdlPool.rst:33:<autosummary>:1
msgid "Return true if all the instances are ready (not exited)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:2
msgid "ansys.mapdl.core.post.PostProcessing"
msgstr ""

#: ../../pymapdl/doc/source/api/post.rst:21:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/post.pydocstring of
#: ansys.mapdl.core.post.PostProcessing:2
msgid "Post-processing using an active MAPDL session"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/post.pydocstring of
#: ansys.mapdl.core.post.PostProcessing:20
msgid "Get all the time values after loading POST1."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/post.pydocstring of
#: ansys.mapdl.core.post.PostProcessing:31
msgid "Return the number of data sets in the result file."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/post.pydocstring of
#: ansys.mapdl.core.post.PostProcessing:36
msgid "Plot the thermal equivalent strain for the second result."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/post.pydocstring of
#: ansys.mapdl.core.post.PostProcessing:42
msgid "Nodal rotation in all dimensions for current result."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/post.pydocstring of
#: ansys.mapdl.core.post.PostProcessing:55
msgid "Nodes corresponding to the nodal rotations."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:83:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/post.pydocstring of
#: ansys.mapdl.core.post.PostProcessing.__init__:2
msgid "Initialize postprocessing instance"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:83:<autosummary>:1
msgid ""
":py:obj:`__init__ <ansys.mapdl.core.post.PostProcessing.__init__>`\\ "
"\\(mapdl\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:83:<autosummary>:1
msgid ""
":py:obj:`element_displacement "
"<ansys.mapdl.core.post.PostProcessing.element_displacement>`\\ "
"\\(\\[component\\, option\\]\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:83:<autosummary>:1
msgid "Return element displacement."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:83:<autosummary>:1
msgid ""
":py:obj:`element_stress "
"<ansys.mapdl.core.post.PostProcessing.element_stress>`\\ \\(component\\[\\, "
"option\\]\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:83:<autosummary>:1
msgid "Return element component or principal stress."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:83:<autosummary>:1
msgid ""
":py:obj:`element_temperature "
"<ansys.mapdl.core.post.PostProcessing.element_temperature>`\\ "
"\\(\\[option\\]\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:83:<autosummary>:1
msgid "Return element temperature."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:83:<autosummary>:1
msgid ""
":py:obj:`element_values "
"<ansys.mapdl.core.post.PostProcessing.element_values>`\\ \\(item\\[\\, "
"comp\\, option\\]\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:83:<autosummary>:1
msgid "Compute the element-wise values for a given item and component."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:83:<autosummary>:1
msgid ""
":py:obj:`nodal_component_stress "
"<ansys.mapdl.core.post.PostProcessing.nodal_component_stress>`\\ "
"\\(component\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:83:<autosummary>:1
msgid "Nodal component stress."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:83:<autosummary>:1
msgid ""
":py:obj:`nodal_contact_friction_stress "
"<ansys.mapdl.core.post.PostProcessing.nodal_contact_friction_stress>`\\ "
"\\(\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:83:<autosummary>:1
msgid "Nodal contact friction stress of the current result."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:83:<autosummary>:1
msgid ""
":py:obj:`nodal_displacement "
"<ansys.mapdl.core.post.PostProcessing.nodal_displacement>`\\ "
"\\(\\[component\\]\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:83:<autosummary>:1
msgid "Nodal X, Y, or Z structural displacement."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:83:<autosummary>:1
msgid ""
":py:obj:`nodal_elastic_component_strain "
"<ansys.mapdl.core.post.PostProcessing.nodal_elastic_component_strain>`\\ "
"\\(component\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:83:<autosummary>:1
msgid "Elastic nodal component strain"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:83:<autosummary>:1
msgid ""
":py:obj:`nodal_elastic_eqv_strain "
"<ansys.mapdl.core.post.PostProcessing.nodal_elastic_eqv_strain>`\\ \\(\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:83:<autosummary>:1
msgid "The elastic nodal equivalent strain of the current result."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:83:<autosummary>:1
msgid ""
":py:obj:`nodal_elastic_principal_strain "
"<ansys.mapdl.core.post.PostProcessing.nodal_elastic_principal_strain>`\\ "
"\\(component\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:83:<autosummary>:1
msgid "Nodal elastic principal elastic strain."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:83:<autosummary>:1
msgid ""
":py:obj:`nodal_elastic_strain_intensity "
"<ansys.mapdl.core.post.PostProcessing.nodal_elastic_strain_intensity>`\\ "
"\\(\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:83:<autosummary>:1
msgid "The elastic nodal strain intensity of the current result."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:83:<autosummary>:1
msgid ""
":py:obj:`nodal_eqv_stress "
"<ansys.mapdl.core.post.PostProcessing.nodal_eqv_stress>`\\ \\(\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:83:<autosummary>:1
msgid "The nodal equivalent stress of the current result."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:83:<autosummary>:1
msgid ""
":py:obj:`nodal_plastic_component_strain "
"<ansys.mapdl.core.post.PostProcessing.nodal_plastic_component_strain>`\\ "
"\\(component\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:83:<autosummary>:1
msgid "Plastic nodal component strain."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:83:<autosummary>:1
msgid ""
":py:obj:`nodal_plastic_eqv_strain "
"<ansys.mapdl.core.post.PostProcessing.nodal_plastic_eqv_strain>`\\ \\(\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:83:<autosummary>:1
msgid "The plastic nodal equivalent strain of the current result."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:83:<autosummary>:1
msgid ""
":py:obj:`nodal_plastic_principal_strain "
"<ansys.mapdl.core.post.PostProcessing.nodal_plastic_principal_strain>`\\ "
"\\(component\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:83:<autosummary>:1
msgid "Nodal plastic principal plastic strain."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:83:<autosummary>:1
msgid ""
":py:obj:`nodal_plastic_strain_intensity "
"<ansys.mapdl.core.post.PostProcessing.nodal_plastic_strain_intensity>`\\ "
"\\(\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:83:<autosummary>:1
msgid "The plastic nodal strain intensity of the current result."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:83:<autosummary>:1
msgid ""
":py:obj:`nodal_pressure "
"<ansys.mapdl.core.post.PostProcessing.nodal_pressure>`\\ \\(\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:83:<autosummary>:1
msgid "The nodal pressure of the current result."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:83:<autosummary>:1
msgid ""
":py:obj:`nodal_principal_stress "
"<ansys.mapdl.core.post.PostProcessing.nodal_principal_stress>`\\ "
"\\(component\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:83:<autosummary>:1
msgid "Nodal principal stress."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:83:<autosummary>:1
msgid ""
":py:obj:`nodal_rotation "
"<ansys.mapdl.core.post.PostProcessing.nodal_rotation>`\\ "
"\\(\\[component\\]\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:83:<autosummary>:1
msgid "Nodal X, Y, or Z structural rotation"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:83:<autosummary>:1
msgid ""
":py:obj:`nodal_stress_intensity "
"<ansys.mapdl.core.post.PostProcessing.nodal_stress_intensity>`\\ \\(\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:83:<autosummary>:1
msgid "The nodal stress intensity of the current result."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:83:<autosummary>:1
msgid ""
":py:obj:`nodal_temperature "
"<ansys.mapdl.core.post.PostProcessing.nodal_temperature>`\\ \\(\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:83:<autosummary>:1
msgid "The nodal temperature of the current result."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:83:<autosummary>:1
msgid ""
":py:obj:`nodal_thermal_component_strain "
"<ansys.mapdl.core.post.PostProcessing.nodal_thermal_component_strain>`\\ "
"\\(component\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:83:<autosummary>:1
msgid "Thermal nodal component strain"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:83:<autosummary>:1
msgid ""
":py:obj:`nodal_thermal_eqv_strain "
"<ansys.mapdl.core.post.PostProcessing.nodal_thermal_eqv_strain>`\\ \\(\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:83:<autosummary>:1
msgid "The thermal nodal equivalent strain of the current result."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:83:<autosummary>:1
msgid ""
":py:obj:`nodal_thermal_principal_strain "
"<ansys.mapdl.core.post.PostProcessing.nodal_thermal_principal_strain>`\\ "
"\\(component\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:83:<autosummary>:1
msgid "Nodal thermal principal thermal strain."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:83:<autosummary>:1
msgid ""
":py:obj:`nodal_thermal_strain_intensity "
"<ansys.mapdl.core.post.PostProcessing.nodal_thermal_strain_intensity>`\\ "
"\\(\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:83:<autosummary>:1
msgid "The thermal nodal strain intensity of the current result."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:83:<autosummary>:1
msgid ""
":py:obj:`nodal_total_component_strain "
"<ansys.mapdl.core.post.PostProcessing.nodal_total_component_strain>`\\ "
"\\(component\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:83:<autosummary>:1
msgid "Total nodal component strain"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:83:<autosummary>:1
msgid ""
":py:obj:`nodal_total_eqv_strain "
"<ansys.mapdl.core.post.PostProcessing.nodal_total_eqv_strain>`\\ \\(\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:83:<autosummary>:1
msgid "The total nodal equivalent strain of the current result."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:83:<autosummary>:1
msgid ""
":py:obj:`nodal_total_principal_strain "
"<ansys.mapdl.core.post.PostProcessing.nodal_total_principal_strain>`\\ "
"\\(component\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:83:<autosummary>:1
msgid "Total nodal principal total strain."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:83:<autosummary>:1
msgid ""
":py:obj:`nodal_total_strain_intensity "
"<ansys.mapdl.core.post.PostProcessing.nodal_total_strain_intensity>`\\ "
"\\(\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:83:<autosummary>:1
msgid "The total nodal strain intensity of the current result."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:83:<autosummary>:1
msgid ""
":py:obj:`nodal_values <ansys.mapdl.core.post.PostProcessing.nodal_values>`\\"
" \\(item\\[\\, comp\\]\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:83:<autosummary>:1
msgid "Obtain the nodal values for a given item and component."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:83:<autosummary>:1
msgid ""
":py:obj:`nodal_voltage "
"<ansys.mapdl.core.post.PostProcessing.nodal_voltage>`\\ \\(\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:83:<autosummary>:1
msgid "The nodal voltage of the current result."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:83:<autosummary>:1
msgid ""
":py:obj:`plot_element_displacement "
"<ansys.mapdl.core.post.PostProcessing.plot_element_displacement>`\\ "
"\\(\\[component\\, ...\\]\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:83:<autosummary>:1
msgid "Plot element displacement."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:83:<autosummary>:1
msgid ""
":py:obj:`plot_element_stress "
"<ansys.mapdl.core.post.PostProcessing.plot_element_stress>`\\ "
"\\(component\\[\\, option\\, ...\\]\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:83:<autosummary>:1
msgid "Plot element component or principal stress."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:83:<autosummary>:1
msgid ""
":py:obj:`plot_element_temperature "
"<ansys.mapdl.core.post.PostProcessing.plot_element_temperature>`\\ "
"\\(\\[option\\, ...\\]\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:83:<autosummary>:1
msgid "Plot element temperature."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:83:<autosummary>:1
msgid ""
":py:obj:`plot_element_values "
"<ansys.mapdl.core.post.PostProcessing.plot_element_values>`\\ \\(item\\, "
"comp\\[\\, option\\, ...\\]\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:83:<autosummary>:1
msgid "Plot element values."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:83:<autosummary>:1
msgid ""
":py:obj:`plot_nodal_component_stress "
"<ansys.mapdl.core.post.PostProcessing.plot_nodal_component_stress>`\\ "
"\\(component\\[\\, ...\\]\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:83:<autosummary>:1
msgid "Plot nodal component stress."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:83:<autosummary>:1
msgid ""
":py:obj:`plot_nodal_contact_friction_stress "
"<ansys.mapdl.core.post.PostProcessing.plot_nodal_contact_friction_stress>`\\"
" \\(\\[...\\]\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:83:<autosummary>:1
msgid "Plot the nodal contact friction stress of the current result."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:83:<autosummary>:1
msgid ""
":py:obj:`plot_nodal_displacement "
"<ansys.mapdl.core.post.PostProcessing.plot_nodal_displacement>`\\ "
"\\(\\[component\\, ...\\]\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:83:<autosummary>:1
msgid "Plot nodal displacement"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:83:<autosummary>:1
msgid ""
":py:obj:`plot_nodal_elastic_component_strain "
"<ansys.mapdl.core.post.PostProcessing.plot_nodal_elastic_component_strain>`\\"
" \\(component\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:83:<autosummary>:1
msgid "Plot nodal elastic component strain."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:83:<autosummary>:1
msgid ""
":py:obj:`plot_nodal_elastic_eqv_strain "
"<ansys.mapdl.core.post.PostProcessing.plot_nodal_elastic_eqv_strain>`\\ "
"\\(\\[...\\]\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:83:<autosummary>:1
msgid "Plot the elastic nodal equivalent strain of the current result."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:83:<autosummary>:1
msgid ""
":py:obj:`plot_nodal_elastic_principal_strain "
"<ansys.mapdl.core.post.PostProcessing.plot_nodal_elastic_principal_strain>`\\"
" \\(component\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:83:<autosummary>:1
msgid "Plot elastic nodal principal strain."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:83:<autosummary>:1
msgid ""
":py:obj:`plot_nodal_elastic_strain_intensity "
"<ansys.mapdl.core.post.PostProcessing.plot_nodal_elastic_strain_intensity>`\\"
" \\(\\[...\\]\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:83:<autosummary>:1
msgid "Plot the elastic nodal strain intensity of the current result."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:83:<autosummary>:1
msgid ""
":py:obj:`plot_nodal_eqv_stress "
"<ansys.mapdl.core.post.PostProcessing.plot_nodal_eqv_stress>`\\ "
"\\(\\[show\\_node\\_numbering\\]\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:83:<autosummary>:1
msgid "Plot nodal equivalent stress of the current result."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:83:<autosummary>:1
msgid ""
":py:obj:`plot_nodal_plastic_component_strain "
"<ansys.mapdl.core.post.PostProcessing.plot_nodal_plastic_component_strain>`\\"
" \\(component\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:83:<autosummary>:1
msgid "Plot nodal plastic component strain."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:83:<autosummary>:1
msgid ""
":py:obj:`plot_nodal_plastic_eqv_strain "
"<ansys.mapdl.core.post.PostProcessing.plot_nodal_plastic_eqv_strain>`\\ "
"\\(\\[...\\]\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:83:<autosummary>:1
msgid "Plot the plastic nodal equivalent strain of the current result."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:83:<autosummary>:1
msgid ""
":py:obj:`plot_nodal_plastic_principal_strain "
"<ansys.mapdl.core.post.PostProcessing.plot_nodal_plastic_principal_strain>`\\"
" \\(component\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:83:<autosummary>:1
msgid "Plot plastic nodal principal strain."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:83:<autosummary>:1
msgid ""
":py:obj:`plot_nodal_plastic_strain_intensity "
"<ansys.mapdl.core.post.PostProcessing.plot_nodal_plastic_strain_intensity>`\\"
" \\(\\[...\\]\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:83:<autosummary>:1
msgid "Plot the plastic nodal strain intensity of the current result."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:83:<autosummary>:1
msgid ""
":py:obj:`plot_nodal_pressure "
"<ansys.mapdl.core.post.PostProcessing.plot_nodal_pressure>`\\ "
"\\(\\[show\\_node\\_numbering\\]\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:83:<autosummary>:1
msgid "Plot nodal pressure of the current result."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:83:<autosummary>:1
msgid ""
":py:obj:`plot_nodal_principal_stress "
"<ansys.mapdl.core.post.PostProcessing.plot_nodal_principal_stress>`\\ "
"\\(component\\[\\, ...\\]\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:83:<autosummary>:1
msgid "Plot nodal principal stress."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:83:<autosummary>:1
msgid ""
":py:obj:`plot_nodal_rotation "
"<ansys.mapdl.core.post.PostProcessing.plot_nodal_rotation>`\\ "
"\\(component\\[\\, ...\\]\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:83:<autosummary>:1
msgid "Plot nodal rotation."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:83:<autosummary>:1
msgid ""
":py:obj:`plot_nodal_stress_intensity "
"<ansys.mapdl.core.post.PostProcessing.plot_nodal_stress_intensity>`\\ "
"\\(\\[...\\]\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:83:<autosummary>:1
msgid "Plot the nodal stress intensity of the current result."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:83:<autosummary>:1
msgid ""
":py:obj:`plot_nodal_temperature "
"<ansys.mapdl.core.post.PostProcessing.plot_nodal_temperature>`\\ "
"\\(\\[show\\_node\\_numbering\\]\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:83:<autosummary>:1
msgid "Plot nodal temperature of the current result."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:83:<autosummary>:1
msgid ""
":py:obj:`plot_nodal_thermal_component_strain "
"<ansys.mapdl.core.post.PostProcessing.plot_nodal_thermal_component_strain>`\\"
" \\(component\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:83:<autosummary>:1
msgid "Plot nodal thermal component strain."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:83:<autosummary>:1
msgid ""
":py:obj:`plot_nodal_thermal_eqv_strain "
"<ansys.mapdl.core.post.PostProcessing.plot_nodal_thermal_eqv_strain>`\\ "
"\\(\\[...\\]\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:83:<autosummary>:1
msgid "Plot the thermal nodal equivalent strain of the current result."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:83:<autosummary>:1
msgid ""
":py:obj:`plot_nodal_thermal_principal_strain "
"<ansys.mapdl.core.post.PostProcessing.plot_nodal_thermal_principal_strain>`\\"
" \\(component\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:83:<autosummary>:1
msgid "Plot thermal nodal principal strain."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:83:<autosummary>:1
msgid ""
":py:obj:`plot_nodal_thermal_strain_intensity "
"<ansys.mapdl.core.post.PostProcessing.plot_nodal_thermal_strain_intensity>`\\"
" \\(\\[...\\]\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:83:<autosummary>:1
msgid "Plot the thermal nodal strain intensity of the current result."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:83:<autosummary>:1
msgid ""
":py:obj:`plot_nodal_total_component_strain "
"<ansys.mapdl.core.post.PostProcessing.plot_nodal_total_component_strain>`\\ "
"\\(component\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:83:<autosummary>:1
msgid "Plot nodal total component starin."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:83:<autosummary>:1
msgid ""
":py:obj:`plot_nodal_total_eqv_strain "
"<ansys.mapdl.core.post.PostProcessing.plot_nodal_total_eqv_strain>`\\ "
"\\(\\[...\\]\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:83:<autosummary>:1
msgid "Plot the total nodal equivalent strain of the current result."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:83:<autosummary>:1
msgid ""
":py:obj:`plot_nodal_total_principal_strain "
"<ansys.mapdl.core.post.PostProcessing.plot_nodal_total_principal_strain>`\\ "
"\\(component\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:83:<autosummary>:1
msgid "Plot total nodal principal strain."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:83:<autosummary>:1
msgid ""
":py:obj:`plot_nodal_total_strain_intensity "
"<ansys.mapdl.core.post.PostProcessing.plot_nodal_total_strain_intensity>`\\ "
"\\(\\[...\\]\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:83:<autosummary>:1
msgid "Plot the total nodal strain intensity of the current result."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:83:<autosummary>:1
msgid ""
":py:obj:`plot_nodal_values "
"<ansys.mapdl.core.post.PostProcessing.plot_nodal_values>`\\ \\(item\\, "
"comp\\[\\, ...\\]\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:83:<autosummary>:1
msgid "Plot nodal values"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:83:<autosummary>:1
msgid ""
":py:obj:`plot_nodal_voltage "
"<ansys.mapdl.core.post.PostProcessing.plot_nodal_voltage>`\\ "
"\\(\\[show\\_node\\_numbering\\]\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:83:<autosummary>:1
msgid "Plot nodal voltage of the current result."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:98:<autosummary>:1
msgid ":py:obj:`filename <ansys.mapdl.core.post.PostProcessing.filename>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:98:<autosummary>:1
msgid "Return the current result file name without extension."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:98:<autosummary>:1
msgid ":py:obj:`freq <ansys.mapdl.core.post.PostProcessing.freq>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:98:<autosummary>:1
msgid "Freqneyc associated with current result in the database."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:98:<autosummary>:1
msgid ""
":py:obj:`frequency_values "
"<ansys.mapdl.core.post.PostProcessing.frequency_values>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:98:<autosummary>:1
msgid "Return an array of the frequency values for all result sets."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:98:<autosummary>:1
msgid ":py:obj:`load_step <ansys.mapdl.core.post.PostProcessing.load_step>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:98:<autosummary>:1
msgid "Current load step number"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:98:<autosummary>:1
msgid ":py:obj:`nsets <ansys.mapdl.core.post.PostProcessing.nsets>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:98:<autosummary>:1
msgid "Number of data sets on result file."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:98:<autosummary>:1
msgid ""
":py:obj:`selected_elements "
"<ansys.mapdl.core.post.PostProcessing.selected_elements>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:98:<autosummary>:1
msgid "Mask of the selected elements."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:98:<autosummary>:1
msgid ""
":py:obj:`selected_nodes "
"<ansys.mapdl.core.post.PostProcessing.selected_nodes>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:98:<autosummary>:1
msgid "Mask of the selected nodes."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:98:<autosummary>:1
msgid ":py:obj:`step <ansys.mapdl.core.post.PostProcessing.step>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:98:<autosummary>:1
msgid "Current step number"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:98:<autosummary>:1
msgid ":py:obj:`sub_step <ansys.mapdl.core.post.PostProcessing.sub_step>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:98:<autosummary>:1
msgid "Current sub step number"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:98:<autosummary>:1
msgid ":py:obj:`time <ansys.mapdl.core.post.PostProcessing.time>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:98:<autosummary>:1
msgid "Time associated with current result in the database."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:98:<autosummary>:1
msgid ""
":py:obj:`time_values <ansys.mapdl.core.post.PostProcessing.time_values>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.post.PostProcessing.rst:98:<autosummary>:1
msgid "Return an array of the time values for all result sets."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.solution.Solution.rst:2
msgid "ansys.mapdl.core.solution.Solution"
msgstr ""

#: ../../pymapdl/doc/source/api/solution.rst:13:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/solution.pydocstring of
#: ansys.mapdl.core.solution.Solution:2
msgid "Collection of parameters specific to the solution."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/solution.pydocstring of
#: ansys.mapdl.core.solution.Solution:4
msgid ""
"Useful for checking the status of a solve after running ``mapdl.solve()`` "
"and determining if it converged, the number of iterations to converge, etc."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/solution.pydocstring of
#: ansys.mapdl.core.solution.Solution:8
msgid ""
"If the ``mapdl.solution()`` class is called, it activates the solution "
"processor."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/solution.pydocstring of
#: ansys.mapdl.core.solution.Solution:25
msgid ""
"Enter the solution processor (equivalent of the :meth:`Mapdl.slashsolu "
"<ansys.mapdl.core.Mapdl.slashsolu>` command)."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/solution.pydocstring of
#: ansys.mapdl.core.solution.Solution:31
msgid "Check if a solution has converged."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/solution.pydocstring of
#: ansys.mapdl.core.solution.Solution:36
msgid "Get the cumulative number of iterations."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.solution.Solution.rst:21:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/solution.pydocstring of
#: ansys.mapdl.core.solution.Solution.__init__:2
msgid "Solution manager"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/solution.pydocstring of
#: ansys.mapdl.core.solution.Solution.__init__:4
msgid ""
"Class to help to manage the solution configuration in an :class:`Mapdl "
"instance <ansys.mapdl.core.Mapdl>` instance."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.solution.Solution.rst:21:<autosummary>:1
msgid ""
":py:obj:`__init__ <ansys.mapdl.core.solution.Solution.__init__>`\\ "
"\\(mapdl\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.solution.Solution.rst:53:<autosummary>:1
msgid ":py:obj:`converged <ansys.mapdl.core.solution.Solution.converged>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.solution.Solution.rst:53:<autosummary>:1
msgid "Convergence indicator."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.solution.Solution.rst:53:<autosummary>:1
msgid ":py:obj:`current_cnv <ansys.mapdl.core.solution.Solution.current_cnv>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.solution.Solution.rst:53:<autosummary>:1
msgid "Current convergence value."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.solution.Solution.rst:53:<autosummary>:1
msgid ""
":py:obj:`current_segment_cnv "
"<ansys.mapdl.core.solution.Solution.current_segment_cnv>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.solution.Solution.rst:53:<autosummary>:1
msgid "Current segment convergence value."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.solution.Solution.rst:53:<autosummary>:1
msgid ":py:obj:`decent_parm <ansys.mapdl.core.solution.Solution.decent_parm>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.solution.Solution.rst:53:<autosummary>:1
msgid "Descent parameter."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.solution.Solution.rst:53:<autosummary>:1
msgid ""
":py:obj:`displacement_cnv "
"<ansys.mapdl.core.solution.Solution.displacement_cnv>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.solution.Solution.rst:53:<autosummary>:1
msgid "Displacement convergence value."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.solution.Solution.rst:53:<autosummary>:1
msgid ""
":py:obj:`fluid_flow_cnv "
"<ansys.mapdl.core.solution.Solution.fluid_flow_cnv>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.solution.Solution.rst:53:<autosummary>:1
msgid "Fluid flow convergence value."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.solution.Solution.rst:53:<autosummary>:1
msgid ":py:obj:`force_cnv <ansys.mapdl.core.solution.Solution.force_cnv>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.solution.Solution.rst:53:<autosummary>:1
msgid "Force convergence value."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.solution.Solution.rst:53:<autosummary>:1
msgid ""
":py:obj:`heat_flow_cnv <ansys.mapdl.core.solution.Solution.heat_flow_cnv>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.solution.Solution.rst:53:<autosummary>:1
msgid "Heat flow convergence value."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.solution.Solution.rst:53:<autosummary>:1
msgid ""
":py:obj:`magnetic_flux_cnv "
"<ansys.mapdl.core.solution.Solution.magnetic_flux_cnv>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.solution.Solution.rst:53:<autosummary>:1
msgid "Magnetic flux convergence value."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.solution.Solution.rst:53:<autosummary>:1
msgid ":py:obj:`moment_cnv <ansys.mapdl.core.solution.Solution.moment_cnv>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.solution.Solution.rst:53:<autosummary>:1
msgid "Moment convergence value."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.solution.Solution.rst:53:<autosummary>:1
msgid ""
":py:obj:`mx_creep_rat <ansys.mapdl.core.solution.Solution.mx_creep_rat>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.solution.Solution.rst:53:<autosummary>:1
msgid "Maximum creep ratio."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.solution.Solution.rst:53:<autosummary>:1
msgid ":py:obj:`mx_dof <ansys.mapdl.core.solution.Solution.mx_dof>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.solution.Solution.rst:53:<autosummary>:1
msgid "Maximum degree of freedom value."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.solution.Solution.rst:53:<autosummary>:1
msgid ""
":py:obj:`mx_plastic_inc "
"<ansys.mapdl.core.solution.Solution.mx_plastic_inc>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.solution.Solution.rst:53:<autosummary>:1
msgid "Maximum plastic strain increment."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.solution.Solution.rst:53:<autosummary>:1
msgid ":py:obj:`n_cg_iter <ansys.mapdl.core.solution.Solution.n_cg_iter>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.solution.Solution.rst:53:<autosummary>:1
msgid ""
"Number of iterations in the PCG and symmetric JCG (non-complex version) "
"solvers."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.solution.Solution.rst:53:<autosummary>:1
msgid ":py:obj:`n_cmit <ansys.mapdl.core.solution.Solution.n_cmit>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.solution.Solution.rst:53:<autosummary>:1
msgid "Cumulative number of iterations."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.solution.Solution.rst:53:<autosummary>:1
msgid ":py:obj:`n_cmls <ansys.mapdl.core.solution.Solution.n_cmls>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.solution.Solution.rst:53:<autosummary>:1
msgid "Cumulative number of load steps."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.solution.Solution.rst:53:<autosummary>:1
msgid ":py:obj:`n_cmss <ansys.mapdl.core.solution.Solution.n_cmss>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.solution.Solution.rst:53:<autosummary>:1
msgid "Number of substeps."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.solution.Solution.rst:53:<autosummary>:1
msgid ":py:obj:`n_eqit <ansys.mapdl.core.solution.Solution.n_eqit>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.solution.Solution.rst:53:<autosummary>:1
msgid "Number of equilibrium iterations."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.solution.Solution.rst:53:<autosummary>:1
msgid ""
":py:obj:`pressure_conv <ansys.mapdl.core.solution.Solution.pressure_conv>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.solution.Solution.rst:53:<autosummary>:1
msgid "Pressure convergence value."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.solution.Solution.rst:53:<autosummary>:1
msgid ":py:obj:`res_eig <ansys.mapdl.core.solution.Solution.res_eig>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.solution.Solution.rst:53:<autosummary>:1
msgid "Response eigenvalue for 1st order systems."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.solution.Solution.rst:53:<autosummary>:1
msgid ":py:obj:`res_frq <ansys.mapdl.core.solution.Solution.res_frq>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.solution.Solution.rst:53:<autosummary>:1
msgid "Response frequency for 2nd order systems."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.solution.Solution.rst:53:<autosummary>:1
msgid ""
":py:obj:`rotation_cnv <ansys.mapdl.core.solution.Solution.rotation_cnv>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.solution.Solution.rst:53:<autosummary>:1
msgid "Rotation convergence value."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.solution.Solution.rst:53:<autosummary>:1
msgid ":py:obj:`smcv <ansys.mapdl.core.solution.Solution.smcv>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.solution.Solution.rst:53:<autosummary>:1
msgid "Scalar magnetic potential convergence value."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.solution.Solution.rst:53:<autosummary>:1
msgid ""
":py:obj:`temperature_cnv "
"<ansys.mapdl.core.solution.Solution.temperature_cnv>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.solution.Solution.rst:53:<autosummary>:1
msgid "Temperature convergence value."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.solution.Solution.rst:53:<autosummary>:1
msgid ""
":py:obj:`time_step_size "
"<ansys.mapdl.core.solution.Solution.time_step_size>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.solution.Solution.rst:53:<autosummary>:1
msgid "Time step size."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.solution.Solution.rst:53:<autosummary>:1
msgid ":py:obj:`vector_cnv <ansys.mapdl.core.solution.Solution.vector_cnv>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.solution.Solution.rst:53:<autosummary>:1
msgid "Vector magnetic potential convergence value."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.solution.Solution.rst:53:<autosummary>:1
msgid ""
":py:obj:`velocity_conv <ansys.mapdl.core.solution.Solution.velocity_conv>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.solution.Solution.rst:53:<autosummary>:1
msgid "Velocity convergence value."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.solution.Solution.rst:53:<autosummary>:1
msgid ""
":py:obj:`voltage_conv <ansys.mapdl.core.solution.Solution.voltage_conv>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.solution.Solution.rst:53:<autosummary>:1
msgid "Voltage convergence value."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.xpl.ansXpl.rst:2
msgid "ansys.mapdl.core.xpl.ansXpl"
msgstr ""

#: ../../pymapdl/doc/source/api/xpl.rst:11:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/xpl.pydocstring of
#: ansys.mapdl.core.xpl.ansXpl:2
msgid "ANSYS database explorer."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/xpl.pydocstring of
#: ansys.mapdl.core.xpl.ansXpl:24
msgid "Open a mode file and extract a vector."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.xpl.ansXpl.rst:37:<autosummary>:1
#: ../../pymapdl/src/ansys/mapdl/core/xpl.pydocstring of
#: ansys.mapdl.core.xpl.ansXpl.__init__:2
msgid "Initialize the class."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.xpl.ansXpl.rst:37:<autosummary>:1
msgid ":py:obj:`__init__ <ansys.mapdl.core.xpl.ansXpl.__init__>`\\ \\(mapdl\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.xpl.ansXpl.rst:37:<autosummary>:1
msgid ":py:obj:`close <ansys.mapdl.core.xpl.ansXpl.close>`\\ \\(\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.xpl.ansXpl.rst:37:<autosummary>:1
msgid "Close the MAPDL file after opening."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.xpl.ansXpl.rst:37:<autosummary>:1
msgid ":py:obj:`copy <ansys.mapdl.core.xpl.ansXpl.copy>`\\ \\(newfile\\[\\, option\\]\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.xpl.ansXpl.rst:37:<autosummary>:1
msgid "Copy the current opened as a new file."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.xpl.ansXpl.rst:37:<autosummary>:1
msgid ""
":py:obj:`extract <ansys.mapdl.core.xpl.ansXpl.extract>`\\ "
"\\(recordname\\[\\, sets\\, asarray\\]\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.xpl.ansXpl.rst:37:<autosummary>:1
msgid "Import a Matrix/Vector from a MAPDL result file."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.xpl.ansXpl.rst:37:<autosummary>:1
msgid ":py:obj:`goto <ansys.mapdl.core.xpl.ansXpl.goto>`\\ \\(path\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.xpl.ansXpl.rst:37:<autosummary>:1
msgid "Go directly to a new location in the file."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.xpl.ansXpl.rst:37:<autosummary>:1
msgid ":py:obj:`help <ansys.mapdl.core.xpl.ansXpl.help>`\\ \\(\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.xpl.ansXpl.rst:37:<autosummary>:1
msgid "XPL help message."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.xpl.ansXpl.rst:37:<autosummary>:1
msgid ":py:obj:`info <ansys.mapdl.core.xpl.ansXpl.info>`\\ \\(recname\\[\\, option\\]\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.xpl.ansXpl.rst:37:<autosummary>:1
msgid "Gives details on a specific record, or all records (using ``\"*\"``)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.xpl.ansXpl.rst:37:<autosummary>:1
msgid ":py:obj:`json <ansys.mapdl.core.xpl.ansXpl.json>`\\ \\(\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.xpl.ansXpl.rst:37:<autosummary>:1
msgid "Return a JSON representation of the tree or records."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.xpl.ansXpl.rst:37:<autosummary>:1
msgid ":py:obj:`list <ansys.mapdl.core.xpl.ansXpl.list>`\\ \\(\\[nlev\\]\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.xpl.ansXpl.rst:37:<autosummary>:1
msgid "List the records at the current level."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.xpl.ansXpl.rst:37:<autosummary>:1
msgid ":py:obj:`open <ansys.mapdl.core.xpl.ansXpl.open>`\\ \\(filename\\[\\, option\\]\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.xpl.ansXpl.rst:37:<autosummary>:1
msgid "Open an MAPDL file to explore."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.xpl.ansXpl.rst:37:<autosummary>:1
msgid ":py:obj:`print <ansys.mapdl.core.xpl.ansXpl.print>`\\ \\(recname\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.xpl.ansXpl.rst:37:<autosummary>:1
msgid "Print values of a given records, or all records (using ``\"*\"``)."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.xpl.ansXpl.rst:37:<autosummary>:1
msgid ""
":py:obj:`read <ansys.mapdl.core.xpl.ansXpl.read>`\\ \\(recordname\\[\\, "
"asarray\\]\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.xpl.ansXpl.rst:37:<autosummary>:1
msgid ""
"Read a record and return either an APDL math matrix or an APDL math vector."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.xpl.ansXpl.rst:37:<autosummary>:1
msgid ":py:obj:`save <ansys.mapdl.core.xpl.ansXpl.save>`\\ \\(\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.xpl.ansXpl.rst:37:<autosummary>:1
msgid "Save the current file, ignoring the marked records."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.xpl.ansXpl.rst:37:<autosummary>:1
msgid ":py:obj:`step <ansys.mapdl.core.xpl.ansXpl.step>`\\ \\(where\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.xpl.ansXpl.rst:37:<autosummary>:1
msgid "Go down in the tree of records"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.xpl.ansXpl.rst:37:<autosummary>:1
msgid ":py:obj:`up <ansys.mapdl.core.xpl.ansXpl.up>`\\ \\(\\[nlev\\]\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.xpl.ansXpl.rst:37:<autosummary>:1
msgid "Go up in the tree."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.xpl.ansXpl.rst:37:<autosummary>:1
msgid ":py:obj:`where <ansys.mapdl.core.xpl.ansXpl.where>`\\ \\(\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.xpl.ansXpl.rst:37:<autosummary>:1
msgid "Returns the current location in the MAPDL file."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.xpl.ansXpl.rst:37:<autosummary>:1
msgid ""
":py:obj:`write <ansys.mapdl.core.xpl.ansXpl.write>`\\ \\(recordname\\, "
"vecname\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.xpl.ansXpl.rst:37:<autosummary>:1
msgid "Write a given record back to an MAPDL file."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.xpl.ansXpl.rst:42:<autosummary>:1
msgid ":py:obj:`opened <ansys.mapdl.core.xpl.ansXpl.opened>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.mapdl.core.xpl.ansXpl.rst:42:<autosummary>:1
msgid "Check if a file is currently open."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.tools.path.change_default_ansys_path.rst:2
msgid "ansys.tools.path.change\\_default\\_ansys\\_path"
msgstr ""

#: ../../pymapdl/doc/source/api/launcher.rst:33:<autosummary>:1
#: ../../../../../../../opt/hostedtoolcache/Python/3.10.16/x64/lib/python3.10/site-packages/ansys/tools/path/path.pydocstring
#: of ansys.tools.path.path.change_default_ansys_path:2
msgid "Deprecated, use `change_default_mapdl_path` instead"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.tools.path.find_mapdl.rst:2
msgid "ansys.tools.path.find\\_mapdl"
msgstr ""

#: ../../pymapdl/doc/source/api/launcher.rst:33:<autosummary>:1
#: ../../../../../../../opt/hostedtoolcache/Python/3.10.16/x64/lib/python3.10/site-packages/ansys/tools/path/path.pydocstring
#: of ansys.tools.path.path.find_mapdl:2
msgid ""
"Searches for Ansys MAPDL path within the standard install location and "
"returns the path of the latest version."
msgstr ""

#: ../../../../../../../opt/hostedtoolcache/Python/3.10.16/x64/lib/python3.10/site-packages/ansys/tools/path/path.pydocstring
#: of ansys.tools.path.path.find_mapdl:8
msgid ""
"**version** : :class:`python:int`, :class:`python:float`, :obj:`optional`"
msgstr ""

#: ../../../../../../../opt/hostedtoolcache/Python/3.10.16/x64/lib/python3.10/site-packages/ansys/tools/path/path.pydocstring
#: of ansys.tools.path.path.find_mapdl:7
msgid "python:int, python:float, optional"
msgstr ""

#: ../../../../../../../opt/hostedtoolcache/Python/3.10.16/x64/lib/python3.10/site-packages/ansys/tools/path/path.pydocstring
#: of ansys.tools.path.path.find_mapdl:9
msgid ""
"Version of Ansys MAPDL to search for. If using ``int``, it should follow the"
" convention ``XXY``, where ``XX`` is the major version, and ``Y`` is the "
"minor. If using ``float``, it should follow the convention ``XX.Y``, where "
"``XX`` is the major version, and ``Y`` is the minor. If ``None``, use latest"
" available version on the machine."
msgstr ""

#: ../../../../../../../opt/hostedtoolcache/Python/3.10.16/x64/lib/python3.10/site-packages/ansys/tools/path/path.pydocstring
#: of ansys.tools.path.path.find_mapdl:37
msgid ""
":sphinx_autodoc_typehints_type:`\\:py\\:data\\:\\`\\~typing.Union\\`\\\\ "
"\\\\\\[\\:py\\:data\\:\\`\\~typing.Tuple\\`\\\\ "
"\\\\\\[\\:py\\:class\\:\\`str\\`\\, \\:py\\:class\\:\\`float\\`\\]\\, "
"\\:py\\:data\\:\\`\\~typing.Tuple\\`\\\\ "
"\\\\\\[\\:py\\:data\\:\\`\\~typing.Literal\\`\\\\ "
"\\\\\\[\\`\\`\\'\\'\\`\\`\\]\\, \\:py\\:data\\:\\`\\~typing.Literal\\`\\\\ "
"\\\\\\[\\`\\`\\'\\'\\`\\`\\]\\]\\]`"
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.tools.path.get_available_ansys_installations.rst:2
msgid "ansys.tools.path.get\\_available\\_ansys\\_installations"
msgstr ""

#: ../../pymapdl/doc/source/api/launcher.rst:33:<autosummary>:1
#: ../../../../../../../opt/hostedtoolcache/Python/3.10.16/x64/lib/python3.10/site-packages/ansys/tools/path/path.pydocstring
#: of ansys.tools.path.path.get_available_ansys_installations:2
msgid ""
"Return a dictionary of available Ansys unified installation versions with "
"their base paths."
msgstr ""

#: ../../../../../../../opt/hostedtoolcache/Python/3.10.16/x64/lib/python3.10/site-packages/ansys/tools/path/path.pydocstring
#: of ansys.tools.path.path.get_available_ansys_installations:10
msgid ":class:`python:dict`\\[int: :class:`python:str`]"
msgstr ""

#: ../../../../../../../opt/hostedtoolcache/Python/3.10.16/x64/lib/python3.10/site-packages/ansys/tools/path/path.pydocstring
#: of ansys.tools.path.path.get_available_ansys_installations:11
msgid "Return all Ansys unified installations paths in Windows."
msgstr ""

#: ../../../../../../../opt/hostedtoolcache/Python/3.10.16/x64/lib/python3.10/site-packages/ansys/tools/path/path.pydocstring
#: of ansys.tools.path.path.get_available_ansys_installations:20
msgid ""
":sphinx_autodoc_typehints_type:`\\:py\\:class\\:\\`\\~typing.Dict\\`\\\\ "
"\\\\\\[\\:py\\:class\\:\\`int\\`\\, \\:py\\:class\\:\\`str\\`\\]`"
msgstr ""

#: ../../../../../../../opt/hostedtoolcache/Python/3.10.16/x64/lib/python3.10/site-packages/ansys/tools/path/path.pydocstring
#: of ansys.tools.path.path.get_available_ansys_installations:24
msgid "On Windows, It uses the environment variable ``AWP_ROOTXXX``."
msgstr ""

#: ../../../../../../../opt/hostedtoolcache/Python/3.10.16/x64/lib/python3.10/site-packages/ansys/tools/path/path.pydocstring
#: of ansys.tools.path.path.get_available_ansys_installations:26
msgid ""
"The student versions are returned at the end of the dict and with negative "
"value for the version."
msgstr ""

#: ../../../../../../../opt/hostedtoolcache/Python/3.10.16/x64/lib/python3.10/site-packages/ansys/tools/path/path.pydocstring
#: of ansys.tools.path.path.get_available_ansys_installations:38
msgid "Return all installed Ansys paths in Linux."
msgstr ""

#: ../../pymapdl/doc/source/api/_autosummary/ansys.tools.path.save_ansys_path.rst:2
msgid "ansys.tools.path.save\\_ansys\\_path"
msgstr ""

#: ../../pymapdl/doc/source/api/launcher.rst:33:<autosummary>:1
#: ../../../../../../../opt/hostedtoolcache/Python/3.10.16/x64/lib/python3.10/site-packages/ansys/tools/path/path.pydocstring
#: of ansys.tools.path.path.save_ansys_path:2
msgid "Deprecated, use `save_mapdl_path` instead"
msgstr ""

#: ../../pymapdl/doc/source/api/commands.rst:4
msgid "Commands output"
msgstr ""

#: ../../pymapdl/doc/source/api/commands.rst:6
msgid ""
"Various PyMAPDL classes and commands which helps in data post-processing."
msgstr ""

#: ../../pymapdl/doc/source/api/commands.rst:8
msgid ""
"All these classes are subclasses of :py:class:`str` class, hence they "
"inherit all the methods and attributes of :class:`string`."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/commands.pydocstring of
#: ansys.mapdl.core.commands.BoundaryConditionsListingOutput:2
#: ../../pymapdl/src/ansys/mapdl/core/commands.pydocstring of
#: ansys.mapdl.core.commands.CommandListingOutput:2
msgid "Allow the conversion of command output to native Python types."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/commands.pydocstring of
#: ansys.mapdl.core.commands.CommandListingOutput:4
msgid ""
"Custom class for handling the commands whose output is sensible to be "
"converted to a list of lists, a Numpy array or a Pandas DataFrame."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/commands.pydocstring of
#: ansys.mapdl.core.commands.CommandListingOutput:7
msgid ""
"This class is a subclass of python :class:`str`, hence it has all the "
"methods of a string python object."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/commands.pydocstring of
#: ansys.mapdl.core.commands.BoundaryConditionsListingOutput:11
#: ../../pymapdl/src/ansys/mapdl/core/commands.pydocstring of
#: ansys.mapdl.core.commands.CommandListingOutput:10
msgid "Additionally it provides the following methods:"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/commands.pydocstring of
#: ansys.mapdl.core.commands.CommandListingOutput:12
msgid ""
":func:`to_list() <ansys.mapdl.core.commands.CommandListingOutput.to_list>`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/commands.pydocstring of
#: ansys.mapdl.core.commands.CommandListingOutput:13
msgid ""
":func:`to_array() <ansys.mapdl.core.commands.CommandListingOutput.to_array>`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/commands.pydocstring of
#: ansys.mapdl.core.commands.CommandListingOutput:14
msgid ""
":func:`to_dataframe() "
"<ansys.mapdl.core.commands.CommandListingOutput.to_dataframe>`"
msgstr ""

#: ../../pymapdl/doc/source/api/commands.rst:27:<autosummary>:1
msgid ""
":py:obj:`CommandListingOutput.to_list "
"<ansys.mapdl.core.commands.CommandListingOutput.to_list>`\\ \\(\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/commands.rst:27:<autosummary>:1
#: ../../pymapdl/doc/source/api/commands.rst:34:<autosummary>:1
msgid "Export the command output a list or list of lists."
msgstr ""

#: ../../pymapdl/doc/source/api/commands.rst:27:<autosummary>:1
msgid ""
":py:obj:`CommandListingOutput.to_array "
"<ansys.mapdl.core.commands.CommandListingOutput.to_array>`\\ \\(\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/commands.rst:27:<autosummary>:1
msgid "Export the command output as a numpy array."
msgstr ""

#: ../../pymapdl/doc/source/api/commands.rst:27:<autosummary>:1
msgid ""
":py:obj:`CommandListingOutput.to_dataframe "
"<ansys.mapdl.core.commands.CommandListingOutput.to_dataframe>`\\ "
"\\(\\[data\\, ...\\]\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/commands.rst:27:<autosummary>:1
msgid "Export the command output as a Pandas DataFrame."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/commands.pydocstring of
#: ansys.mapdl.core.commands.BoundaryConditionsListingOutput:4
msgid ""
"Custom class for handling the boundary condition listing commands whose "
"output is sensible to be converted to a list of lists, or a Pandas "
"DataFrame."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/commands.pydocstring of
#: ansys.mapdl.core.commands.BoundaryConditionsListingOutput:8
msgid ""
"This class is a subclass of python :class:`str`, hence it has all the "
"methods of a string python object and it can be used as such."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/commands.pydocstring of
#: ansys.mapdl.core.commands.BoundaryConditionsListingOutput:13
msgid ""
":func:`to_list() "
"<ansys.mapdl.core.commands.BoundaryConditionsListingOutput.to_list>`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/commands.pydocstring of
#: ansys.mapdl.core.commands.BoundaryConditionsListingOutput:14
msgid ""
":func:`to_dataframe() "
"<ansys.mapdl.core.commands.BoundaryConditionsListingOutput.to_dataframe>`"
msgstr ""

#: ../../pymapdl/doc/source/api/commands.rst:34:<autosummary>:1
msgid ""
":py:obj:`BoundaryConditionsListingOutput.to_list "
"<ansys.mapdl.core.commands.BoundaryConditionsListingOutput.to_list>`\\ "
"\\(\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/commands.rst:34:<autosummary>:1
msgid ""
":py:obj:`BoundaryConditionsListingOutput.to_dataframe "
"<ansys.mapdl.core.commands.BoundaryConditionsListingOutput.to_dataframe>`\\ "
"\\(\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/commands.rst:34:<autosummary>:1
msgid "Convert the command output to a Pandas Dataframe."
msgstr ""

#: ../../pymapdl/doc/source/api/components.rst:4
msgid "Components"
msgstr ""

#: ../../pymapdl/doc/source/api/components.rst:13:<autosummary>:1
msgid ""
":py:obj:`component.ComponentManager "
"<ansys.mapdl.core.component.ComponentManager>`\\ \\(mapdl\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/components.rst:13:<autosummary>:1
msgid ""
":py:obj:`component.Component <ansys.mapdl.core.component.Component>`\\ "
"\\(\\*args\\, \\*\\*kwargs\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/database.rst:4
msgid "Database"
msgstr ""

#: ../../pymapdl/doc/source/api/database.rst:13:<autosummary>:1
msgid ":py:obj:`MapdlDb <ansys.mapdl.core.database.MapdlDb>`\\ \\(mapdl\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/database.rst:13:<autosummary>:1
msgid "Abstract mapdl database class."
msgstr ""

#: ../../pymapdl/doc/source/api/database.rst:13:<autosummary>:1
msgid ":py:obj:`elems.DbElems <ansys.mapdl.core.database.elems.DbElems>`\\ \\(db\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/database.rst:13:<autosummary>:1
msgid ":py:obj:`nodes.DbNodes <ansys.mapdl.core.database.nodes.DbNodes>`\\ \\(db\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/geometry.rst:6
msgid "Geometry"
msgstr ""

#: ../../pymapdl/doc/source/api/geometry.rst:13:<autosummary>:1
msgid ""
":py:obj:`mapdl_geometry.Geometry "
"<ansys.mapdl.core.mapdl_geometry.Geometry>`\\ \\(mapdl\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/geometry.rst:13:<autosummary>:1
msgid ""
":py:obj:`mapdl_geometry.LegacyGeometry "
"<ansys.mapdl.core.mapdl_geometry.LegacyGeometry>`\\ \\(mapdl\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/helper.rst:4
msgid "Helper functions"
msgstr ""

#: ../../pymapdl/doc/source/api/helper.rst:5
msgid ""
"These methods simplify launching MAPDL, converting existing scripts, or "
"automating other tasks."
msgstr ""

#: ../../pymapdl/doc/source/api/helper.rst:19:<autosummary>:1
msgid ""
":py:obj:`convert_apdl_block <ansys.mapdl.core.convert.convert_apdl_block>`\\"
" \\(apdl\\_strings\\[\\, loglevel\\, ...\\]\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/helper.rst:19:<autosummary>:1
msgid ""
":py:obj:`convert_script <ansys.mapdl.core.convert.convert_script>`\\ "
"\\(filename\\_in\\[\\, filename\\_out\\, ...\\]\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/index.rst:17
msgid "Pyansys Math"
msgstr ""

#: ../../pymapdl/doc/source/api/index.rst:5
msgid "API reference"
msgstr ""

#: ../../pymapdl/doc/source/api/index.rst:7
msgid ""
"This page gives an overview of the API of several public PyMAPDL classes, "
"functions, and attributes. You can find them on the left sidebar."
msgstr ""

#: ../../pymapdl/doc/source/api/index.rst:11
msgid ""
"While these methods might include some MAPDL commands, they are generally "
"specific to PyMAPDL methods and classes. PyMAPDL methods extend existing "
"MAPDL methods in a Pythonic manner. For a mapping of MAPDL commands to "
"PyMAPDL, see :ref:`ref_mapdl_commands`."
msgstr ""

#: ../../pymapdl/doc/source/api/information.rst:4
msgid "``Information`` module"
msgstr ""

#: ../../pymapdl/doc/source/api/information.rst:7
msgid "``Information`` class attributes"
msgstr ""

#: ../../pymapdl/doc/source/api/information.rst:36:<autosummary>:1
msgid ""
":py:obj:`Information.aux_capabilities "
"<ansys.mapdl.core.information.Information.aux_capabilities>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/information.rst:36:<autosummary>:1
msgid ""
":py:obj:`Information.boundary_condition_information "
"<ansys.mapdl.core.information.Information.boundary_condition_information>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/information.rst:36:<autosummary>:1
msgid ""
":py:obj:`Information.config_values "
"<ansys.mapdl.core.information.Information.config_values>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/information.rst:36:<autosummary>:1
msgid ""
":py:obj:`Information.database_status "
"<ansys.mapdl.core.information.Information.database_status>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/information.rst:36:<autosummary>:1
msgid ""
":py:obj:`Information.global_status "
"<ansys.mapdl.core.information.Information.global_status>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/information.rst:36:<autosummary>:1
msgid ""
":py:obj:`Information.job_information "
"<ansys.mapdl.core.information.Information.job_information>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/information.rst:36:<autosummary>:1
msgid ""
":py:obj:`Information.load_step_options "
"<ansys.mapdl.core.information.Information.load_step_options>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/information.rst:36:<autosummary>:1
msgid ""
":py:obj:`Information.mapdl_version "
"<ansys.mapdl.core.information.Information.mapdl_version>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/information.rst:36:<autosummary>:1
msgid ""
":py:obj:`Information.model_information "
"<ansys.mapdl.core.information.Information.model_information>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/information.rst:36:<autosummary>:1
msgid ""
":py:obj:`Information.post_capabilities "
"<ansys.mapdl.core.information.Information.post_capabilities>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/information.rst:36:<autosummary>:1
msgid ""
":py:obj:`Information.preprocessing_capabilities "
"<ansys.mapdl.core.information.Information.preprocessing_capabilities>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/information.rst:36:<autosummary>:1
msgid ""
":py:obj:`Information.product "
"<ansys.mapdl.core.information.Information.product>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/information.rst:36:<autosummary>:1
msgid ""
":py:obj:`Information.products "
"<ansys.mapdl.core.information.Information.products>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/information.rst:36:<autosummary>:1
msgid ""
":py:obj:`Information.pymapdl_version "
"<ansys.mapdl.core.information.Information.pymapdl_version>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/information.rst:36:<autosummary>:1
msgid ""
":py:obj:`Information.routine_information "
"<ansys.mapdl.core.information.Information.routine_information>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/information.rst:36:<autosummary>:1
msgid ""
":py:obj:`Information.scratch_memory_status "
"<ansys.mapdl.core.information.Information.scratch_memory_status>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/information.rst:36:<autosummary>:1
msgid ""
":py:obj:`Information.solution_options "
"<ansys.mapdl.core.information.Information.solution_options>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/information.rst:36:<autosummary>:1
msgid ""
":py:obj:`Information.solution_options_configuration "
"<ansys.mapdl.core.information.Information.solution_options_configuration>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/information.rst:36:<autosummary>:1
msgid ""
":py:obj:`Information.stitles "
"<ansys.mapdl.core.information.Information.stitles>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/information.rst:36:<autosummary>:1
msgid ""
":py:obj:`Information.title "
"<ansys.mapdl.core.information.Information.title>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/information.rst:36:<autosummary>:1
msgid ""
":py:obj:`Information.titles "
"<ansys.mapdl.core.information.Information.titles>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/information.rst:36:<autosummary>:1
msgid ""
":py:obj:`Information.units "
"<ansys.mapdl.core.information.Information.units>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/inline.rst:4
msgid "Inline functions"
msgstr ""

#: ../../pymapdl/doc/source/api/inline.rst:8
msgid ""
"These are wrapped versions of inline APDL functions that perform operations "
"like finding the x-coordinate of a node given its number (``Query.nx``)."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/inline_functions.pydocstring
#: of ansys.mapdl.core.inline_functions.inline_functions.Query:2
msgid "Class containing all the inline functions of APDL."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/inline_functions.pydocstring
#: of ansys.mapdl.core.inline_functions.inline_functions.Query:4
msgid ""
"Most of the results of these methods are shortcuts for specific combinations"
" of arguments supplied to :func:`ansys.mapdl.core.Mapdl.get`."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/inline_functions.pydocstring
#: of ansys.mapdl.core.inline_functions.inline_functions.Query:7
msgid "Currently implemented functions:"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/inline_functions.pydocstring
#: of ansys.mapdl.core.inline_functions.inline_functions.Query:9
msgid "``centrx(e)`` - get the centroid x-coordinate of element `e`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/inline_functions.pydocstring
#: of ansys.mapdl.core.inline_functions.inline_functions.Query:10
msgid "``centry(e)`` - get the centroid y-coordinate of element `e`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/inline_functions.pydocstring
#: of ansys.mapdl.core.inline_functions.inline_functions.Query:11
msgid "``centrz(e)`` - get the centroid z-coordinate of element `e`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/inline_functions.pydocstring
#: of ansys.mapdl.core.inline_functions.inline_functions.Query:12
msgid "``nx(n)`` - get the x-coordinate of node `n`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/inline_functions.pydocstring
#: of ansys.mapdl.core.inline_functions.inline_functions.Query:13
msgid "``ny(n)`` - get the y-coordinate of node `n`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/inline_functions.pydocstring
#: of ansys.mapdl.core.inline_functions.inline_functions.Query:14
msgid "``nz(n)`` - get the z-coordinate of node `n`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/inline_functions.pydocstring
#: of ansys.mapdl.core.inline_functions.inline_functions.Query:15
msgid "``kx(k)`` - get the x-coordinate of keypoint `k`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/inline_functions.pydocstring
#: of ansys.mapdl.core.inline_functions.inline_functions.Query:16
msgid "``ky(k)`` - get the y-coordinate of keypoint `k`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/inline_functions.pydocstring
#: of ansys.mapdl.core.inline_functions.inline_functions.Query:17
msgid "``kz(k)`` - get the z-coordinate of keypoint `k`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/inline_functions.pydocstring
#: of ansys.mapdl.core.inline_functions.inline_functions.Query:18
msgid ""
"``lx(n, lfrac)`` - X-coordinate of line ``n`` at length fraction ``lfrac``"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/inline_functions.pydocstring
#: of ansys.mapdl.core.inline_functions.inline_functions.Query:19
msgid ""
"``ly(n, lfrac)`` - Y-coordinate of line ``n`` at length fraction ``lfrac``"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/inline_functions.pydocstring
#: of ansys.mapdl.core.inline_functions.inline_functions.Query:20
msgid ""
"``lz(n, lfrac)`` - Z-coordinate of line ``n`` at length fraction ``lfrac``"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/inline_functions.pydocstring
#: of ansys.mapdl.core.inline_functions.inline_functions.Query:21
msgid "``lsx(n, lfrac)`` - X-slope of line ``n`` at length fraction ``lfrac``"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/inline_functions.pydocstring
#: of ansys.mapdl.core.inline_functions.inline_functions.Query:22
msgid "``lsy(n, lfrac)`` - Y-slope of line ``n`` at length fraction ``lfrac``"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/inline_functions.pydocstring
#: of ansys.mapdl.core.inline_functions.inline_functions.Query:23
msgid "``lsz(n, lfrac)`` - Z-slope of line ``n`` at length fraction ``lfrac``"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/inline_functions.pydocstring
#: of ansys.mapdl.core.inline_functions.inline_functions.Query:24
msgid "``ux(n)`` - get the structural displacement at node `n` in x"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/inline_functions.pydocstring
#: of ansys.mapdl.core.inline_functions.inline_functions.Query:25
msgid "``uy(n)`` - get the structural displacement at node `n` in y"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/inline_functions.pydocstring
#: of ansys.mapdl.core.inline_functions.inline_functions.Query:26
msgid "``uz(n)`` - get the structural displacement at node `n` in z"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/inline_functions.pydocstring
#: of ansys.mapdl.core.inline_functions.inline_functions.Query:27
msgid "``rotx(n)`` - get the rotational displacement at node `n` in x"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/inline_functions.pydocstring
#: of ansys.mapdl.core.inline_functions.inline_functions.Query:28
msgid "``roty(n)`` - get the rotational displacement at node `n` in y"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/inline_functions.pydocstring
#: of ansys.mapdl.core.inline_functions.inline_functions.Query:29
msgid "``rotz(n)`` - get the rotational displacement at node `n` in z"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/inline_functions.pydocstring
#: of ansys.mapdl.core.inline_functions.inline_functions.Query:30
msgid "``nsel(n)`` - get the selection status of node `n`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/inline_functions.pydocstring
#: of ansys.mapdl.core.inline_functions.inline_functions.Query:31
msgid "``ksel(k)`` - get the selection status of keypoint `k`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/inline_functions.pydocstring
#: of ansys.mapdl.core.inline_functions.inline_functions.Query:32
msgid "``lsel(n)`` - get the selection status of line `n`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/inline_functions.pydocstring
#: of ansys.mapdl.core.inline_functions.inline_functions.Query:33
msgid "``asel(a)`` - get the selection status of area `a`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/inline_functions.pydocstring
#: of ansys.mapdl.core.inline_functions.inline_functions.Query:34
msgid "``esel(n)`` - get the selection status of element `e`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/inline_functions.pydocstring
#: of ansys.mapdl.core.inline_functions.inline_functions.Query:35
msgid "``vsel(v)`` - get the selection status of volume `v`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/inline_functions.pydocstring
#: of ansys.mapdl.core.inline_functions.inline_functions.Query:36
msgid ""
"``ndnext(n)`` - get the next selected node with a number greater than `n`."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/inline_functions.pydocstring
#: of ansys.mapdl.core.inline_functions.inline_functions.Query:37
msgid ""
"``kpnext(k)`` - get the next selected keypoint with a number greater than "
"`k`."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/inline_functions.pydocstring
#: of ansys.mapdl.core.inline_functions.inline_functions.Query:38
msgid ""
"``lsnext(n)`` - get the next selected line with a number greater than `n`."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/inline_functions.pydocstring
#: of ansys.mapdl.core.inline_functions.inline_functions.Query:39
msgid ""
"``arnext(a)`` - get the next selected area with a number greater than `a`."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/inline_functions.pydocstring
#: of ansys.mapdl.core.inline_functions.inline_functions.Query:40
msgid ""
"``elnext(e)`` - get the next selected element with a number greater than "
"`e`."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/inline_functions.pydocstring
#: of ansys.mapdl.core.inline_functions.inline_functions.Query:41
msgid ""
"``vlnext(v)`` - get the next selected volume with a number greater than `v`."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/inline_functions.pydocstring
#: of ansys.mapdl.core.inline_functions.inline_functions.Query:42
msgid "``nnear(n)`` - get the selected node nearest node `n`."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/inline_functions.pydocstring
#: of ansys.mapdl.core.inline_functions.inline_functions.Query:43
msgid "``knear(k)`` - get the selected keypoint nearest keypoint `k`."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/inline_functions.pydocstring
#: of ansys.mapdl.core.inline_functions.inline_functions.Query:44
msgid "``enearn(n)`` - get  the selected element nearest node `n`."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/inline_functions.pydocstring
#: of ansys.mapdl.core.inline_functions.inline_functions.Query:45
msgid "``node(x, y, z)`` - get the node closest to coordinate (x, y, z)"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/inline_functions.pydocstring
#: of ansys.mapdl.core.inline_functions.inline_functions.Query:46
msgid "``kp(x, y, z)`` - get the keypoint closest to coordinate (x, y, z)"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/inline_functions/inline_functions.pydocstring
#: of ansys.mapdl.core.inline_functions.inline_functions.Query:63
msgid ""
"In this example we construct a solid box and mesh it. Then we use the "
"``Query`` methods ``nx``, ``ny``, and ``nz`` to find the cartesian "
"coordinates of the first node. We can access these through the "
"``mapdl.queries`` property."
msgstr ""

#: ../../pymapdl/doc/source/api/inline.rst:53:<autosummary>:1
msgid ""
":py:obj:`Query.node <ansys.mapdl.core.inline_functions.Query.node>`\\ "
"\\(x\\, y\\, z\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/inline.rst:53:<autosummary>:1
msgid ""
":py:obj:`Query.kp <ansys.mapdl.core.inline_functions.Query.kp>`\\ \\(x\\, "
"y\\, z\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/inline.rst:53:<autosummary>:1
msgid ""
":py:obj:`Query.centrx <ansys.mapdl.core.inline_functions.Query.centrx>`\\ "
"\\(e\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/inline.rst:53:<autosummary>:1
msgid ""
":py:obj:`Query.centry <ansys.mapdl.core.inline_functions.Query.centry>`\\ "
"\\(e\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/inline.rst:53:<autosummary>:1
msgid ""
":py:obj:`Query.centrz <ansys.mapdl.core.inline_functions.Query.centrz>`\\ "
"\\(e\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/inline.rst:53:<autosummary>:1
msgid ":py:obj:`Query.kx <ansys.mapdl.core.inline_functions.Query.kx>`\\ \\(k\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/inline.rst:53:<autosummary>:1
msgid ":py:obj:`Query.ky <ansys.mapdl.core.inline_functions.Query.ky>`\\ \\(k\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/inline.rst:53:<autosummary>:1
msgid ":py:obj:`Query.kz <ansys.mapdl.core.inline_functions.Query.kz>`\\ \\(k\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/inline.rst:53:<autosummary>:1
msgid ":py:obj:`Query.nx <ansys.mapdl.core.inline_functions.Query.nx>`\\ \\(n\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/inline.rst:53:<autosummary>:1
msgid ":py:obj:`Query.ny <ansys.mapdl.core.inline_functions.Query.ny>`\\ \\(n\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/inline.rst:53:<autosummary>:1
msgid ":py:obj:`Query.nz <ansys.mapdl.core.inline_functions.Query.nz>`\\ \\(n\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/inline.rst:53:<autosummary>:1
msgid ":py:obj:`Query.ux <ansys.mapdl.core.inline_functions.Query.ux>`\\ \\(n\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/inline.rst:53:<autosummary>:1
msgid ":py:obj:`Query.uy <ansys.mapdl.core.inline_functions.Query.uy>`\\ \\(n\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/inline.rst:53:<autosummary>:1
msgid ":py:obj:`Query.uz <ansys.mapdl.core.inline_functions.Query.uz>`\\ \\(n\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/inline.rst:53:<autosummary>:1
msgid ""
":py:obj:`Query.rotx <ansys.mapdl.core.inline_functions.Query.rotx>`\\ "
"\\(n\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/inline.rst:53:<autosummary>:1
msgid ""
":py:obj:`Query.roty <ansys.mapdl.core.inline_functions.Query.roty>`\\ "
"\\(n\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/inline.rst:53:<autosummary>:1
msgid ""
":py:obj:`Query.rotz <ansys.mapdl.core.inline_functions.Query.rotz>`\\ "
"\\(n\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/inline.rst:53:<autosummary>:1
msgid ""
":py:obj:`Query.lx <ansys.mapdl.core.inline_functions.Query.lx>`\\ \\(n\\, "
"lfrac\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/inline.rst:53:<autosummary>:1
msgid ""
":py:obj:`Query.ly <ansys.mapdl.core.inline_functions.Query.ly>`\\ \\(n\\, "
"lfrac\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/inline.rst:53:<autosummary>:1
msgid ""
":py:obj:`Query.lz <ansys.mapdl.core.inline_functions.Query.lz>`\\ \\(n\\, "
"lfrac\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/inline.rst:53:<autosummary>:1
msgid ""
":py:obj:`Query.lsx <ansys.mapdl.core.inline_functions.Query.lsx>`\\ \\(n\\, "
"lfrac\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/inline.rst:53:<autosummary>:1
msgid ""
":py:obj:`Query.lsy <ansys.mapdl.core.inline_functions.Query.lsy>`\\ \\(n\\, "
"lfrac\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/inline.rst:53:<autosummary>:1
msgid ""
":py:obj:`Query.lsz <ansys.mapdl.core.inline_functions.Query.lsz>`\\ \\(n\\, "
"lfrac\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/inline.rst:53:<autosummary>:1
msgid ""
":py:obj:`Query.nsel <ansys.mapdl.core.inline_functions.Query.nsel>`\\ "
"\\(n\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/inline.rst:53:<autosummary>:1
msgid ""
":py:obj:`Query.ksel <ansys.mapdl.core.inline_functions.Query.ksel>`\\ "
"\\(k\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/inline.rst:53:<autosummary>:1
msgid ""
":py:obj:`Query.lsel <ansys.mapdl.core.inline_functions.Query.lsel>`\\ "
"\\(n\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/inline.rst:53:<autosummary>:1
msgid ""
":py:obj:`Query.asel <ansys.mapdl.core.inline_functions.Query.asel>`\\ "
"\\(a\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/inline.rst:53:<autosummary>:1
msgid ""
":py:obj:`Query.esel <ansys.mapdl.core.inline_functions.Query.esel>`\\ "
"\\(e\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/inline.rst:53:<autosummary>:1
msgid ""
":py:obj:`Query.vsel <ansys.mapdl.core.inline_functions.Query.vsel>`\\ "
"\\(v\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/krylov.rst:4
msgid "``KrylovSolver`` module"
msgstr ""

#: ../../pymapdl/doc/source/api/krylov.rst:5
msgid "These classes are specific to the ``KrylovSolver`` module:"
msgstr ""

#: ../../pymapdl/doc/source/api/krylov.rst:13:<autosummary>:1
msgid ""
":py:obj:`krylov.KrylovSolver <ansys.mapdl.core.krylov.KrylovSolver>`\\ "
"\\(mapdl\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/krylov.rst:13:<autosummary>:1
msgid "Abstract mapdl krylov class."
msgstr ""

#: ../../pymapdl/doc/source/api/launcher.rst:4
msgid "Launcher"
msgstr ""

#: ../../pymapdl/doc/source/api/launcher.rst:5
msgid ""
"Various PyMAPDL specific launcher commands. Most of these commands are "
"called from the library `ansys-tools-path <ansys_tools_path_>`_."
msgstr ""

#: ../../pymapdl/doc/source/api/launcher.rst:20:<autosummary>:1
msgid ""
":py:obj:`get_default_ansys <ansys.mapdl.core.launcher.get_default_ansys>`\\ "
"\\(\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/launcher.rst:20:<autosummary>:1
msgid ""
":py:obj:`get_default_ansys_path "
"<ansys.mapdl.core.launcher.get_default_ansys_path>`\\ \\(\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/launcher.rst:20:<autosummary>:1
msgid ""
":py:obj:`get_default_ansys_version "
"<ansys.mapdl.core.launcher.get_default_ansys_version>`\\ \\(\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/launcher.rst:20:<autosummary>:1
msgid ""
":py:obj:`launch_mapdl <ansys.mapdl.core.launcher.launch_mapdl>`\\ "
"\\(\\[exec\\_file\\, run\\_location\\, ...\\]\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/launcher.rst:20:<autosummary>:1
msgid ""
":py:obj:`close_all_local_instances "
"<ansys.mapdl.core.launcher.close_all_local_instances>`\\ "
"\\(\\[port\\_range\\]\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/launcher.rst:22
msgid "``ansys-tools-path`` functions"
msgstr ""

#: ../../pymapdl/doc/source/api/launcher.rst:33:<autosummary>:1
msgid ""
":py:obj:`change_default_ansys_path "
"<ansys.tools.path.change_default_ansys_path>`\\ \\(exe\\_loc\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/launcher.rst:33:<autosummary>:1
msgid ""
":py:obj:`find_mapdl <ansys.tools.path.find_mapdl>`\\ \\(\\[version\\, "
"supported\\_versions\\]\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/launcher.rst:33:<autosummary>:1
msgid ""
":py:obj:`save_ansys_path <ansys.tools.path.save_ansys_path>`\\ "
"\\(\\[exe\\_loc\\, allow\\_prompt\\]\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/launcher.rst:33:<autosummary>:1
msgid ""
":py:obj:`get_available_ansys_installations "
"<ansys.tools.path.get_available_ansys_installations>`\\ \\(\\[...\\]\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/logging.rst:4
msgid "Logging"
msgstr ""

#: ../../pymapdl/doc/source/api/logging.rst:5
msgid ""
"To make the logging of events consistent, PyMAPDL has a specific logging "
"architecture with global and local logging instances."
msgstr ""

#: ../../pymapdl/doc/source/api/logging.rst:8
msgid "For these two types of loggers, the default log message format is:"
msgstr ""

#: ../../pymapdl/doc/source/api/logging.rst:18
msgid ""
"The ``instance_name`` field depends on the name of the MAPDL instance, which"
" might not be set yet when the log record is created (for example, during "
"the initialization of the library).  If an MAPDL instance is not yet "
"created, this field might be empty."
msgstr ""

#: ../../pymapdl/doc/source/api/logging.rst:23
msgid ""
"Because both types of loggers are based in the Python module ``logging``, "
"you can use any of the tools provided in this module to extend or modify "
"these loggers."
msgstr ""

#: ../../pymapdl/doc/source/api/logging.rst:29
msgid "Logging API"
msgstr ""

#: ../../pymapdl/doc/source/api/logging.rst:36:<autosummary>:1
msgid ""
":py:obj:`Logger <ansys.mapdl.core.logging.Logger>`\\ \\(\\[level\\, "
"to\\_file\\, to\\_stdout\\, ...\\]\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:4
msgid "``Mapdl`` module"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:7
msgid "``Mapdl`` methods and attributes"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl.pydocstring of
#: ansys.mapdl.core.mapdl.MapdlBase:2
msgid "Base MAPDL class shared across all MAPDL subclasses."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl.pydocstring of
#: ansys.mapdl.core.mapdl.MapdlBase:4
msgid ""
"This class should NOT be imported by itself. You should always import a "
"subclass of it like :class:`MapdlGrpc "
"<ansys.mapdl.core.mapdl_grpc.MapdlGrpc>`"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:80:<autosummary>:1
msgid ""
":py:obj:`Mapdl.add_file_handler <ansys.mapdl.core.Mapdl.add_file_handler>`\\"
" \\(filepath\\[\\, append\\, level\\]\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:80:<autosummary>:1
msgid "Add a file handler to the mapdl log."
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:80:<autosummary>:1
msgid ":py:obj:`Mapdl.allow_ignore <ansys.mapdl.core.Mapdl.allow_ignore>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:80:<autosummary>:1
msgid ":py:obj:`Mapdl.busy <ansys.mapdl.core.Mapdl.busy>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:80:<autosummary>:1
msgid ":py:obj:`Mapdl.chain_commands <ansys.mapdl.core.Mapdl.chain_commands>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:80:<autosummary>:1
msgid ""
":py:obj:`Mapdl.check_parameter_names "
"<ansys.mapdl.core.Mapdl.check_parameter_names>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:80:<autosummary>:1
msgid ""
":py:obj:`Mapdl.default_file_type_for_plots "
"<ansys.mapdl.core.Mapdl.default_file_type_for_plots>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:80:<autosummary>:1
msgid ":py:obj:`Mapdl.directory <ansys.mapdl.core.Mapdl.directory>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:80:<autosummary>:1
msgid ":py:obj:`Mapdl.exited <ansys.mapdl.core.Mapdl.exited>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:80:<autosummary>:1
msgid ":py:obj:`Mapdl.exiting <ansys.mapdl.core.Mapdl.exiting>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:80:<autosummary>:1
msgid ""
":py:obj:`Mapdl.file_type_for_plots "
"<ansys.mapdl.core.Mapdl.file_type_for_plots>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:80:<autosummary>:1
msgid ""
":py:obj:`Mapdl.finish_job_on_exit "
"<ansys.mapdl.core.Mapdl.finish_job_on_exit>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:80:<autosummary>:1
msgid ":py:obj:`Mapdl.force_output <ansys.mapdl.core.Mapdl.force_output>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:80:<autosummary>:1
msgid ""
":py:obj:`Mapdl.get <ansys.mapdl.core.Mapdl.get>`\\ \\(\\[par\\, entity\\, "
"entnum\\, item1\\, ...\\]\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:80:<autosummary>:1
msgid ""
":py:obj:`Mapdl.get_array <ansys.mapdl.core.Mapdl.get_array>`\\ "
"\\(\\[entity\\, entnum\\, item1\\, ...\\]\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:80:<autosummary>:1
msgid ""
":py:obj:`Mapdl.get_esol <ansys.mapdl.core.Mapdl.get_esol>`\\ \\(\\[elem\\, "
"node\\, item\\, comp\\, ...\\]\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:80:<autosummary>:1
msgid ""
":py:obj:`Mapdl.get_nodal_constrains "
"<ansys.mapdl.core.Mapdl.get_nodal_constrains>`\\ \\(\\[label\\]\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:80:<autosummary>:1
msgid ""
":py:obj:`Mapdl.get_nodal_loads <ansys.mapdl.core.Mapdl.get_nodal_loads>`\\ "
"\\(\\[label\\]\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:80:<autosummary>:1
msgid ""
":py:obj:`Mapdl.get_nsol <ansys.mapdl.core.Mapdl.get_nsol>`\\ \\(\\[node\\, "
"item\\, comp\\, name\\, sector\\]\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:80:<autosummary>:1
msgid ""
":py:obj:`Mapdl.get_value <ansys.mapdl.core.Mapdl.get_value>`\\ "
"\\(\\[entity\\, entnum\\, item1\\, ...\\]\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:80:<autosummary>:1
msgid ""
":py:obj:`Mapdl.get_variable <ansys.mapdl.core.Mapdl.get_variable>`\\ "
"\\(\\[ir\\, tstrt\\, kcplx\\]\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:80:<autosummary>:1
msgid ":py:obj:`Mapdl.hostname <ansys.mapdl.core.Mapdl.hostname>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:80:<autosummary>:1
msgid ":py:obj:`Mapdl.ignore_errors <ansys.mapdl.core.Mapdl.ignore_errors>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:80:<autosummary>:1
msgid ":py:obj:`Mapdl.info <ansys.mapdl.core.Mapdl.info>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:80:<autosummary>:1
msgid ""
":py:obj:`Mapdl.input_strings <ansys.mapdl.core.Mapdl.input_strings>`\\ "
"\\(commands\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:80:<autosummary>:1
msgid ":py:obj:`Mapdl.is_alive <ansys.mapdl.core.Mapdl.is_alive>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:80:<autosummary>:1
msgid ":py:obj:`Mapdl.is_console <ansys.mapdl.core.Mapdl.is_console>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:80:<autosummary>:1
msgid ":py:obj:`Mapdl.is_corba <ansys.mapdl.core.Mapdl.is_corba>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:80:<autosummary>:1
msgid ":py:obj:`Mapdl.is_grpc <ansys.mapdl.core.Mapdl.is_grpc>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:80:<autosummary>:1
msgid ":py:obj:`Mapdl.jobid <ansys.mapdl.core.Mapdl.jobid>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:80:<autosummary>:1
msgid "Returns the job id where the MAPDL is running in."
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:80:<autosummary>:1
msgid ":py:obj:`Mapdl.jobname <ansys.mapdl.core.Mapdl.jobname>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:80:<autosummary>:1
msgid ":py:obj:`Mapdl.kill_job <ansys.mapdl.core.Mapdl.kill_job>`\\ \\(jobid\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:80:<autosummary>:1
msgid ":py:obj:`Mapdl.last_response <ansys.mapdl.core.Mapdl.last_response>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:80:<autosummary>:1
msgid ":py:obj:`Mapdl.launched <ansys.mapdl.core.Mapdl.launched>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:80:<autosummary>:1
msgid ""
":py:obj:`Mapdl.list_error_file <ansys.mapdl.core.Mapdl.list_error_file>`\\ "
"\\(\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:80:<autosummary>:1
msgid ""
":py:obj:`Mapdl.list_files <ansys.mapdl.core.Mapdl.list_files>`\\ "
"\\(\\[refresh\\_cache\\]\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:80:<autosummary>:1
msgid ""
":py:obj:`Mapdl.load_array <ansys.mapdl.core.Mapdl.load_array>`\\ \\(name\\, "
"array\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:80:<autosummary>:1
msgid ""
":py:obj:`Mapdl.load_table <ansys.mapdl.core.Mapdl.load_table>`\\ \\(name\\, "
"array\\[\\, var1\\, var2\\, ...\\]\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:80:<autosummary>:1
msgid ":py:obj:`Mapdl.locked <ansys.mapdl.core.Mapdl.locked>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:80:<autosummary>:1
msgid ":py:obj:`Mapdl.logger <ansys.mapdl.core.Mapdl.logger>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:80:<autosummary>:1
msgid ":py:obj:`Mapdl.mapdl_on_hpc <ansys.mapdl.core.Mapdl.mapdl_on_hpc>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:80:<autosummary>:1
msgid ":py:obj:`Mapdl.mute <ansys.mapdl.core.Mapdl.mute>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:80:<autosummary>:1
msgid ":py:obj:`Mapdl.name <ansys.mapdl.core.Mapdl.name>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:80:<autosummary>:1
msgid ""
":py:obj:`Mapdl.non_interactive <ansys.mapdl.core.Mapdl.non_interactive>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:80:<autosummary>:1
msgid ":py:obj:`Mapdl.on_docker <ansys.mapdl.core.Mapdl.on_docker>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:80:<autosummary>:1
msgid ""
":py:obj:`Mapdl.open_apdl_log <ansys.mapdl.core.Mapdl.open_apdl_log>`\\ "
"\\(filename\\[\\, mode\\]\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:80:<autosummary>:1
msgid ""
":py:obj:`Mapdl.open_gui <ansys.mapdl.core.Mapdl.open_gui>`\\ "
"\\(\\[include\\_result\\, inplace\\]\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:80:<autosummary>:1
msgid ":py:obj:`Mapdl.platform <ansys.mapdl.core.Mapdl.platform>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:80:<autosummary>:1
msgid ":py:obj:`Mapdl.print_com <ansys.mapdl.core.Mapdl.print_com>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:80:<autosummary>:1
msgid ""
":py:obj:`Mapdl.process_is_alive <ansys.mapdl.core.Mapdl.process_is_alive>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:80:<autosummary>:1
msgid ""
":py:obj:`Mapdl.remove_file_handler "
"<ansys.mapdl.core.Mapdl.remove_file_handler>`\\ \\(\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:80:<autosummary>:1
msgid ""
":py:obj:`Mapdl.remove_temp_dir_on_exit "
"<ansys.mapdl.core.Mapdl.remove_temp_dir_on_exit>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:80:<autosummary>:1
msgid ":py:obj:`Mapdl.result <ansys.mapdl.core.Mapdl.result>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:80:<autosummary>:1
msgid ":py:obj:`Mapdl.result_file <ansys.mapdl.core.Mapdl.result_file>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:80:<autosummary>:1
msgid ""
":py:obj:`Mapdl.run <ansys.mapdl.core.Mapdl.run>`\\ \\(command\\[\\, "
"write\\_to\\_log\\, mute\\]\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:80:<autosummary>:1
msgid ""
":py:obj:`Mapdl.run_as_routine <ansys.mapdl.core.Mapdl.run_as_routine>`\\ "
"\\(routine\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:80:<autosummary>:1
msgid ""
":py:obj:`Mapdl.run_multiline <ansys.mapdl.core.Mapdl.run_multiline>`\\ "
"\\(commands\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:80:<autosummary>:1
msgid ":py:obj:`Mapdl.save_selection <ansys.mapdl.core.Mapdl.save_selection>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:80:<autosummary>:1
msgid ""
":py:obj:`Mapdl.scalar_param <ansys.mapdl.core.Mapdl.scalar_param>`\\ "
"\\(pname\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:80:<autosummary>:1
msgid ""
":py:obj:`Mapdl.screenshot <ansys.mapdl.core.Mapdl.screenshot>`\\ "
"\\(\\[savefig\\]\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:80:<autosummary>:1
msgid ""
":py:obj:`Mapdl.set_log_level <ansys.mapdl.core.Mapdl.set_log_level>`\\ "
"\\(loglevel\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:80:<autosummary>:1
msgid ":py:obj:`Mapdl.thermal_result <ansys.mapdl.core.Mapdl.thermal_result>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:80:<autosummary>:1
msgid ":py:obj:`Mapdl.use_vtk <ansys.mapdl.core.Mapdl.use_vtk>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:80:<autosummary>:1
msgid ":py:obj:`Mapdl.version <ansys.mapdl.core.Mapdl.version>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:82
msgid "Constants"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:89:<autosummary>:1
msgid ""
":py:obj:`plotting.ALLOWED_TARGETS "
"<ansys.mapdl.core.plotting.ALLOWED_TARGETS>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:89:<autosummary>:1
msgid ":py:obj:`plotting.BCS <ansys.mapdl.core.plotting.BCS>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:91
msgid "``mapdl_grpc.MapdlGrpc`` methods"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc:2
msgid ""
"This class connects to a GRPC MAPDL server and allows commands to be passed "
"to a persistent session."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc:9
msgid "IP address to connect to the server.  The default is 'localhost'."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc:11
msgid "**port** : :class:`python:int`, :obj:`optional`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc:12
msgid "Port to connect to the MAPDL server.  The default is ``50052``."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc:14
msgid "**timeout** : :class:`python:float`, :obj:`optional`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc:15
msgid "Maximum allowable time to connect to the MAPDL server."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc:18
msgid ""
"Sets which messages are printed to the console.  Default 'INFO' prints out "
"all ANSYS messages, 'WARNING` prints only messages containing ANSYS "
"warnings, and 'ERROR' prints only error messages."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc:24
msgid ""
"Exit MAPDL when Python exits or when this instance is garbage collected."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc:27
msgid ""
"**set_no_abort** : :ref:`bool <python:bltin-boolean-values>`, "
":obj:`optional`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc:28
msgid ""
"Sets MAPDL to not abort at the first error within /BATCH mode. The default "
"is ``True``."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc:31
msgid ""
"**remove_temp_dir** : :ref:`bool <python:bltin-boolean-values>`, "
":obj:`optional`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc:32
msgid ""
"When this parameter is ``True``, the MAPDL working directory will be deleted"
" when MAPDL is exited provided that it is within the temporary user "
"directory. The default is ``False``."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc:36
msgid ""
"**log_file** : :ref:`bool <python:bltin-boolean-values>`, :obj:`optional`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc:37
msgid ""
"Copy the log to a file called `logs.log` located where the python script is "
"executed. The default is ``True``."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc:41
msgid ""
"Print the command ``/COM`` arguments to the standard output. The default is "
"``False``."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc:44
msgid "**disable_run_at_connect: bool, optional**"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc:45
msgid ""
"Whether to disable the housekeeping commands when connecting. The default is"
" ``False``."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc:48
msgid "**channel** : :obj:`grpc.Channel`, :obj:`optional`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc:47
msgid "grpc.Channel, optional"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc:49
msgid ""
"gRPC channel to use for the connection. This parameter can be used as an "
"alternative to the ``ip`` and ``port`` parameters."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc:52
msgid ""
"**remote_instance** : :obj:`ansys.platform.instancemanagement.Instance`"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc:51
msgid "ansys.platform.instancemanagement.Instance"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc:53
msgid ""
"The corresponding remote instance when MAPDL is launched through PyPIM. This"
" instance will be deleted when calling :func:`Mapdl.exit "
"<ansys.mapdl.core.Mapdl.exit>`."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc:57
msgid "**file_type_for_plots: [\"PNG\", \"TIFF\", \"PNG\", \"VRML\", \"TERM\"], Optional**"
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc:58
msgid ""
"Change the default file type for plots using ``/SHOW``, by default it is "
"``PNG``."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc:75
msgid ""
"Connect to an instance of MAPDL already running on locally on the default "
"port 50052."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc:81
msgid "Connect to an instance of MAPDL running on the LAN on a default port."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc:85
msgid ""
"Connect to an instance of MAPDL running on the LAN on a non-default port."
msgstr ""

#: ../../pymapdl/src/ansys/mapdl/core/mapdl_grpc.pydocstring of
#: ansys.mapdl.core.mapdl_grpc.MapdlGrpc:89
msgid ""
"If you wish to customize the channel, you can also directly connect directly"
" to gRPC channels. For example, if you wanted to create an insecure channel "
"with a maximum message length of 8 MB."
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:113:<autosummary>:1
msgid ""
":py:obj:`mapdl_grpc.MapdlGrpc.channel_state "
"<ansys.mapdl.core.mapdl_grpc.MapdlGrpc.channel_state>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:113:<autosummary>:1
msgid ""
":py:obj:`mapdl_grpc.MapdlGrpc.check_status "
"<ansys.mapdl.core.mapdl_grpc.MapdlGrpc.check_status>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:113:<autosummary>:1
msgid "Return MAPDL status."
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:113:<autosummary>:1
msgid ""
":py:obj:`mapdl_grpc.MapdlGrpc.connection "
"<ansys.mapdl.core.mapdl_grpc.MapdlGrpc.connection>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:113:<autosummary>:1
msgid ""
":py:obj:`mapdl_grpc.MapdlGrpc.download "
"<ansys.mapdl.core.mapdl_grpc.MapdlGrpc.download>`\\ \\(files\\[\\, ...\\]\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:113:<autosummary>:1
msgid ""
":py:obj:`mapdl_grpc.MapdlGrpc.download_project "
"<ansys.mapdl.core.mapdl_grpc.MapdlGrpc.download_project>`\\ \\(\\[...\\]\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:113:<autosummary>:1
msgid ""
":py:obj:`mapdl_grpc.MapdlGrpc.download_result "
"<ansys.mapdl.core.mapdl_grpc.MapdlGrpc.download_result>`\\ \\(\\[path\\, "
"...\\]\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:113:<autosummary>:1
msgid ""
":py:obj:`mapdl_grpc.MapdlGrpc.file "
"<ansys.mapdl.core.mapdl_grpc.MapdlGrpc.file>`\\ \\(\\[fname\\, ext\\]\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:113:<autosummary>:1
msgid ""
":py:obj:`mapdl_grpc.MapdlGrpc.ip "
"<ansys.mapdl.core.mapdl_grpc.MapdlGrpc.ip>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:113:<autosummary>:1
msgid ""
":py:obj:`mapdl_grpc.MapdlGrpc.is_local "
"<ansys.mapdl.core.mapdl_grpc.MapdlGrpc.is_local>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:113:<autosummary>:1
msgid ""
":py:obj:`mapdl_grpc.MapdlGrpc.list_error_file "
"<ansys.mapdl.core.mapdl_grpc.MapdlGrpc.list_error_file>`\\ \\(\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:113:<autosummary>:1
msgid ""
":py:obj:`mapdl_grpc.MapdlGrpc.list_files "
"<ansys.mapdl.core.mapdl_grpc.MapdlGrpc.list_files>`\\ "
"\\(\\[refresh\\_cache\\]\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:113:<autosummary>:1
msgid ""
":py:obj:`mapdl_grpc.MapdlGrpc.mute "
"<ansys.mapdl.core.mapdl_grpc.MapdlGrpc.mute>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:113:<autosummary>:1
msgid ""
":py:obj:`mapdl_grpc.MapdlGrpc.port "
"<ansys.mapdl.core.mapdl_grpc.MapdlGrpc.port>`\\"
msgstr ""

#: ../../pymapdl/doc/source/api/mapdl.rst:113:<autosummary>:1
msgid ""
":py:obj:`mapdl_grpc.MapdlGrpc.upload "
"<ansys.mapdl.core.mapdl_grpc.MapdlGrpc.upload>`\\ \\(file\\_name\\[\\, "
"...\\]\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/mesh.rst:4
msgid "Mesh"
msgstr ""

#: ../../pymapdl/doc/source/api/mesh.rst:12:<autosummary>:1
msgid ""
":py:obj:`mesh_grpc.MeshGrpc <ansys.mapdl.core.mesh_grpc.MeshGrpc>`\\ "
"\\(mapdl\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/parameters.rst:12:<autosummary>:1
msgid ""
":py:obj:`parameters.Parameters <ansys.mapdl.core.parameters.Parameters>`\\ "
"\\(mapdl\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/plotting.rst:4
msgid "Plotting"
msgstr ""

#: ../../pymapdl/doc/source/api/plotting.rst:5
msgid "Various PyMAPDL specific plotting commands."
msgstr ""

#: ../../pymapdl/doc/source/api/plotting.rst:20:<autosummary>:1
msgid ""
":py:obj:`plotting.MapdlPlotter <ansys.mapdl.core.plotting.MapdlPlotter>`\\ "
"\\(\\[use\\_trame\\, theme\\]\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/plotting.rst:20:<autosummary>:1
msgid ""
":py:obj:`plotting.MapdlTheme <ansys.mapdl.core.plotting.MapdlTheme>`\\ "
"\\(\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/plotting.rst:20:<autosummary>:1
msgid ""
":py:obj:`Mapdl.aplot <ansys.mapdl.core.Mapdl.aplot>`\\ \\(\\[na1\\, na2\\, "
"ninc\\, degen\\, scale\\, ...\\]\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/plotting.rst:20:<autosummary>:1
msgid ""
":py:obj:`Mapdl.eplot <ansys.mapdl.core.Mapdl.eplot>`\\ "
"\\(\\[show\\_node\\_numbering\\, vtk\\]\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/plotting.rst:20:<autosummary>:1
msgid ""
":py:obj:`Mapdl.kplot <ansys.mapdl.core.Mapdl.kplot>`\\ \\(\\[np1\\, np2\\, "
"ninc\\, lab\\, vtk\\, ...\\]\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/plotting.rst:20:<autosummary>:1
msgid ""
":py:obj:`Mapdl.lplot <ansys.mapdl.core.Mapdl.lplot>`\\ \\(\\[nl1\\, nl2\\, "
"ninc\\, vtk\\, ...\\]\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/plotting.rst:20:<autosummary>:1
msgid ":py:obj:`Mapdl.nplot <ansys.mapdl.core.Mapdl.nplot>`\\ \\(\\[nnum\\, vtk\\]\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/plotting.rst:20:<autosummary>:1
msgid ""
":py:obj:`Mapdl.vplot <ansys.mapdl.core.Mapdl.vplot>`\\ \\(\\[nv1\\, nv2\\, "
"ninc\\, degen\\, scale\\, ...\\]\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/pool.rst:4
msgid "MAPDL pool"
msgstr ""

#: ../../pymapdl/doc/source/api/pool.rst:12:<autosummary>:1
msgid ""
":py:obj:`pool.MapdlPool <ansys.mapdl.core.pool.MapdlPool>`\\ "
"\\(\\[n\\_instances\\, wait\\, ...\\]\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/post.rst:5
msgid "``PostProcessing`` class"
msgstr ""

#: ../../pymapdl/doc/source/api/post.rst:7
msgid ""
"The ``PostProcessing`` class supports postprocessing directly from the MAPDL"
" live instance. If you want to postprocess MAPDL result files outside of "
"PyMAPDL, you can use one of these packages:"
msgstr ""

#: ../../pymapdl/doc/source/api/post.rst:11
msgid ""
"`PyDPF-Core <dpf_core_docs_>`_ : Postprocessing using the Data Processing "
"Framework (DPF). DPF-Core provides more complex and more powerful "
"postprocessing APIs."
msgstr ""

#: ../../pymapdl/doc/source/api/post.rst:12
msgid ""
"`PyDPF-Post <dpf_post_docs_>`_ : Streamlined and simplified DPF "
"postprocessing. PyDPF-Post is a higher-level package that uses PyDPF-Core."
msgstr ""

#: ../../pymapdl/doc/source/api/post.rst:13
msgid ""
"`PyMAPDL Reader <legacy_reader_docs_>`_: Legacy result file reader. PyMAPDL "
"Reader supports result files for MAPDL 14.5 and later."
msgstr ""

#: ../../pymapdl/doc/source/api/post.rst:21:<autosummary>:1
msgid ""
":py:obj:`post.PostProcessing <ansys.mapdl.core.post.PostProcessing>`\\ "
"\\(mapdl\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/solution.rst:4
msgid "Solution"
msgstr ""

#: ../../pymapdl/doc/source/api/solution.rst:13:<autosummary>:1
msgid ""
":py:obj:`solution.Solution <ansys.mapdl.core.solution.Solution>`\\ "
"\\(mapdl\\)"
msgstr ""

#: ../../pymapdl/doc/source/api/xpl.rst:4
msgid "Database explorer"
msgstr ""

#: ../../pymapdl/doc/source/api/xpl.rst:11:<autosummary>:1
msgid ":py:obj:`xpl.ansXpl <ansys.mapdl.core.xpl.ansXpl>`\\ \\(mapdl\\)"
msgstr ""
